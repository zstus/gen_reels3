{"ast":null,"code":"var _jsxFileName = \"/zstus/frontend/src/components/TextImagePairManager.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, memo, useEffect, useRef } from 'react';\nimport { Box, Typography, Button, Grid, Card, CardContent, IconButton, Alert, CircularProgress, TextField, FormControlLabel, Switch, Collapse, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport { CloudUpload, Delete, AutoFixHigh, Refresh, Download, ExpandMore, ExpandLess, Movie as MovieIcon, VideoLibrary } from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextImagePairManager = ({\n  content,\n  imageUploadMode,\n  images,\n  onChange,\n  jobId\n}) => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [generationStatus, setGenerationStatus] = useState({});\n  const [uploadErrors, setUploadErrors] = useState({});\n  const [customPrompts, setCustomPrompts] = useState({});\n  const [promptsExpanded, setPromptsExpanded] = useState({});\n\n  // 최근 동영상 관리 상태\n  const [videoDialogOpen, setVideoDialogOpen] = useState(false);\n  const [recentVideos, setRecentVideos] = useState([]);\n  const [loadingVideos, setLoadingVideos] = useState(false);\n  const [loadingMoreVideos, setLoadingMoreVideos] = useState(false);\n  const [selectedVideoForIndex, setSelectedVideoForIndex] = useState(null);\n  const [videoPagination, setVideoPagination] = useState({\n    current_page: 1,\n    total_pages: 0,\n    total_items: 0,\n    has_next: false,\n    has_previous: false\n  });\n\n  // 최신 images 상태를 추적하기 위한 ref\n  const imagesRef = useRef(images);\n\n  // images prop이 변경될 때마다 ref 업데이트\n  useEffect(() => {\n    imagesRef.current = images;\n  }, [images]);\n\n  // 커스텀 프롬프트 관리 함수들 (useCallback으로 최적화)\n  const updateCustomPrompt = useCallback((imageIndex, prompt, enabled) => {\n    setCustomPrompts(prev => {\n      const currentPrompt = prev[imageIndex];\n      // 값이 같으면 업데이트하지 않음 (불필요한 리렌더링 방지)\n      if (currentPrompt && currentPrompt.prompt === prompt && currentPrompt.enabled === enabled) {\n        return prev;\n      }\n      return {\n        ...prev,\n        [imageIndex]: {\n          imageIndex,\n          prompt,\n          enabled\n        }\n      };\n    });\n  }, []);\n  const togglePromptExpanded = useCallback(imageIndex => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  }, []);\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  const textImagePairs = useMemo(() => {\n    const bodyTexts = Object.entries(content).filter(([key, value]) => key.startsWith('body') && (value === null || value === void 0 ? void 0 : value.trim())).map(([key, value], index) => ({\n      key,\n      value: value.trim(),\n      index\n    }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map();\n    images.forEach(img => {\n      const storedIndex = img.__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${img.__imageIndex})`));\n    const pairs = [];\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({\n        key,\n        value,\n        index\n      }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index,\n          // 실제 이미지 인덱스 저장\n          isGenerating: false,\n          customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n          useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false\n        });\n      });\n    } else if (imageUploadMode === 'per-two-scripts') {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex,\n            // 실제 이미지 인덱스 저장\n            isGenerating: false,\n            customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n            useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false\n          });\n        }\n      }\n    } else if (imageUploadMode === 'single-for-all') {\n      // 모든 텍스트에 이미지 1개\n      const allTexts = bodyTexts.map(({\n        key,\n        value\n      }) => key.replace('body', '대사')).join(' + ');\n      const allContent = bodyTexts.map(({\n        value\n      }) => value).join(' / ');\n      const foundImage = imageMap.get(0); // 첫 번째 (그리고 유일한) 이미지\n      const customPrompt = customPrompts[0];\n      console.log(`📋 single-for-all: 모든 대사, imageIndex=0, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n      pairs.push({\n        textIndex: 0,\n        textKey: allTexts,\n        textContent: allContent,\n        image: foundImage || null,\n        imageIndex: 0,\n        // 항상 첫 번째 이미지 인덱스 사용\n        isGenerating: false,\n        customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n        useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false\n      });\n    }\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts]);\n\n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${img.__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex, acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증 (모드에 따라 다른 제한)\n    const maxSize = imageUploadMode === 'single-for-all' ? 40 * 1024 * 1024 : 10 * 1024 * 1024;\n    const maxSizeText = imageUploadMode === 'single-for-all' ? '40MB' : '10MB';\n    if (file.size > maxSize) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: `파일 크기가 ${maxSizeText}를 초과합니다`\n      }));\n      return;\n    }\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다'\n      }));\n      return;\n    }\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    file.__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 최신 images 상태를 가져와서 업데이트\n    const currentImages = imagesRef.current;\n    console.log('🔄 업데이트 전 currentImages (ref):', currentImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = currentImages.filter(img => img.__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      var _imageIndex, _imageIndex2;\n      const indexA = (_imageIndex = a.__imageIndex) !== null && _imageIndex !== void 0 ? _imageIndex : 0;\n      const indexB = (_imageIndex2 = b.__imageIndex) !== null && _imageIndex2 !== void 0 ? _imageIndex2 : 0;\n      return indexA - indexB;\n    });\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  }, [imageUploadMode, onChange]); // images 의존성 제거\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex, textContent, customPrompt, useCustomPrompt) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'textContent:', textContent, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({\n      ...prev,\n      [imageIndex]: 'generating'\n    }));\n    try {\n      // 요청 바디 구성\n      let requestBody = {};\n\n      // job_id 추가 (job-based folder isolation을 위해)\n      if (jobId) {\n        requestBody.job_id = jobId;\n        console.log('🆔 job_id 추가:', jobId);\n      }\n      if (useCustomPrompt && customPrompt !== null && customPrompt !== void 0 && customPrompt.trim()) {\n        // 커스텀 프롬프트 사용\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 커스텀 프롬프트 사용:', customPrompt.trim());\n      } else {\n        // 기존 텍스트 사용\n        const texts = textContent.split(' / ');\n        requestBody.text = texts[0]; // 첫 번째 텍스트 사용\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 기본 텍스트 사용:', texts[0]);\n      }\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n      const data = await response.json();\n      let imageUrl = data.image_url;\n\n      // job_id가 있는 경우 job-specific URL로 변경\n      if (jobId && imageUrl.includes('/get-image/')) {\n        const fileName = imageUrl.split('/get-image/')[1];\n        imageUrl = `/job-uploads/${jobId}/${fileName}`;\n        console.log('🔄 job-specific URL로 변경:', imageUrl);\n      }\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error(`생성된 이미지 다운로드에 실패했습니다: ${imageResponse.status}`);\n      }\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, {\n        type: 'image/png'\n      });\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'success'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'error'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 최근 동영상 불러오기 (첫 페이지)\n  const handleLoadRecentVideos = async imageIndex => {\n    setSelectedVideoForIndex(imageIndex);\n    setVideoDialogOpen(true);\n    setLoadingVideos(true);\n    try {\n      const response = await fetch('/api/recent-videos?page=1&limit=10');\n      if (!response.ok) {\n        throw new Error('최근 동영상 목록을 가져올 수 없습니다');\n      }\n      const data = await response.json();\n      if (data.status === 'success') {\n        setRecentVideos(data.videos);\n        setVideoPagination(data.pagination);\n      } else {\n        throw new Error(data.message || '동영상 목록 조회 실패');\n      }\n    } catch (error) {\n      console.error('최근 동영상 로딩 오류:', error);\n      // 에러 발생 시 빈 배열로 설정\n      setRecentVideos([]);\n      setVideoPagination({\n        current_page: 1,\n        total_pages: 0,\n        total_items: 0,\n        has_next: false,\n        has_previous: false\n      });\n    } finally {\n      setLoadingVideos(false);\n    }\n  };\n\n  // 더 많은 동영상 불러오기\n  const handleLoadMoreVideos = async () => {\n    if (!videoPagination.has_next || loadingMoreVideos) return;\n    setLoadingMoreVideos(true);\n    try {\n      const nextPage = videoPagination.current_page + 1;\n      const response = await fetch(`/api/recent-videos?page=${nextPage}&limit=10`);\n      if (!response.ok) {\n        throw new Error('추가 동영상 목록을 가져올 수 없습니다');\n      }\n      const data = await response.json();\n      if (data.status === 'success') {\n        // 기존 동영상 목록에 새 동영상들 추가\n        setRecentVideos(prev => [...prev, ...data.videos]);\n        setVideoPagination(data.pagination);\n      } else {\n        throw new Error(data.message || '동영상 목록 조회 실패');\n      }\n    } catch (error) {\n      console.error('추가 동영상 로딩 오류:', error);\n    } finally {\n      setLoadingMoreVideos(false);\n    }\n  };\n\n  // 동영상 선택 처리\n  const handleVideoSelect = async video => {\n    if (selectedVideoForIndex === null) return;\n    try {\n      // 동영상 파일을 다운로드하여 File 객체로 변환\n      const response = await fetch(video.path);\n      const blob = await response.blob();\n      const file = new File([blob], video.filename, {\n        type: 'video/mp4'\n      });\n\n      // 선택된 동영상을 해당 인덱스에 업로드\n      handleIndividualImageUpload(selectedVideoForIndex, [file]);\n\n      // 다이얼로그 닫기\n      setVideoDialogOpen(false);\n      setSelectedVideoForIndex(null);\n    } catch (error) {\n      console.error('동영상 선택 오류:', error);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = imageIndex => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 최신 images 상태를 가져와서 삭제\n    const currentImages = imagesRef.current;\n    const newImages = currentImages.filter(img => img.__imageIndex !== imageIndex);\n\n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = {\n        ...prev\n      };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex, image) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 비디오 미리보기 컴포넌트 (브라우저 직접 재생)\n  const VideoPreview = /*#__PURE__*/_s(/*#__PURE__*/memo(_s(({\n    file\n  }) => {\n    _s();\n    const [videoUrl, setVideoUrl] = useState(null);\n    useEffect(() => {\n      // 브라우저에서 직접 재생할 수 있도록 URL 생성\n      const url = URL.createObjectURL(file);\n      setVideoUrl(url);\n      return () => {\n        if (url) {\n          URL.revokeObjectURL(url);\n        }\n      };\n    }, [file]);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [videoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoUrl,\n        style: {\n          width: '100%',\n          aspectRatio: '1/1',\n          objectFit: 'cover',\n          borderRadius: '8px'\n        },\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        controls: false,\n        onError: e => {\n          console.error('비디오 재생 오류:', e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 8,\n          left: 8,\n          bgcolor: 'rgba(0,0,0,0.7)',\n          borderRadius: 1,\n          p: 0.5,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MovieIcon, {\n          sx: {\n            fontSize: 16,\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"white\",\n          sx: {\n            ml: 0.5\n          },\n          children: \"\\uC601\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this);\n  }, \"nkRZTjcntyJfhojS751MifEn6dQ=\")), \"nkRZTjcntyJfhojS751MifEn6dQ=\");\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone = /*#__PURE__*/_s2(/*#__PURE__*/memo(_s2(({\n    imageIndex,\n    pair\n  }) => {\n    _s2();\n    const onDrop = useCallback(acceptedFiles => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm', '.mkv']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // ref를 통한 포커스 유지\n    const textFieldRef = useRef(null);\n\n    // 로컬 상태로 입력값 관리 (포커스 유지를 위해)\n    const [localPromptValue, setLocalPromptValue] = useState((currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt) || '');\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [lastUpdateTime, setLastUpdateTime] = useState(0);\n\n    // 초기화 시에만 외부 상태를 로컬 상태에 동기화\n    useEffect(() => {\n      if (!isInitialized) {\n        setLocalPromptValue((currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt) || '');\n        setIsInitialized(true);\n      }\n    }, [currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, isInitialized]);\n\n    // 디바운스를 위한 useEffect - 외부 상태 업데이트 방지\n    useEffect(() => {\n      if (!localPromptValue.trim() && !(currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.prompt)) {\n        return; // 빈 값인 경우 업데이트 하지 않음\n      }\n      const timeoutId = setTimeout(() => {\n        var _customPrompts$imageI;\n        const currentExternalValue = ((_customPrompts$imageI = customPrompts[imageIndex]) === null || _customPrompts$imageI === void 0 ? void 0 : _customPrompts$imageI.prompt) || '';\n        if (localPromptValue !== currentExternalValue) {\n          var _customPrompts$imageI2;\n          // 클로저를 사용하여 함수 호출 시점의 값을 캡처\n          const enabled = ((_customPrompts$imageI2 = customPrompts[imageIndex]) === null || _customPrompts$imageI2 === void 0 ? void 0 : _customPrompts$imageI2.enabled) || false;\n          updateCustomPrompt(imageIndex, localPromptValue, enabled);\n        }\n      }, 1000); // 1초로 늘려서 더 안정적으로\n\n      return () => clearTimeout(timeoutId);\n    }, [localPromptValue, imageIndex]);\n\n    // 커스텀 프롬프트 변경 핸들러 (로컬 상태만 업데이트)\n    const handleCustomPromptChange = useCallback(prompt => {\n      setLocalPromptValue(prompt);\n    }, []);\n\n    // 커스텀 프롬프트 활성화/비활성화 핸들러\n    const handleCustomPromptToggle = useCallback(enabled => {\n      updateCustomPrompt(imageIndex, localPromptValue, enabled);\n    }, [imageIndex, localPromptValue, updateCustomPrompt]);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          },\n          children: pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          },\n          children: pair.textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"AI \\uC0DD\\uC131 \\uC635\\uC158\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => togglePromptExpanded(imageIndex),\n              sx: {\n                p: 0.5\n              },\n              children: isPromptExpanded ? /*#__PURE__*/_jsxDEV(ExpandLess, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isPromptExpanded,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'rgba(25, 118, 210, 0.04)',\n                p: 1.5,\n                borderRadius: 1,\n                border: '1px solid rgba(25, 118, 210, 0.12)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) || false,\n                  onChange: e => handleCustomPromptToggle(e.target.checked),\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 21\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    fontWeight: 500\n                  },\n                  children: \"\\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8 \\uC0AC\\uC6A9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 21\n                }, this),\n                sx: {\n                  mb: 1,\n                  ml: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 17\n              }, this), (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(TextField, {\n                inputRef: textFieldRef,\n                fullWidth: true,\n                multiline: true,\n                rows: 2,\n                size: \"small\",\n                placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC744 \\uC704\\uD55C \\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n                value: localPromptValue,\n                onChange: e => handleCustomPromptChange(e.target.value),\n                variant: \"outlined\",\n                sx: {\n                  '& .MuiOutlinedInput-root': {\n                    fontSize: '0.75rem',\n                    bgcolor: 'white'\n                  }\n                },\n                helperText: \"\\uC2E4\\uC81C \\uC601\\uC0C1\\uC5D0\\uC11C\\uB294 \\uAE30\\uC874 \\uB300\\uC0AC\\uAC00 \\uC0AC\\uC6A9\\uB418\\uBA70, \\uC774 \\uD504\\uB86C\\uD504\\uD2B8\\uB294 \\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC5D0\\uB9CC \\uC0AC\\uC6A9\\uB429\\uB2C8\\uB2E4.\",\n                autoComplete: \"off\",\n                spellCheck: \"false\"\n              }, `prompt-input-${imageIndex}-stable`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), !(currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  fontStyle: 'italic'\n                },\n                children: \"\\uAE30\\uBCF8 \\uBAA8\\uB4DC: \\uC704\\uC758 \\uB300\\uC0AC \\uB0B4\\uC6A9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), pair.image ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            mb: 2\n          },\n          children: [pair.image.type.startsWith('video/') ? /*#__PURE__*/_jsxDEV(VideoPreview, {\n            file: pair.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              aspectRatio: '1/1',\n              backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              display: 'flex',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDownloadImage(imageIndex, pair.image),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uB2E4\\uC6B4\\uB85C\\uB4DC\",\n              children: /*#__PURE__*/_jsxDEV(Download, {\n                color: \"success\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 754,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRemoveImage(imageIndex),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC0AD\\uC81C\",\n              children: /*#__PURE__*/_jsxDEV(Delete, {\n                color: \"error\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n                handleIndividualGenerate(imageIndex, pair.textContent, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled);\n              },\n              disabled: isGenerating,\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC7AC\\uC0DD\\uC131\",\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 786,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Refresh, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              position: 'absolute',\n              bottom: 4,\n              left: 8,\n              bgcolor: 'rgba(0,0,0,0.7)',\n              color: 'white',\n              px: 1,\n              py: 0.5,\n              borderRadius: 1\n            },\n            children: pair.image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          ...getRootProps(),\n          sx: {\n            border: 2,\n            borderColor: isDragActive ? 'primary.main' : 'grey.300',\n            borderStyle: 'dashed',\n            borderRadius: 1,\n            p: 2,\n            textAlign: 'center',\n            cursor: 'pointer',\n            bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n            mb: 2,\n            aspectRatio: '1/1',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            '&:hover': {\n              borderColor: 'primary.main',\n              bgcolor: 'action.hover'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CloudUpload, {\n              sx: {\n                fontSize: 32,\n                color: 'grey.400',\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                textAlign: 'center'\n              },\n              children: isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                display: 'block',\n                mt: 0.5,\n                fontSize: '0.7rem',\n                textAlign: 'center'\n              },\n              children: [\"\\uCD5C\\uB300 \", imageUploadMode === 'single-for-all' ? '40MB' : '10MB']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this), \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC911...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }, this), generationSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC644\\uB8CC!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }, this), generationError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC2E4\\uD328. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 13\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: uploadError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1.5,\n          pt: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(AutoFixHigh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n            handleIndividualGenerate(imageIndex, pair.textContent, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled);\n          },\n          disabled: isGenerating,\n          sx: {\n            bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n            borderColor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'grey.300',\n            color: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'text.primary',\n            '&:hover': {\n              bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover'\n            }\n          },\n          children: isGenerating ? '생성중...' : currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"text\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(VideoLibrary, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 24\n          }, this),\n          onClick: () => handleLoadRecentVideos(imageIndex),\n          sx: {\n            mt: 1,\n            color: 'text.secondary',\n            '&:hover': {\n              bgcolor: 'action.hover',\n              color: 'primary.main'\n            }\n          },\n          children: \"\\uCD5C\\uADFC \\uB3D9\\uC601\\uC0C1 \\uBD88\\uB7EC\\uC624\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 7\n    }, this);\n  }, \"sDGpg5Y9h0DOXaEuNNeJtAt2FEo=\", false, function () {\n    return [useDropzone];\n  })), \"sDGpg5Y9h0DOXaEuNNeJtAt2FEo=\", false, function () {\n    return [useDropzone];\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: \"\\uD14D\\uC2A4\\uD2B8-\\uC774\\uBBF8\\uC9C0 \\uB9E4\\uCE6D \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 3\n      },\n      children: [\"\\uAC01 \\uD14D\\uC2A4\\uD2B8\\uC5D0 \\uB300\\uC751\\uB418\\uB294 \\uC774\\uBBF8\\uC9C0\\uB97C \\uAC1C\\uBCC4\\uC801\\uC73C\\uB85C \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4DC\\uB798\\uADF8\\uC564\\uB4DC\\uB86D\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC5C5\\uB85C\\uB4DC\\uD558\\uAC70\\uB098 AI\\uB85C \\uC790\\uB3D9 \\uC0DD\\uC131\\uD558\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"caption\",\n        color: \"text.secondary\",\n        children: [\"\\uD30C\\uC77C \\uD06C\\uAE30 \\uC81C\\uD55C: \", imageUploadMode === 'single-for-all' ? '최대 40MB' : '각 파일 최대 10MB']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: textImagePairs.map((pair, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(IndividualDropZone, {\n          imageIndex: pair.imageIndex,\n          pair: pair\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 13\n        }, this)\n      }, `dropzone-${pair.imageIndex}-${pair.textKey}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 7\n    }, this), textImagePairs.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mt: 2\n      },\n      children: \"\\uB300\\uBCF8\\uC744 \\uBA3C\\uC800 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: videoDialogOpen,\n      onClose: () => setVideoDialogOpen(false),\n      maxWidth: \"lg\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(VideoLibrary, {\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 13\n          }, this), \"\\uCD5C\\uADFC \\uB3D9\\uC601\\uC0C1 \\uBD88\\uB7EC\\uC624\\uAE30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 959,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: loadingVideos ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              ml: 2\n            },\n            children: \"\\uB3D9\\uC601\\uC0C1 \\uBAA9\\uB85D\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 13\n        }, this) : recentVideos.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 2\n          },\n          children: \"\\uC0AC\\uC6A9 \\uAC00\\uB2A5\\uD55C \\uB3D9\\uC601\\uC0C1\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mt: 1\n            },\n            children: recentVideos.map((video, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  cursor: 'pointer',\n                  '&:hover': {\n                    boxShadow: 3,\n                    transform: 'translateY(-2px)',\n                    transition: 'all 0.2s'\n                  }\n                },\n                onClick: () => handleVideoSelect(video),\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    position: 'relative',\n                    aspectRatio: '16/9',\n                    bgcolor: 'grey.100'\n                  },\n                  children: [video.thumbnailUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: video.thumbnailUrl,\n                    alt: video.filename,\n                    style: {\n                      width: '100%',\n                      height: '100%',\n                      objectFit: 'cover'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 994,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      height: '100%'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(MovieIcon, {\n                      sx: {\n                        fontSize: 48,\n                        color: 'grey.400'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1010,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1004,\n                    columnNumber: 25\n                  }, this), video.duration && /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      position: 'absolute',\n                      bottom: 8,\n                      right: 8,\n                      bgcolor: 'rgba(0,0,0,0.7)',\n                      color: 'white',\n                      px: 1,\n                      py: 0.5,\n                      borderRadius: 1,\n                      fontSize: '0.75rem',\n                      fontWeight: 600\n                    },\n                    children: video.duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1016,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                      bgcolor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '50%',\n                      p: 1,\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(MovieIcon, {\n                      sx: {\n                        color: 'white',\n                        fontSize: 24\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1045,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1033,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 991,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    p: 1.5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    sx: {\n                      fontWeight: 600,\n                      display: 'block',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap'\n                    },\n                    children: video.filename\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: [\"\\uD06C\\uAE30: \", video.size]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1058,\n                    columnNumber: 23\n                  }, this), video.duration && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: [\"\\uAE38\\uC774: \", video.duration]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1062,\n                    columnNumber: 25\n                  }, this), video.resolution && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: [\"\\uD574\\uC0C1\\uB3C4: \", video.resolution]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1067,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: [\"\\uC218\\uC815\\uC77C: \", video.modifiedDate]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 15\n          }, this), recentVideos.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 2\n              },\n              children: [\"\\uCD1D \", videoPagination.total_items, \"\\uAC1C \\uC911 \", recentVideos.length, \"\\uAC1C \\uD45C\\uC2DC (\\uD398\\uC774\\uC9C0 \", videoPagination.current_page, \"/\", videoPagination.total_pages, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 19\n            }, this), videoPagination.has_next && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: handleLoadMoreVideos,\n              disabled: loadingMoreVideos,\n              sx: {\n                minWidth: 120\n              },\n              startIcon: loadingMoreVideos ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1096,\n                columnNumber: 54\n              }, this) : undefined,\n              children: loadingMoreVideos ? '로딩 중...' : '더보기'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 21\n            }, this), !videoPagination.has_next && videoPagination.total_pages > 1 && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: \"\\uBAA8\\uB4E0 \\uB3D9\\uC601\\uC0C1\\uC744 \\uBD88\\uB7EC\\uC654\\uC2B5\\uB2C8\\uB2E4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setVideoDialogOpen(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 924,\n    columnNumber: 5\n  }, this);\n};\n_s3(TextImagePairManager, \"FdnmaYNOSU6bFVcsreojKPT6/KM=\");\n_c = TextImagePairManager;\nexport default TextImagePairManager;\nvar _c;\n$RefreshReg$(_c, \"TextImagePairManager\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","memo","useEffect","useRef","Box","Typography","Button","Grid","Card","CardContent","IconButton","Alert","CircularProgress","TextField","FormControlLabel","Switch","Collapse","Dialog","DialogTitle","DialogContent","DialogActions","CloudUpload","Delete","AutoFixHigh","Refresh","Download","ExpandMore","ExpandLess","Movie","MovieIcon","VideoLibrary","useDropzone","jsxDEV","_jsxDEV","Fragment","_Fragment","TextImagePairManager","content","imageUploadMode","images","onChange","jobId","_s3","_s","$RefreshSig$","_s2","generationStatus","setGenerationStatus","uploadErrors","setUploadErrors","customPrompts","setCustomPrompts","promptsExpanded","setPromptsExpanded","videoDialogOpen","setVideoDialogOpen","recentVideos","setRecentVideos","loadingVideos","setLoadingVideos","loadingMoreVideos","setLoadingMoreVideos","selectedVideoForIndex","setSelectedVideoForIndex","videoPagination","setVideoPagination","current_page","total_pages","total_items","has_next","has_previous","imagesRef","current","updateCustomPrompt","imageIndex","prompt","enabled","prev","currentPrompt","togglePromptExpanded","textImagePairs","bodyTexts","Object","entries","filter","key","value","startsWith","trim","map","index","imageMap","Map","forEach","img","storedIndex","__imageIndex","set","console","log","Array","from","idx","file","name","length","pairs","foundImage","get","customPrompt","push","textIndex","textKey","textContent","image","isGenerating","useCustomPrompt","i","Math","floor","text1","text2","allTexts","replace","join","allContent","handleIndividualImageUpload","acceptedFiles","newErrors","maxSize","maxSizeText","size","isImage","type","isVideo","currentImages","newImages","sort","a","b","_imageIndex","_imageIndex2","indexA","indexB","handleIndividualGenerate","requestBody","job_id","custom_prompt","texts","split","text","additional_context","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","data","imageUrl","image_url","includes","fileName","imageResponse","status","blob","File","setTimeout","newStatus","error","handleLoadRecentVideos","videos","pagination","message","handleLoadMoreVideos","nextPage","handleVideoSelect","video","path","filename","handleRemoveImage","handleDownloadImage","link","document","createElement","href","download","appendChild","click","removeChild","url","URL","createObjectURL","revokeObjectURL","VideoPreview","videoUrl","setVideoUrl","sx","position","children","src","style","width","aspectRatio","objectFit","borderRadius","autoPlay","muted","loop","playsInline","controls","onError","e","_jsxFileName","lineNumber","columnNumber","top","left","bgcolor","p","display","alignItems","fontSize","color","variant","ml","IndividualDropZone","pair","onDrop","getRootProps","getInputProps","isDragActive","accept","maxFiles","multiple","generationError","generationSuccess","uploadError","isPromptExpanded","currentCustomPrompt","textFieldRef","localPromptValue","setLocalPromptValue","isInitialized","setIsInitialized","lastUpdateTime","setLastUpdateTime","timeoutId","_customPrompts$imageI","currentExternalValue","_customPrompts$imageI2","clearTimeout","handleCustomPromptChange","handleCustomPromptToggle","height","flexDirection","flex","gutterBottom","fontWeight","mb","border","borderColor","lineHeight","justifyContent","onClick","in","control","checked","target","label","inputRef","fullWidth","multiline","rows","placeholder","helperText","autoComplete","spellCheck","fontStyle","backgroundImage","backgroundSize","backgroundPosition","right","gap","title","disabled","bottom","px","py","borderStyle","textAlign","cursor","mt","severity","mr","pt","startIcon","component","container","spacing","item","xs","sm","md","open","onClose","maxWidth","boxShadow","transform","transition","thumbnailUrl","alt","duration","overflow","textOverflow","whiteSpace","resolution","modifiedDate","minWidth","undefined","_c","$RefreshReg$"],"sources":["/zstus/frontend/src/components/TextImagePairManager.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo, memo, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n  Chip,\n  Alert,\n  CircularProgress,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Collapse,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\nimport {\n  CloudUpload,\n  Delete,\n  AutoFixHigh,\n  Refresh,\n  Image as ImageIcon,\n  Download,\n  Edit as EditIcon,\n  ExpandMore,\n  ExpandLess,\n  Movie as MovieIcon,\n  Warning,\n  VideoLibrary\n} from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { ReelsContent, ImageUploadMode, TextImagePair, CustomPrompt } from '../types';\n\ninterface TextImagePairManagerProps {\n  content: ReelsContent;\n  imageUploadMode: ImageUploadMode;\n  images: File[];\n  onChange: (images: File[], mode: ImageUploadMode) => void;\n  jobId: string | null;  // Job ID 추가\n}\n\nconst TextImagePairManager: React.FC<TextImagePairManagerProps> = ({\n  content,\n  imageUploadMode,\n  images,\n  onChange,\n  jobId,\n}) => {\n  const [generationStatus, setGenerationStatus] = useState<{ [key: string]: string }>({});\n  const [uploadErrors, setUploadErrors] = useState<{ [key: number]: string }>({});\n  const [customPrompts, setCustomPrompts] = useState<{ [key: number]: CustomPrompt }>({});\n  const [promptsExpanded, setPromptsExpanded] = useState<{ [key: number]: boolean }>({});\n\n  // 최근 동영상 관리 상태\n  const [videoDialogOpen, setVideoDialogOpen] = useState(false);\n  const [recentVideos, setRecentVideos] = useState<Array<{\n    filename: string;\n    path: string;\n    thumbnailUrl: string | null;\n    size: string;\n    modifiedDate: string;\n    duration?: string;\n    resolution?: string;\n    fps?: string;\n  }>>([]);\n  const [loadingVideos, setLoadingVideos] = useState(false);\n  const [loadingMoreVideos, setLoadingMoreVideos] = useState(false);\n  const [selectedVideoForIndex, setSelectedVideoForIndex] = useState<number | null>(null);\n  const [videoPagination, setVideoPagination] = useState({\n    current_page: 1,\n    total_pages: 0,\n    total_items: 0,\n    has_next: false,\n    has_previous: false\n  });\n\n  // 최신 images 상태를 추적하기 위한 ref\n  const imagesRef = useRef<File[]>(images);\n\n  // images prop이 변경될 때마다 ref 업데이트\n  useEffect(() => {\n    imagesRef.current = images;\n  }, [images]);\n\n  // 커스텀 프롬프트 관리 함수들 (useCallback으로 최적화)\n  const updateCustomPrompt = useCallback((imageIndex: number, prompt: string, enabled: boolean) => {\n    setCustomPrompts(prev => {\n      const currentPrompt = prev[imageIndex];\n      // 값이 같으면 업데이트하지 않음 (불필요한 리렌더링 방지)\n      if (currentPrompt &&\n          currentPrompt.prompt === prompt &&\n          currentPrompt.enabled === enabled) {\n        return prev;\n      }\n\n      return {\n        ...prev,\n        [imageIndex]: {\n          imageIndex,\n          prompt,\n          enabled\n        }\n      };\n    });\n  }, []);\n\n  const togglePromptExpanded = useCallback((imageIndex: number) => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  }, []);\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  const textImagePairs = useMemo((): (TextImagePair & { imageIndex: number })[] => {\n    const bodyTexts = Object.entries(content)\n      .filter(([key, value]) => key.startsWith('body') && value?.trim())\n      .map(([key, value], index) => ({ key, value: value.trim(), index }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map<number, File>();\n    images.forEach(img => {\n      const storedIndex = (img as any).__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${(img as any).__imageIndex})`));\n\n    const pairs: (TextImagePair & { imageIndex: number })[] = [];\n\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({ key, value, index }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${foundImage?.name || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index, // 실제 이미지 인덱스 저장\n          isGenerating: false,\n          customPrompt: customPrompt?.prompt || '',\n          useCustomPrompt: customPrompt?.enabled || false,\n        });\n      });\n    } else if (imageUploadMode === 'per-two-scripts') {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${foundImage?.name || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex, // 실제 이미지 인덱스 저장\n            isGenerating: false,\n            customPrompt: customPrompt?.prompt || '',\n            useCustomPrompt: customPrompt?.enabled || false,\n          });\n        }\n      }\n    } else if (imageUploadMode === 'single-for-all') {\n      // 모든 텍스트에 이미지 1개\n      const allTexts = bodyTexts.map(({ key, value }) => key.replace('body', '대사')).join(' + ');\n      const allContent = bodyTexts.map(({ value }) => value).join(' / ');\n      const foundImage = imageMap.get(0); // 첫 번째 (그리고 유일한) 이미지\n      const customPrompt = customPrompts[0];\n\n      console.log(`📋 single-for-all: 모든 대사, imageIndex=0, foundImage=${foundImage?.name || 'null'}`);\n      pairs.push({\n        textIndex: 0,\n        textKey: allTexts,\n        textContent: allContent,\n        image: foundImage || null,\n        imageIndex: 0, // 항상 첫 번째 이미지 인덱스 사용\n        isGenerating: false,\n        customPrompt: customPrompt?.prompt || '',\n        useCustomPrompt: customPrompt?.enabled || false,\n      });\n    }\n\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts]);\n  \n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${(img as any).__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex: number, acceptedFiles: File[]) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증 (모드에 따라 다른 제한)\n    const maxSize = imageUploadMode === 'single-for-all' ? 40 * 1024 * 1024 : 10 * 1024 * 1024;\n    const maxSizeText = imageUploadMode === 'single-for-all' ? '40MB' : '10MB';\n\n    if (file.size > maxSize) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: `파일 크기가 ${maxSizeText}를 초과합니다` }));\n      return;\n    }\n\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다' }));\n      return;\n    }\n\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    (file as any).__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 최신 images 상태를 가져와서 업데이트\n    const currentImages = imagesRef.current;\n    console.log('🔄 업데이트 전 currentImages (ref):', currentImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = currentImages.filter(img => (img as any).__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      const indexA = (a as any).__imageIndex ?? 0;\n      const indexB = (b as any).__imageIndex ?? 0;\n      return indexA - indexB;\n    });\n\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n\n    onChange(newImages, imageUploadMode);\n  }, [imageUploadMode, onChange]); // images 의존성 제거\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex: number, textContent: string, customPrompt?: string, useCustomPrompt?: boolean) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'textContent:', textContent, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'generating' }));\n\n    try {\n      // 요청 바디 구성\n      let requestBody: any = {};\n\n      // job_id 추가 (job-based folder isolation을 위해)\n      if (jobId) {\n        requestBody.job_id = jobId;\n        console.log('🆔 job_id 추가:', jobId);\n      }\n\n      if (useCustomPrompt && customPrompt?.trim()) {\n        // 커스텀 프롬프트 사용\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 커스텀 프롬프트 사용:', customPrompt.trim());\n      } else {\n        // 기존 텍스트 사용\n        const texts = textContent.split(' / ');\n        requestBody.text = texts[0]; // 첫 번째 텍스트 사용\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 기본 텍스트 사용:', texts[0]);\n      }\n\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n\n      const data = await response.json();\n      let imageUrl = data.image_url;\n\n      // job_id가 있는 경우 job-specific URL로 변경\n      if (jobId && imageUrl.includes('/get-image/')) {\n        const fileName = imageUrl.split('/get-image/')[1];\n        imageUrl = `/job-uploads/${jobId}/${fileName}`;\n        console.log('🔄 job-specific URL로 변경:', imageUrl);\n      }\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error(`생성된 이미지 다운로드에 실패했습니다: ${imageResponse.status}`);\n      }\n\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, { type: 'image/png' });\n\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      \n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'success' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'error' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 최근 동영상 불러오기 (첫 페이지)\n  const handleLoadRecentVideos = async (imageIndex: number) => {\n    setSelectedVideoForIndex(imageIndex);\n    setVideoDialogOpen(true);\n    setLoadingVideos(true);\n\n    try {\n      const response = await fetch('/api/recent-videos?page=1&limit=10');\n      if (!response.ok) {\n        throw new Error('최근 동영상 목록을 가져올 수 없습니다');\n      }\n\n      const data = await response.json();\n      if (data.status === 'success') {\n        setRecentVideos(data.videos);\n        setVideoPagination(data.pagination);\n      } else {\n        throw new Error(data.message || '동영상 목록 조회 실패');\n      }\n    } catch (error) {\n      console.error('최근 동영상 로딩 오류:', error);\n      // 에러 발생 시 빈 배열로 설정\n      setRecentVideos([]);\n      setVideoPagination({\n        current_page: 1,\n        total_pages: 0,\n        total_items: 0,\n        has_next: false,\n        has_previous: false\n      });\n    } finally {\n      setLoadingVideos(false);\n    }\n  };\n\n  // 더 많은 동영상 불러오기\n  const handleLoadMoreVideos = async () => {\n    if (!videoPagination.has_next || loadingMoreVideos) return;\n\n    setLoadingMoreVideos(true);\n\n    try {\n      const nextPage = videoPagination.current_page + 1;\n      const response = await fetch(`/api/recent-videos?page=${nextPage}&limit=10`);\n\n      if (!response.ok) {\n        throw new Error('추가 동영상 목록을 가져올 수 없습니다');\n      }\n\n      const data = await response.json();\n      if (data.status === 'success') {\n        // 기존 동영상 목록에 새 동영상들 추가\n        setRecentVideos(prev => [...prev, ...data.videos]);\n        setVideoPagination(data.pagination);\n      } else {\n        throw new Error(data.message || '동영상 목록 조회 실패');\n      }\n    } catch (error) {\n      console.error('추가 동영상 로딩 오류:', error);\n    } finally {\n      setLoadingMoreVideos(false);\n    }\n  };\n\n  // 동영상 선택 처리\n  const handleVideoSelect = async (video: any) => {\n    if (selectedVideoForIndex === null) return;\n\n    try {\n      // 동영상 파일을 다운로드하여 File 객체로 변환\n      const response = await fetch(video.path);\n      const blob = await response.blob();\n      const file = new File([blob], video.filename, { type: 'video/mp4' });\n\n      // 선택된 동영상을 해당 인덱스에 업로드\n      handleIndividualImageUpload(selectedVideoForIndex, [file]);\n\n      // 다이얼로그 닫기\n      setVideoDialogOpen(false);\n      setSelectedVideoForIndex(null);\n    } catch (error) {\n      console.error('동영상 선택 오류:', error);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = (imageIndex: number) => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 최신 images 상태를 가져와서 삭제\n    const currentImages = imagesRef.current;\n    const newImages = currentImages.filter(img => (img as any).__imageIndex !== imageIndex);\n    \n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n    \n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = { ...prev };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    \n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n    \n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex: number, image: File) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 비디오 미리보기 컴포넌트 (브라우저 직접 재생)\n  const VideoPreview: React.FC<{ file: File }> = memo(({ file }) => {\n    const [videoUrl, setVideoUrl] = useState<string | null>(null);\n\n    useEffect(() => {\n      // 브라우저에서 직접 재생할 수 있도록 URL 생성\n      const url = URL.createObjectURL(file);\n      setVideoUrl(url);\n\n      return () => {\n        if (url) {\n          URL.revokeObjectURL(url);\n        }\n      };\n    }, [file]);\n\n    return (\n      <Box sx={{ position: 'relative' }}>\n        {videoUrl && (\n          <video\n            src={videoUrl}\n            style={{\n              width: '100%',\n              aspectRatio: '1/1',\n              objectFit: 'cover',\n              borderRadius: '8px'\n            }}\n            autoPlay\n            muted\n            loop\n            playsInline\n            controls={false}\n            onError={(e) => {\n              console.error('비디오 재생 오류:', e);\n            }}\n          />\n        )}\n\n        {/* 비디오 아이콘 오버레이 */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 8,\n            left: 8,\n            bgcolor: 'rgba(0,0,0,0.7)',\n            borderRadius: 1,\n            p: 0.5,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <MovieIcon sx={{ fontSize: 16, color: 'white' }} />\n          <Typography variant=\"caption\" color=\"white\" sx={{ ml: 0.5 }}>\n            영상\n          </Typography>\n        </Box>\n      </Box>\n    );\n  });\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone: React.FC<{\n    imageIndex: number;\n    pair: TextImagePair & { imageIndex: number };\n  }> = memo(({ imageIndex, pair }) => {\n    const onDrop = useCallback((acceptedFiles: File[]) => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm', '.mkv']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // ref를 통한 포커스 유지\n    const textFieldRef = useRef<HTMLInputElement>(null);\n\n    // 로컬 상태로 입력값 관리 (포커스 유지를 위해)\n    const [localPromptValue, setLocalPromptValue] = useState(currentCustomPrompt?.prompt || '');\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [lastUpdateTime, setLastUpdateTime] = useState(0);\n\n    // 초기화 시에만 외부 상태를 로컬 상태에 동기화\n    useEffect(() => {\n      if (!isInitialized) {\n        setLocalPromptValue(currentCustomPrompt?.prompt || '');\n        setIsInitialized(true);\n      }\n    }, [currentCustomPrompt?.prompt, isInitialized]);\n\n    // 디바운스를 위한 useEffect - 외부 상태 업데이트 방지\n    useEffect(() => {\n      if (!localPromptValue.trim() && !currentCustomPrompt?.prompt) {\n        return; // 빈 값인 경우 업데이트 하지 않음\n      }\n\n      const timeoutId = setTimeout(() => {\n        const currentExternalValue = customPrompts[imageIndex]?.prompt || '';\n        if (localPromptValue !== currentExternalValue) {\n          // 클로저를 사용하여 함수 호출 시점의 값을 캡처\n          const enabled = customPrompts[imageIndex]?.enabled || false;\n          updateCustomPrompt(imageIndex, localPromptValue, enabled);\n        }\n      }, 1000); // 1초로 늘려서 더 안정적으로\n\n      return () => clearTimeout(timeoutId);\n    }, [localPromptValue, imageIndex]);\n\n    // 커스텀 프롬프트 변경 핸들러 (로컬 상태만 업데이트)\n    const handleCustomPromptChange = useCallback((prompt: string) => {\n      setLocalPromptValue(prompt);\n    }, []);\n\n    // 커스텀 프롬프트 활성화/비활성화 핸들러\n    const handleCustomPromptToggle = useCallback((enabled: boolean) => {\n      updateCustomPrompt(imageIndex, localPromptValue, enabled);\n    }, [imageIndex, localPromptValue, updateCustomPrompt]);\n\n    return (\n      <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <CardContent sx={{ flex: 1 }}>\n          {/* 텍스트 표시 */}\n          <Typography variant=\"h6\" gutterBottom sx={{ \n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          }}>\n            {pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')}\n          </Typography>\n          \n          <Typography variant=\"body2\" sx={{\n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          }}>\n            {pair.textContent}\n          </Typography>\n\n          {/* 커스텀 프롬프트 섹션 */}\n          <Box sx={{ mb: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\n                AI 생성 옵션\n              </Typography>\n              <IconButton\n                size=\"small\"\n                onClick={() => togglePromptExpanded(imageIndex)}\n                sx={{ p: 0.5 }}\n              >\n                {isPromptExpanded ? <ExpandLess fontSize=\"small\" /> : <ExpandMore fontSize=\"small\" />}\n              </IconButton>\n            </Box>\n\n            <Collapse in={isPromptExpanded}>\n              <Box sx={{ bgcolor: 'rgba(25, 118, 210, 0.04)', p: 1.5, borderRadius: 1, border: '1px solid rgba(25, 118, 210, 0.12)' }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={currentCustomPrompt?.enabled || false}\n                      onChange={(e) => handleCustomPromptToggle(e.target.checked)}\n                      size=\"small\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"caption\" sx={{ fontWeight: 500 }}>\n                      커스텀 프롬프트 사용\n                    </Typography>\n                  }\n                  sx={{ mb: 1, ml: 0 }}\n                />\n\n                {currentCustomPrompt?.enabled && (\n                  <TextField\n                    inputRef={textFieldRef}\n                    key={`prompt-input-${imageIndex}-stable`}\n                    fullWidth\n                    multiline\n                    rows={2}\n                    size=\"small\"\n                    placeholder=\"이미지 생성을 위한 커스텀 프롬프트를 입력하세요...\"\n                    value={localPromptValue}\n                    onChange={(e) => handleCustomPromptChange(e.target.value)}\n                    variant=\"outlined\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        fontSize: '0.75rem',\n                        bgcolor: 'white'\n                      }\n                    }}\n                    helperText=\"실제 영상에서는 기존 대사가 사용되며, 이 프롬프트는 이미지 생성에만 사용됩니다.\"\n                    autoComplete=\"off\"\n                    spellCheck=\"false\"\n                  />\n                )}\n\n                {!currentCustomPrompt?.enabled && (\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontStyle: 'italic' }}>\n                    기본 모드: 위의 대사 내용을 기반으로 이미지를 생성합니다.\n                  </Typography>\n                )}\n              </Box>\n            </Collapse>\n          </Box>\n\n          {/* 이미지/비디오 표시 또는 드래그앤드롭 영역 */}\n          {pair.image ? (\n            <Box sx={{ position: 'relative', mb: 2 }}>\n              {pair.image.type.startsWith('video/') ? (\n                <VideoPreview file={pair.image} />\n              ) : (\n                <Box\n                  sx={{\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    borderRadius: 1\n                  }}\n                />\n              )}\n              \n              {/* 이미지 컨트롤 버튼들 */}\n              <Box sx={{ \n                position: 'absolute', \n                top: 8, \n                right: 8,\n                display: 'flex',\n                gap: 0.5\n              }}>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleDownloadImage(imageIndex, pair.image!)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 다운로드\"\n                >\n                  <Download color=\"success\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleRemoveImage(imageIndex)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 삭제\"\n                >\n                  <Delete color=\"error\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => {\n                    console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n                    handleIndividualGenerate(\n                      imageIndex,\n                      pair.textContent,\n                      currentCustomPrompt?.prompt,\n                      currentCustomPrompt?.enabled\n                    );\n                  }}\n                  disabled={isGenerating}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 재생성\"\n                >\n                  {isGenerating ? (\n                    <CircularProgress size={16} />\n                  ) : (\n                    <Refresh color=\"primary\" fontSize=\"small\" />\n                  )}\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" sx={{ \n                position: 'absolute',\n                bottom: 4,\n                left: 8,\n                bgcolor: 'rgba(0,0,0,0.7)',\n                color: 'white',\n                px: 1,\n                py: 0.5,\n                borderRadius: 1\n              }}>\n                {pair.image.name}\n              </Typography>\n            </Box>\n          ) : (\n            <Box\n              {...getRootProps()}\n              sx={{\n                border: 2,\n                borderColor: isDragActive ? 'primary.main' : 'grey.300',\n                borderStyle: 'dashed',\n                borderRadius: 1,\n                p: 2,\n                textAlign: 'center',\n                cursor: 'pointer',\n                bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n                mb: 2,\n                aspectRatio: '1/1',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  bgcolor: 'action.hover'\n                }\n              }}\n            >\n              <input {...getInputProps()} />\n              <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <CloudUpload sx={{ fontSize: 32, color: 'grey.400', mb: 1 }} />\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ textAlign: 'center' }}>\n                  {isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'}\n                </Typography>\n                <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 0.5, fontSize: '0.7rem', textAlign: 'center' }}>\n                  최대 {imageUploadMode === 'single-for-all' ? '40MB' : '10MB'}\n                </Typography>\n              </Box>\n            </Box>\n          )}\n\n          {/* 상태 메시지 */}\n          {isGenerating && (\n            <Alert severity=\"info\" sx={{ mt: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <CircularProgress size={16} sx={{ mr: 1 }} />\n                이미지 생성 중...\n              </Box>\n            </Alert>\n          )}\n          \n          {generationSuccess && (\n            <Alert severity=\"success\" sx={{ mt: 1 }}>\n              이미지 생성 완료!\n            </Alert>\n          )}\n          \n          {generationError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              이미지 생성 실패. 다시 시도해주세요.\n            </Alert>\n          )}\n          \n          {uploadError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              {uploadError}\n            </Alert>\n          )}\n        </CardContent>\n\n        {/* 하단 액션 버튼 */}\n        <Box sx={{ p: 1.5, pt: 0 }}>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<AutoFixHigh />}\n            onClick={() => {\n              console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n              handleIndividualGenerate(\n                imageIndex,\n                pair.textContent,\n                currentCustomPrompt?.prompt,\n                currentCustomPrompt?.enabled\n              );\n            }}\n            disabled={isGenerating}\n            sx={{\n              bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n              borderColor: currentCustomPrompt?.enabled ? 'primary.main' : 'grey.300',\n              color: currentCustomPrompt?.enabled ? 'primary.main' : 'text.primary',\n              '&:hover': {\n                bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover',\n              }\n            }}\n          >\n            {isGenerating ? '생성중...' : (currentCustomPrompt?.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성')}\n          </Button>\n\n          {/* 최근 동영상 불러오기 버튼 */}\n          <Button\n            fullWidth\n            variant=\"text\"\n            size=\"small\"\n            startIcon={<VideoLibrary />}\n            onClick={() => handleLoadRecentVideos(imageIndex)}\n            sx={{\n              mt: 1,\n              color: 'text.secondary',\n              '&:hover': {\n                bgcolor: 'action.hover',\n                color: 'primary.main'\n              }\n            }}\n          >\n            최근 동영상 불러오기\n          </Button>\n        </Box>\n      </Card>\n    );\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom sx={{ mb: 3 }}>\n        텍스트-이미지 매칭 관리\n      </Typography>\n      \n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        각 텍스트에 대응되는 이미지를 개별적으로 관리할 수 있습니다.\n        드래그앤드롭으로 이미지를 업로드하거나 AI로 자동 생성하세요.\n        <br />\n        <Typography component=\"span\" variant=\"caption\" color=\"text.secondary\">\n          파일 크기 제한: {imageUploadMode === 'single-for-all' ? '최대 40MB' : '각 파일 최대 10MB'}\n        </Typography>\n      </Typography>\n\n      <Grid container spacing={2}>\n        {textImagePairs.map((pair, index) => (\n          <Grid item xs={12} sm={6} md={4} key={`dropzone-${pair.imageIndex}-${pair.textKey}`}>\n            <IndividualDropZone imageIndex={pair.imageIndex} pair={pair} />\n          </Grid>\n        ))}\n      </Grid>\n\n      {textImagePairs.length === 0 && (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          대본을 먼저 작성해주세요.\n        </Alert>\n      )}\n\n      {/* 최근 동영상 선택 다이얼로그 */}\n      <Dialog\n        open={videoDialogOpen}\n        onClose={() => setVideoDialogOpen(false)}\n        maxWidth=\"lg\"\n        fullWidth\n      >\n        <DialogTitle>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <VideoLibrary sx={{ mr: 1 }} />\n            최근 동영상 불러오기\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          {loadingVideos ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n              <CircularProgress />\n              <Typography sx={{ ml: 2 }}>동영상 목록을 불러오는 중...</Typography>\n            </Box>\n          ) : recentVideos.length === 0 ? (\n            <Alert severity=\"info\" sx={{ mt: 2 }}>\n              사용 가능한 동영상이 없습니다.\n            </Alert>\n          ) : (\n            <>\n              <Grid container spacing={2} sx={{ mt: 1 }}>\n                {recentVideos.map((video, index) => (\n                <Grid item xs={12} sm={6} md={4} key={index}>\n                  <Card\n                    sx={{\n                      cursor: 'pointer',\n                      '&:hover': {\n                        boxShadow: 3,\n                        transform: 'translateY(-2px)',\n                        transition: 'all 0.2s'\n                      }\n                    }}\n                    onClick={() => handleVideoSelect(video)}\n                  >\n                    <Box sx={{ position: 'relative', aspectRatio: '16/9', bgcolor: 'grey.100' }}>\n                      {/* 썸네일 또는 비디오 아이콘 */}\n                      {video.thumbnailUrl ? (\n                        <img\n                          src={video.thumbnailUrl}\n                          alt={video.filename}\n                          style={{\n                            width: '100%',\n                            height: '100%',\n                            objectFit: 'cover'\n                          }}\n                        />\n                      ) : (\n                        <Box sx={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          height: '100%'\n                        }}>\n                          <MovieIcon sx={{ fontSize: 48, color: 'grey.400' }} />\n                        </Box>\n                      )}\n\n                      {/* 지속시간 오버레이 (우하단) */}\n                      {video.duration && (\n                        <Box sx={{\n                          position: 'absolute',\n                          bottom: 8,\n                          right: 8,\n                          bgcolor: 'rgba(0,0,0,0.7)',\n                          color: 'white',\n                          px: 1,\n                          py: 0.5,\n                          borderRadius: 1,\n                          fontSize: '0.75rem',\n                          fontWeight: 600\n                        }}>\n                          {video.duration}\n                        </Box>\n                      )}\n\n                      {/* 재생 버튼 오버레이 */}\n                      <Box sx={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        bgcolor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '50%',\n                        p: 1,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                      }}>\n                        <MovieIcon sx={{ color: 'white', fontSize: 24 }} />\n                      </Box>\n                    </Box>\n                    <CardContent sx={{ p: 1.5 }}>\n                      <Typography variant=\"caption\" sx={{\n                        fontWeight: 600,\n                        display: 'block',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap'\n                      }}>\n                        {video.filename}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                        크기: {video.size}\n                      </Typography>\n                      {video.duration && (\n                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                          길이: {video.duration}\n                        </Typography>\n                      )}\n                      {video.resolution && (\n                        <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                          해상도: {video.resolution}\n                        </Typography>\n                      )}\n                      <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block' }}>\n                        수정일: {video.modifiedDate}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n                ))}\n              </Grid>\n\n              {/* 페이지 정보 및 더보기 버튼 */}\n              {recentVideos.length > 0 && (\n                <Box sx={{ mt: 3, display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                  {/* 페이지 정보 */}\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                    총 {videoPagination.total_items}개 중 {recentVideos.length}개 표시\n                    (페이지 {videoPagination.current_page}/{videoPagination.total_pages})\n                  </Typography>\n\n                  {/* 더보기 버튼 */}\n                  {videoPagination.has_next && (\n                    <Button\n                      variant=\"outlined\"\n                      onClick={handleLoadMoreVideos}\n                      disabled={loadingMoreVideos}\n                      sx={{ minWidth: 120 }}\n                      startIcon={loadingMoreVideos ? <CircularProgress size={16} /> : undefined}\n                    >\n                      {loadingMoreVideos ? '로딩 중...' : '더보기'}\n                    </Button>\n                  )}\n\n                  {/* 끝에 도달했을 때 메시지 */}\n                  {!videoPagination.has_next && videoPagination.total_pages > 1 && (\n                    <Typography variant=\"caption\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                      모든 동영상을 불러왔습니다\n                    </Typography>\n                  )}\n                </Box>\n              )}\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setVideoDialogOpen(false)}>\n            취소\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default TextImagePairManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}