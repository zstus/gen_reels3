{"ast":null,"code":"var _jsxFileName = \"/zstus/frontend/src/components/TextImagePairManager.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, memo, useEffect, useRef } from 'react';\nimport { Box, Typography, Button, Grid, Card, CardContent, IconButton, Alert, CircularProgress, TextField, FormControlLabel, Switch, Collapse } from '@mui/material';\nimport { CloudUpload, Delete, AutoFixHigh, Refresh, Download, ExpandMore, ExpandLess, Movie as MovieIcon, VideoLibrary } from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport VideoBookmarkModal from './VideoBookmarkModal';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextImagePairManager = ({\n  content,\n  imageUploadMode,\n  images,\n  jobId,\n  // Job ID 추가\n  onChange,\n  onEditedTextsChange // 수정된 텍스트 콜백\n}) => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [generationStatus, setGenerationStatus] = useState({});\n  const [uploadErrors, setUploadErrors] = useState({});\n  const [customPrompts, setCustomPrompts] = useState({});\n  const [promptsExpanded, setPromptsExpanded] = useState({});\n  const [bookmarkModalOpen, setBookmarkModalOpen] = useState(false);\n  const [currentBookmarkIndex, setCurrentBookmarkIndex] = useState(null);\n  // 수정된 텍스트 관리 (imageIndex → 텍스트 배열)\n  const [editedTexts, setEditedTexts] = useState({});\n\n  // 최신 images 상태를 추적하기 위한 ref\n  const imagesRef = useRef(images);\n\n  // images prop이 변경될 때마다 ref 업데이트\n  useEffect(() => {\n    imagesRef.current = images;\n  }, [images]);\n\n  // 커스텀 프롬프트 관리 함수들 (useCallback으로 최적화)\n  const updateCustomPrompt = useCallback((imageIndex, prompt, enabled) => {\n    setCustomPrompts(prev => {\n      const currentPrompt = prev[imageIndex];\n      // 값이 같으면 업데이트하지 않음 (불필요한 리렌더링 방지)\n      if (currentPrompt && currentPrompt.prompt === prompt && currentPrompt.enabled === enabled) {\n        return prev;\n      }\n      return {\n        ...prev,\n        [imageIndex]: {\n          imageIndex,\n          prompt,\n          enabled\n        }\n      };\n    });\n  }, []);\n  const togglePromptExpanded = useCallback(imageIndex => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  }, []);\n\n  // 텍스트 수정 핸들러\n  const handleTextEdit = useCallback((imageIndex, textIdx, newValue) => {\n    setEditedTexts(prev => {\n      const current = prev[imageIndex] || [];\n      const updated = [...current];\n      updated[textIdx] = newValue;\n      return {\n        ...prev,\n        [imageIndex]: updated\n      };\n    });\n  }, []);\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  const textImagePairs = useMemo(() => {\n    const bodyTexts = Object.entries(content).filter(([key, value]) => key.startsWith('body') && (value === null || value === void 0 ? void 0 : value.trim())).map(([key, value], index) => ({\n      key,\n      value: value.trim(),\n      index\n    }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map();\n    images.forEach(img => {\n      const storedIndex = img.__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${img.__imageIndex})`));\n    const pairs = [];\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({\n        key,\n        value,\n        index\n      }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index,\n          // 실제 이미지 인덱스 저장\n          isGenerating: false,\n          customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n          useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false\n        });\n      });\n    } else if (imageUploadMode === 'per-two-scripts') {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n\n          // 원본 텍스트 배열\n          const originalTexts = [text1.value, text2 === null || text2 === void 0 ? void 0 : text2.value].filter(Boolean);\n          // 수정된 텍스트 배열 (없으면 원본 사용)\n          const edited = editedTexts[imageIndex] || originalTexts;\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex,\n            // 실제 이미지 인덱스 저장\n            isGenerating: false,\n            customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n            useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false,\n            editedTexts: edited,\n            originalTexts: originalTexts\n          });\n        }\n      }\n    } else if (imageUploadMode === 'single-for-all') {\n      // 모든 텍스트에 이미지 1개\n      const allTexts = bodyTexts.map(({\n        key,\n        value\n      }) => key.replace('body', '대사')).join(' + ');\n      const allContent = bodyTexts.map(({\n        value\n      }) => value).join(' / ');\n      const foundImage = imageMap.get(0); // 첫 번째 (그리고 유일한) 이미지\n      const customPrompt = customPrompts[0];\n      console.log(`📋 single-for-all: 모든 대사, imageIndex=0, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n      pairs.push({\n        textIndex: 0,\n        textKey: allTexts,\n        textContent: allContent,\n        image: foundImage || null,\n        imageIndex: 0,\n        // 항상 첫 번째 이미지 인덱스 사용\n        isGenerating: false,\n        customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n        useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false\n      });\n    }\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts, editedTexts]);\n\n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${img.__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex, acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증 (모드에 따라 다른 제한)\n    const maxSize = imageUploadMode === 'single-for-all' ? 80 * 1024 * 1024 : 40 * 1024 * 1024;\n    const maxSizeText = imageUploadMode === 'single-for-all' ? '80MB' : '40MB';\n    if (file.size > maxSize) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: `파일 크기가 ${maxSizeText}를 초과합니다`\n      }));\n      return;\n    }\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다'\n      }));\n      return;\n    }\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    file.__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 최신 images 상태를 가져와서 업데이트\n    const currentImages = imagesRef.current;\n    console.log('🔄 업데이트 전 currentImages (ref):', currentImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = currentImages.filter(img => img.__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      var _imageIndex, _imageIndex2;\n      const indexA = (_imageIndex = a.__imageIndex) !== null && _imageIndex !== void 0 ? _imageIndex : 0;\n      const indexB = (_imageIndex2 = b.__imageIndex) !== null && _imageIndex2 !== void 0 ? _imageIndex2 : 0;\n      return indexA - indexB;\n    });\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  }, [imageUploadMode, onChange]); // images 의존성 제거\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex, pair, customPrompt, useCustomPrompt) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'pair:', pair, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({\n      ...prev,\n      [imageIndex]: 'generating'\n    }));\n    try {\n      // 요청 바디 구성\n      let requestBody = {\n        job_id: jobId // Job ID 추가\n      };\n\n      // 🎯 우선순위 1: 커스텀 프롬프트\n      if (useCustomPrompt && customPrompt !== null && customPrompt !== void 0 && customPrompt.trim()) {\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 [우선순위 1] 커스텀 프롬프트 사용:', customPrompt.trim());\n      }\n      // 🎯 우선순위 2: 수정된 텍스트 (per-two-scripts 모드)\n      else if (pair.editedTexts && pair.originalTexts && pair.editedTexts.some((t, idx) => {\n        var _pair$originalTexts;\n        return t !== ((_pair$originalTexts = pair.originalTexts) === null || _pair$originalTexts === void 0 ? void 0 : _pair$originalTexts[idx]);\n      })) {\n        requestBody.text = pair.editedTexts[0];\n        if (pair.editedTexts[1]) {\n          requestBody.additional_context = pair.editedTexts[1];\n        }\n        console.log('📝 [우선순위 2] 수정된 텍스트 사용:', pair.editedTexts[0]);\n      }\n      // 🎯 우선순위 3: 원본 텍스트\n      else {\n        const texts = pair.textContent.split(' / ');\n        requestBody.text = texts[0];\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 [우선순위 3] 원본 텍스트 사용:', texts[0]);\n      }\n      console.log('🚀 요청 바디 (Job ID 포함):', requestBody);\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, {\n        type: 'image/png'\n      });\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'success'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'error'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = imageIndex => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 최신 images 상태를 가져와서 삭제\n    const currentImages = imagesRef.current;\n    const newImages = currentImages.filter(img => img.__imageIndex !== imageIndex);\n\n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = {\n        ...prev\n      };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex, image) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 북마크 모달 열기\n  const handleOpenBookmarkModal = imageIndex => {\n    console.log('🎬 북마크 모달 열기 - imageIndex:', imageIndex);\n    setCurrentBookmarkIndex(imageIndex);\n    setBookmarkModalOpen(true);\n  };\n\n  // 북마크 모달 닫기\n  const handleCloseBookmarkModal = () => {\n    setBookmarkModalOpen(false);\n    setCurrentBookmarkIndex(null);\n  };\n\n  // 북마크 비디오 선택 핸들러\n  const handleSelectBookmarkVideo = async video => {\n    if (currentBookmarkIndex === null) return;\n    console.log('✅ 북마크 비디오 선택:', video.filename, 'imageIndex:', currentBookmarkIndex);\n    try {\n      // 생성 상태 업데이트\n      setGenerationStatus(prev => ({\n        ...prev,\n        [currentBookmarkIndex]: 'generating'\n      }));\n\n      // 백엔드 API 호출: 북마크 비디오를 Job 폴더로 복사\n      const response = await apiService.copyBookmarkVideo(jobId, video.filename, currentBookmarkIndex);\n      if (response.status === 'success') {\n        // 복사된 비디오 파일을 File 객체로 변환하여 이미지 배열에 추가\n        const videoUrl = response.data.file_url;\n        const videoFilename = response.data.filename;\n\n        // 비디오 파일을 Fetch로 가져와서 File 객체 생성\n        const videoResponse = await fetch(videoUrl);\n        if (!videoResponse.ok) {\n          throw new Error('비디오 파일 다운로드에 실패했습니다');\n        }\n        const blob = await videoResponse.blob();\n        const file = new File([blob], videoFilename, {\n          type: 'video/mp4'\n        });\n        console.log('📸 북마크 비디오 파일 생성 완료 - fileName:', videoFilename, 'imageIndex:', currentBookmarkIndex);\n\n        // 이미지 배열 업데이트\n        handleIndividualImageUpload(currentBookmarkIndex, [file]);\n        setGenerationStatus(prev => ({\n          ...prev,\n          [currentBookmarkIndex]: 'success'\n        }));\n        setTimeout(() => {\n          setGenerationStatus(prev => {\n            const newStatus = {\n              ...prev\n            };\n            delete newStatus[currentBookmarkIndex];\n            return newStatus;\n          });\n        }, 3000);\n        console.log('✅ 북마크 비디오 복사 및 업로드 완료');\n      }\n    } catch (error) {\n      console.error('❌ 북마크 비디오 선택 오류:', error);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [currentBookmarkIndex]: 'error'\n      }));\n      setUploadErrors(prev => ({\n        ...prev,\n        [currentBookmarkIndex]: error.message || '북마크 비디오 불러오기 실패'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[currentBookmarkIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 비디오 미리보기 컴포넌트 (브라우저 직접 재생)\n  const VideoPreview = /*#__PURE__*/_s(/*#__PURE__*/memo(_s(({\n    file\n  }) => {\n    _s();\n    const [videoUrl, setVideoUrl] = useState(null);\n    useEffect(() => {\n      // 브라우저에서 직접 재생할 수 있도록 URL 생성\n      const url = URL.createObjectURL(file);\n      setVideoUrl(url);\n      return () => {\n        if (url) {\n          URL.revokeObjectURL(url);\n        }\n      };\n    }, [file]);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [videoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoUrl,\n        style: {\n          width: '100%',\n          aspectRatio: '1/1',\n          objectFit: 'cover',\n          borderRadius: '8px'\n        },\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        controls: false,\n        onError: e => {\n          console.error('비디오 재생 오류:', e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 8,\n          left: 8,\n          bgcolor: 'rgba(0,0,0,0.7)',\n          borderRadius: 1,\n          p: 0.5,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MovieIcon, {\n          sx: {\n            fontSize: 16,\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"white\",\n          sx: {\n            ml: 0.5\n          },\n          children: \"\\uC601\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this);\n  }, \"nkRZTjcntyJfhojS751MifEn6dQ=\")), \"nkRZTjcntyJfhojS751MifEn6dQ=\");\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone = /*#__PURE__*/_s2(/*#__PURE__*/memo(_s2(({\n    imageIndex,\n    pair\n  }) => {\n    _s2();\n    const onDrop = useCallback(acceptedFiles => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm', '.mkv']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // ref를 통한 포커스 유지\n    const textFieldRef = useRef(null);\n\n    // 로컬 상태로 입력값 관리 (포커스 유지를 위해)\n    const [localPromptValue, setLocalPromptValue] = useState((currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt) || '');\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [lastUpdateTime, setLastUpdateTime] = useState(0);\n\n    // 초기화 시에만 외부 상태를 로컬 상태에 동기화\n    useEffect(() => {\n      if (!isInitialized) {\n        setLocalPromptValue((currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt) || '');\n        setIsInitialized(true);\n      }\n    }, [currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, isInitialized]);\n\n    // 디바운스를 위한 useEffect - 외부 상태 업데이트 방지\n    useEffect(() => {\n      if (!localPromptValue.trim() && !(currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.prompt)) {\n        return; // 빈 값인 경우 업데이트 하지 않음\n      }\n      const timeoutId = setTimeout(() => {\n        var _customPrompts$imageI;\n        const currentExternalValue = ((_customPrompts$imageI = customPrompts[imageIndex]) === null || _customPrompts$imageI === void 0 ? void 0 : _customPrompts$imageI.prompt) || '';\n        if (localPromptValue !== currentExternalValue) {\n          var _customPrompts$imageI2;\n          // 클로저를 사용하여 함수 호출 시점의 값을 캡처\n          const enabled = ((_customPrompts$imageI2 = customPrompts[imageIndex]) === null || _customPrompts$imageI2 === void 0 ? void 0 : _customPrompts$imageI2.enabled) || false;\n          updateCustomPrompt(imageIndex, localPromptValue, enabled);\n        }\n      }, 1000); // 1초로 늘려서 더 안정적으로\n\n      return () => clearTimeout(timeoutId);\n    }, [localPromptValue, imageIndex]);\n\n    // 커스텀 프롬프트 변경 핸들러 (로컬 상태만 업데이트)\n    const handleCustomPromptChange = useCallback(prompt => {\n      setLocalPromptValue(prompt);\n    }, []);\n\n    // 커스텀 프롬프트 활성화/비활성화 핸들러\n    const handleCustomPromptToggle = useCallback(enabled => {\n      updateCustomPrompt(imageIndex, localPromptValue, enabled);\n    }, [imageIndex, localPromptValue, updateCustomPrompt]);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          },\n          children: pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), imageUploadMode === 'per-two-scripts' && pair.editedTexts ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: pair.editedTexts.map((text, idx) => /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            rows: 2,\n            value: text,\n            onChange: e => handleTextEdit(imageIndex, idx, e.target.value),\n            label: `대사 ${pair.textIndex + idx + 1}`,\n            variant: \"outlined\",\n            size: \"small\",\n            sx: {\n              mb: 1\n            },\n            helperText: idx === 0 ? \"수정된 텍스트는 영상 생성 시 사용됩니다\" : \"\"\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          },\n          children: pair.textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"AI \\uC0DD\\uC131 \\uC635\\uC158\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => togglePromptExpanded(imageIndex),\n              sx: {\n                p: 0.5\n              },\n              children: isPromptExpanded ? /*#__PURE__*/_jsxDEV(ExpandLess, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isPromptExpanded,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'rgba(25, 118, 210, 0.04)',\n                p: 1.5,\n                borderRadius: 1,\n                border: '1px solid rgba(25, 118, 210, 0.12)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) || false,\n                  onChange: e => handleCustomPromptToggle(e.target.checked),\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 21\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    fontWeight: 500\n                  },\n                  children: \"\\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8 \\uC0AC\\uC6A9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 21\n                }, this),\n                sx: {\n                  mb: 1,\n                  ml: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this), (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(TextField, {\n                inputRef: textFieldRef,\n                fullWidth: true,\n                multiline: true,\n                rows: 2,\n                size: \"small\",\n                placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC744 \\uC704\\uD55C \\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n                value: localPromptValue,\n                onChange: e => handleCustomPromptChange(e.target.value),\n                variant: \"outlined\",\n                sx: {\n                  '& .MuiOutlinedInput-root': {\n                    fontSize: '0.75rem',\n                    bgcolor: 'white'\n                  }\n                },\n                helperText: \"\\uC2E4\\uC81C \\uC601\\uC0C1\\uC5D0\\uC11C\\uB294 \\uAE30\\uC874 \\uB300\\uC0AC\\uAC00 \\uC0AC\\uC6A9\\uB418\\uBA70, \\uC774 \\uD504\\uB86C\\uD504\\uD2B8\\uB294 \\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC5D0\\uB9CC \\uC0AC\\uC6A9\\uB429\\uB2C8\\uB2E4.\",\n                autoComplete: \"off\",\n                spellCheck: \"false\"\n              }, `prompt-input-${imageIndex}-stable`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 19\n              }, this), !(currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  fontStyle: 'italic'\n                },\n                children: \"\\uAE30\\uBCF8 \\uBAA8\\uB4DC: \\uC704\\uC758 \\uB300\\uC0AC \\uB0B4\\uC6A9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this), pair.image ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            mb: 2\n          },\n          children: [pair.image.type.startsWith('video/') ? /*#__PURE__*/_jsxDEV(VideoPreview, {\n            file: pair.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              aspectRatio: '1/1',\n              backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              display: 'flex',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDownloadImage(imageIndex, pair.image),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uB2E4\\uC6B4\\uB85C\\uB4DC\",\n              children: /*#__PURE__*/_jsxDEV(Download, {\n                color: \"success\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRemoveImage(imageIndex),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC0AD\\uC81C\",\n              children: /*#__PURE__*/_jsxDEV(Delete, {\n                color: \"error\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n                handleIndividualGenerate(imageIndex, pair, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled);\n              },\n              disabled: isGenerating,\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC7AC\\uC0DD\\uC131\",\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Refresh, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              position: 'absolute',\n              bottom: 4,\n              left: 8,\n              bgcolor: 'rgba(0,0,0,0.7)',\n              color: 'white',\n              px: 1,\n              py: 0.5,\n              borderRadius: 1\n            },\n            children: pair.image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          ...getRootProps(),\n          sx: {\n            border: 2,\n            borderColor: isDragActive ? 'primary.main' : 'grey.300',\n            borderStyle: 'dashed',\n            borderRadius: 1,\n            p: 2,\n            textAlign: 'center',\n            cursor: 'pointer',\n            bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n            mb: 2,\n            aspectRatio: '1/1',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            '&:hover': {\n              borderColor: 'primary.main',\n              bgcolor: 'action.hover'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(CloudUpload, {\n              sx: {\n                fontSize: 32,\n                color: 'grey.400',\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              display: 'block',\n              mt: 0.5,\n              fontSize: '0.7rem'\n            },\n            children: [\"\\uCD5C\\uB300 \", imageUploadMode === 'single-for-all' ? '40MB' : '10MB']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 13\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 17\n            }, this), \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC911...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 13\n        }, this), generationSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC644\\uB8CC!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this), generationError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC2E4\\uD328. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 13\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: uploadError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1.5,\n          pt: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(AutoFixHigh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n            handleIndividualGenerate(imageIndex, pair, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled);\n          },\n          disabled: isGenerating,\n          sx: {\n            bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n            borderColor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'grey.300',\n            color: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'text.primary',\n            '&:hover': {\n              bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover'\n            }\n          },\n          children: isGenerating ? '생성중...' : currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(VideoLibrary, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 24\n          }, this),\n          onClick: () => handleOpenBookmarkModal(imageIndex),\n          disabled: isGenerating,\n          sx: {\n            borderColor: 'secondary.main',\n            color: 'secondary.main',\n            '&:hover': {\n              bgcolor: 'rgba(156, 39, 176, 0.08)',\n              borderColor: 'secondary.main'\n            }\n          },\n          children: \"\\uB3D9\\uC601\\uC0C1 \\uBD88\\uB7EC\\uC624\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 7\n    }, this);\n  }, \"sDGpg5Y9h0DOXaEuNNeJtAt2FEo=\", false, function () {\n    return [useDropzone];\n  })), \"sDGpg5Y9h0DOXaEuNNeJtAt2FEo=\", false, function () {\n    return [useDropzone];\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: \"\\uD14D\\uC2A4\\uD2B8-\\uC774\\uBBF8\\uC9C0 \\uB9E4\\uCE6D \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 3\n      },\n      children: [\"\\uAC01 \\uD14D\\uC2A4\\uD2B8\\uC5D0 \\uB300\\uC751\\uB418\\uB294 \\uC774\\uBBF8\\uC9C0\\uB97C \\uAC1C\\uBCC4\\uC801\\uC73C\\uB85C \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4DC\\uB798\\uADF8\\uC564\\uB4DC\\uB86D\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC5C5\\uB85C\\uB4DC\\uD558\\uAC70\\uB098 AI\\uB85C \\uC790\\uB3D9 \\uC0DD\\uC131\\uD558\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 943,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"caption\",\n        color: \"text.secondary\",\n        children: [\"\\uD30C\\uC77C \\uD06C\\uAE30 \\uC81C\\uD55C: \", imageUploadMode === 'single-for-all' ? '최대 40MB' : '각 파일 최대 10MB']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: textImagePairs.map((pair, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(IndividualDropZone, {\n          imageIndex: pair.imageIndex,\n          pair: pair\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 13\n        }, this)\n      }, `dropzone-${pair.imageIndex}-${pair.textKey}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 951,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 7\n    }, this), textImagePairs.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mt: 2\n      },\n      children: \"\\uB300\\uBCF8\\uC744 \\uBA3C\\uC800 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VideoBookmarkModal, {\n      open: bookmarkModalOpen,\n      onClose: handleCloseBookmarkModal,\n      onSelect: handleSelectBookmarkVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 935,\n    columnNumber: 5\n  }, this);\n};\n_s3(TextImagePairManager, \"lwpF9aj4s0ZSEXHdGJUcuJnzMHM=\");\n_c = TextImagePairManager;\nexport default TextImagePairManager;\nvar _c;\n$RefreshReg$(_c, \"TextImagePairManager\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","memo","useEffect","useRef","Box","Typography","Button","Grid","Card","CardContent","IconButton","Alert","CircularProgress","TextField","FormControlLabel","Switch","Collapse","CloudUpload","Delete","AutoFixHigh","Refresh","Download","ExpandMore","ExpandLess","Movie","MovieIcon","VideoLibrary","useDropzone","VideoBookmarkModal","apiService","jsxDEV","_jsxDEV","TextImagePairManager","content","imageUploadMode","images","jobId","onChange","onEditedTextsChange","_s3","_s","$RefreshSig$","_s2","generationStatus","setGenerationStatus","uploadErrors","setUploadErrors","customPrompts","setCustomPrompts","promptsExpanded","setPromptsExpanded","bookmarkModalOpen","setBookmarkModalOpen","currentBookmarkIndex","setCurrentBookmarkIndex","editedTexts","setEditedTexts","imagesRef","current","updateCustomPrompt","imageIndex","prompt","enabled","prev","currentPrompt","togglePromptExpanded","handleTextEdit","textIdx","newValue","updated","textImagePairs","bodyTexts","Object","entries","filter","key","value","startsWith","trim","map","index","imageMap","Map","forEach","img","storedIndex","__imageIndex","set","console","log","Array","from","idx","file","name","length","pairs","foundImage","get","customPrompt","push","textIndex","textKey","textContent","image","isGenerating","useCustomPrompt","i","Math","floor","text1","text2","originalTexts","Boolean","edited","allTexts","replace","join","allContent","handleIndividualImageUpload","acceptedFiles","newErrors","maxSize","maxSizeText","size","isImage","type","isVideo","currentImages","newImages","sort","a","b","_imageIndex","_imageIndex2","indexA","indexB","handleIndividualGenerate","pair","requestBody","job_id","custom_prompt","some","t","_pair$originalTexts","text","additional_context","texts","split","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","data","imageUrl","image_url","imageResponse","blob","fileName","File","setTimeout","newStatus","error","handleRemoveImage","handleDownloadImage","link","document","createElement","href","download","appendChild","click","removeChild","url","URL","createObjectURL","revokeObjectURL","handleOpenBookmarkModal","handleCloseBookmarkModal","handleSelectBookmarkVideo","video","filename","copyBookmarkVideo","status","videoUrl","file_url","videoFilename","videoResponse","message","VideoPreview","setVideoUrl","sx","position","children","src","style","width","aspectRatio","objectFit","borderRadius","autoPlay","muted","loop","playsInline","controls","onError","e","_jsxFileName","lineNumber","columnNumber","top","left","bgcolor","p","display","alignItems","fontSize","color","variant","ml","IndividualDropZone","onDrop","getRootProps","getInputProps","isDragActive","accept","maxFiles","multiple","generationError","generationSuccess","uploadError","isPromptExpanded","currentCustomPrompt","textFieldRef","localPromptValue","setLocalPromptValue","isInitialized","setIsInitialized","lastUpdateTime","setLastUpdateTime","timeoutId","_customPrompts$imageI","currentExternalValue","_customPrompts$imageI2","clearTimeout","handleCustomPromptChange","handleCustomPromptToggle","height","flexDirection","flex","gutterBottom","fontWeight","mb","fullWidth","multiline","rows","target","label","helperText","border","borderColor","lineHeight","justifyContent","onClick","in","control","checked","inputRef","placeholder","autoComplete","spellCheck","fontStyle","backgroundImage","backgroundSize","backgroundPosition","right","gap","title","disabled","bottom","px","py","borderStyle","textAlign","cursor","mt","severity","mr","pt","startIcon","component","container","spacing","item","xs","sm","md","open","onClose","onSelect","_c","$RefreshReg$"],"sources":["/zstus/frontend/src/components/TextImagePairManager.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo, memo, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n  Chip,\n  Alert,\n  CircularProgress,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Collapse,\n} from '@mui/material';\nimport {\n  CloudUpload,\n  Delete,\n  AutoFixHigh,\n  Refresh,\n  Image as ImageIcon,\n  Download,\n  Edit as EditIcon,\n  ExpandMore,\n  ExpandLess,\n  Movie as MovieIcon,\n  Warning,\n  VideoLibrary\n} from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { ReelsContent, ImageUploadMode, TextImagePair, CustomPrompt, BookmarkVideo } from '../types';\nimport VideoBookmarkModal from './VideoBookmarkModal';\nimport apiService from '../services/api';\n\ninterface TextImagePairManagerProps {\n  content: ReelsContent;\n  imageUploadMode: ImageUploadMode;\n  images: File[];\n  jobId: string; // Job ID 추가\n  onChange: (images: File[], mode: ImageUploadMode) => void;\n  onEditedTextsChange?: (editedTexts: { [key: number]: string[] }) => void; // 수정된 텍스트 콜백\n}\n\nconst TextImagePairManager: React.FC<TextImagePairManagerProps> = ({\n  content,\n  imageUploadMode,\n  images,\n  jobId, // Job ID 추가\n  onChange,\n  onEditedTextsChange, // 수정된 텍스트 콜백\n}) => {\n  const [generationStatus, setGenerationStatus] = useState<{ [key: string]: string }>({});\n  const [uploadErrors, setUploadErrors] = useState<{ [key: number]: string }>({});\n  const [customPrompts, setCustomPrompts] = useState<{ [key: number]: CustomPrompt }>({});\n  const [promptsExpanded, setPromptsExpanded] = useState<{ [key: number]: boolean }>({});\n  const [bookmarkModalOpen, setBookmarkModalOpen] = useState<boolean>(false);\n  const [currentBookmarkIndex, setCurrentBookmarkIndex] = useState<number | null>(null);\n  // 수정된 텍스트 관리 (imageIndex → 텍스트 배열)\n  const [editedTexts, setEditedTexts] = useState<{ [key: number]: string[] }>({});\n\n  // 최신 images 상태를 추적하기 위한 ref\n  const imagesRef = useRef<File[]>(images);\n\n  // images prop이 변경될 때마다 ref 업데이트\n  useEffect(() => {\n    imagesRef.current = images;\n  }, [images]);\n\n  // 커스텀 프롬프트 관리 함수들 (useCallback으로 최적화)\n  const updateCustomPrompt = useCallback((imageIndex: number, prompt: string, enabled: boolean) => {\n    setCustomPrompts(prev => {\n      const currentPrompt = prev[imageIndex];\n      // 값이 같으면 업데이트하지 않음 (불필요한 리렌더링 방지)\n      if (currentPrompt &&\n          currentPrompt.prompt === prompt &&\n          currentPrompt.enabled === enabled) {\n        return prev;\n      }\n\n      return {\n        ...prev,\n        [imageIndex]: {\n          imageIndex,\n          prompt,\n          enabled\n        }\n      };\n    });\n  }, []);\n\n  const togglePromptExpanded = useCallback((imageIndex: number) => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  }, []);\n\n  // 텍스트 수정 핸들러\n  const handleTextEdit = useCallback((imageIndex: number, textIdx: number, newValue: string) => {\n    setEditedTexts(prev => {\n      const current = prev[imageIndex] || [];\n      const updated = [...current];\n      updated[textIdx] = newValue;\n      return { ...prev, [imageIndex]: updated };\n    });\n  }, []);\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  const textImagePairs = useMemo((): (TextImagePair & { imageIndex: number })[] => {\n    const bodyTexts = Object.entries(content)\n      .filter(([key, value]) => key.startsWith('body') && value?.trim())\n      .map(([key, value], index) => ({ key, value: value.trim(), index }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map<number, File>();\n    images.forEach(img => {\n      const storedIndex = (img as any).__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${(img as any).__imageIndex})`));\n\n    const pairs: (TextImagePair & { imageIndex: number })[] = [];\n\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({ key, value, index }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${foundImage?.name || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index, // 실제 이미지 인덱스 저장\n          isGenerating: false,\n          customPrompt: customPrompt?.prompt || '',\n          useCustomPrompt: customPrompt?.enabled || false,\n        });\n      });\n    } else if (imageUploadMode === 'per-two-scripts') {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n\n          // 원본 텍스트 배열\n          const originalTexts = [text1.value, text2?.value].filter(Boolean) as string[];\n          // 수정된 텍스트 배열 (없으면 원본 사용)\n          const edited = editedTexts[imageIndex] || originalTexts;\n\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${foundImage?.name || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex, // 실제 이미지 인덱스 저장\n            isGenerating: false,\n            customPrompt: customPrompt?.prompt || '',\n            useCustomPrompt: customPrompt?.enabled || false,\n            editedTexts: edited,\n            originalTexts: originalTexts,\n          });\n        }\n      }\n    } else if (imageUploadMode === 'single-for-all') {\n      // 모든 텍스트에 이미지 1개\n      const allTexts = bodyTexts.map(({ key, value }) => key.replace('body', '대사')).join(' + ');\n      const allContent = bodyTexts.map(({ value }) => value).join(' / ');\n      const foundImage = imageMap.get(0); // 첫 번째 (그리고 유일한) 이미지\n      const customPrompt = customPrompts[0];\n\n      console.log(`📋 single-for-all: 모든 대사, imageIndex=0, foundImage=${foundImage?.name || 'null'}`);\n      pairs.push({\n        textIndex: 0,\n        textKey: allTexts,\n        textContent: allContent,\n        image: foundImage || null,\n        imageIndex: 0, // 항상 첫 번째 이미지 인덱스 사용\n        isGenerating: false,\n        customPrompt: customPrompt?.prompt || '',\n        useCustomPrompt: customPrompt?.enabled || false,\n      });\n    }\n\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts, editedTexts]);\n  \n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${(img as any).__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex: number, acceptedFiles: File[]) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증 (모드에 따라 다른 제한)\n    const maxSize = imageUploadMode === 'single-for-all' ? 80 * 1024 * 1024 : 40 * 1024 * 1024;\n    const maxSizeText = imageUploadMode === 'single-for-all' ? '80MB' : '40MB';\n\n    if (file.size > maxSize) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: `파일 크기가 ${maxSizeText}를 초과합니다` }));\n      return;\n    }\n\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다' }));\n      return;\n    }\n\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    (file as any).__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 최신 images 상태를 가져와서 업데이트\n    const currentImages = imagesRef.current;\n    console.log('🔄 업데이트 전 currentImages (ref):', currentImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = currentImages.filter(img => (img as any).__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      const indexA = (a as any).__imageIndex ?? 0;\n      const indexB = (b as any).__imageIndex ?? 0;\n      return indexA - indexB;\n    });\n\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n\n    onChange(newImages, imageUploadMode);\n  }, [imageUploadMode, onChange]); // images 의존성 제거\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex: number, pair: TextImagePair & { imageIndex: number }, customPrompt?: string, useCustomPrompt?: boolean) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'pair:', pair, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'generating' }));\n\n    try {\n      // 요청 바디 구성\n      let requestBody: any = {\n        job_id: jobId  // Job ID 추가\n      };\n\n      // 🎯 우선순위 1: 커스텀 프롬프트\n      if (useCustomPrompt && customPrompt?.trim()) {\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 [우선순위 1] 커스텀 프롬프트 사용:', customPrompt.trim());\n      }\n      // 🎯 우선순위 2: 수정된 텍스트 (per-two-scripts 모드)\n      else if (pair.editedTexts && pair.originalTexts &&\n               pair.editedTexts.some((t, idx) => t !== pair.originalTexts?.[idx])) {\n        requestBody.text = pair.editedTexts[0];\n        if (pair.editedTexts[1]) {\n          requestBody.additional_context = pair.editedTexts[1];\n        }\n        console.log('📝 [우선순위 2] 수정된 텍스트 사용:', pair.editedTexts[0]);\n      }\n      // 🎯 우선순위 3: 원본 텍스트\n      else {\n        const texts = pair.textContent.split(' / ');\n        requestBody.text = texts[0];\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 [우선순위 3] 원본 텍스트 사용:', texts[0]);\n      }\n\n      console.log('🚀 요청 바디 (Job ID 포함):', requestBody);\n\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, { type: 'image/png' });\n\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      \n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'success' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'error' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = (imageIndex: number) => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 최신 images 상태를 가져와서 삭제\n    const currentImages = imagesRef.current;\n    const newImages = currentImages.filter(img => (img as any).__imageIndex !== imageIndex);\n    \n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n    \n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = { ...prev };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    \n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n    \n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex: number, image: File) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 북마크 모달 열기\n  const handleOpenBookmarkModal = (imageIndex: number) => {\n    console.log('🎬 북마크 모달 열기 - imageIndex:', imageIndex);\n    setCurrentBookmarkIndex(imageIndex);\n    setBookmarkModalOpen(true);\n  };\n\n  // 북마크 모달 닫기\n  const handleCloseBookmarkModal = () => {\n    setBookmarkModalOpen(false);\n    setCurrentBookmarkIndex(null);\n  };\n\n  // 북마크 비디오 선택 핸들러\n  const handleSelectBookmarkVideo = async (video: BookmarkVideo) => {\n    if (currentBookmarkIndex === null) return;\n\n    console.log('✅ 북마크 비디오 선택:', video.filename, 'imageIndex:', currentBookmarkIndex);\n\n    try {\n      // 생성 상태 업데이트\n      setGenerationStatus(prev => ({ ...prev, [currentBookmarkIndex]: 'generating' }));\n\n      // 백엔드 API 호출: 북마크 비디오를 Job 폴더로 복사\n      const response = await apiService.copyBookmarkVideo(\n        jobId,\n        video.filename,\n        currentBookmarkIndex\n      );\n\n      if (response.status === 'success') {\n        // 복사된 비디오 파일을 File 객체로 변환하여 이미지 배열에 추가\n        const videoUrl = response.data.file_url;\n        const videoFilename = response.data.filename;\n\n        // 비디오 파일을 Fetch로 가져와서 File 객체 생성\n        const videoResponse = await fetch(videoUrl);\n        if (!videoResponse.ok) {\n          throw new Error('비디오 파일 다운로드에 실패했습니다');\n        }\n\n        const blob = await videoResponse.blob();\n        const file = new File([blob], videoFilename, { type: 'video/mp4' });\n\n        console.log('📸 북마크 비디오 파일 생성 완료 - fileName:', videoFilename, 'imageIndex:', currentBookmarkIndex);\n\n        // 이미지 배열 업데이트\n        handleIndividualImageUpload(currentBookmarkIndex, [file]);\n\n        setGenerationStatus(prev => ({ ...prev, [currentBookmarkIndex]: 'success' }));\n        setTimeout(() => {\n          setGenerationStatus(prev => {\n            const newStatus = { ...prev };\n            delete newStatus[currentBookmarkIndex];\n            return newStatus;\n          });\n        }, 3000);\n\n        console.log('✅ 북마크 비디오 복사 및 업로드 완료');\n      }\n    } catch (error: any) {\n      console.error('❌ 북마크 비디오 선택 오류:', error);\n      setGenerationStatus(prev => ({ ...prev, [currentBookmarkIndex]: 'error' }));\n      setUploadErrors(prev => ({ ...prev, [currentBookmarkIndex]: error.message || '북마크 비디오 불러오기 실패' }));\n\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[currentBookmarkIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 비디오 미리보기 컴포넌트 (브라우저 직접 재생)\n  const VideoPreview: React.FC<{ file: File }> = memo(({ file }) => {\n    const [videoUrl, setVideoUrl] = useState<string | null>(null);\n\n    useEffect(() => {\n      // 브라우저에서 직접 재생할 수 있도록 URL 생성\n      const url = URL.createObjectURL(file);\n      setVideoUrl(url);\n\n      return () => {\n        if (url) {\n          URL.revokeObjectURL(url);\n        }\n      };\n    }, [file]);\n\n    return (\n      <Box sx={{ position: 'relative' }}>\n        {videoUrl && (\n          <video\n            src={videoUrl}\n            style={{\n              width: '100%',\n              aspectRatio: '1/1',\n              objectFit: 'cover',\n              borderRadius: '8px'\n            }}\n            autoPlay\n            muted\n            loop\n            playsInline\n            controls={false}\n            onError={(e) => {\n              console.error('비디오 재생 오류:', e);\n            }}\n          />\n        )}\n\n        {/* 비디오 아이콘 오버레이 */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 8,\n            left: 8,\n            bgcolor: 'rgba(0,0,0,0.7)',\n            borderRadius: 1,\n            p: 0.5,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <MovieIcon sx={{ fontSize: 16, color: 'white' }} />\n          <Typography variant=\"caption\" color=\"white\" sx={{ ml: 0.5 }}>\n            영상\n          </Typography>\n        </Box>\n      </Box>\n    );\n  });\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone: React.FC<{\n    imageIndex: number;\n    pair: TextImagePair & { imageIndex: number };\n  }> = memo(({ imageIndex, pair }) => {\n    const onDrop = useCallback((acceptedFiles: File[]) => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm', '.mkv']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // ref를 통한 포커스 유지\n    const textFieldRef = useRef<HTMLInputElement>(null);\n\n    // 로컬 상태로 입력값 관리 (포커스 유지를 위해)\n    const [localPromptValue, setLocalPromptValue] = useState(currentCustomPrompt?.prompt || '');\n    const [isInitialized, setIsInitialized] = useState(false);\n    const [lastUpdateTime, setLastUpdateTime] = useState(0);\n\n    // 초기화 시에만 외부 상태를 로컬 상태에 동기화\n    useEffect(() => {\n      if (!isInitialized) {\n        setLocalPromptValue(currentCustomPrompt?.prompt || '');\n        setIsInitialized(true);\n      }\n    }, [currentCustomPrompt?.prompt, isInitialized]);\n\n    // 디바운스를 위한 useEffect - 외부 상태 업데이트 방지\n    useEffect(() => {\n      if (!localPromptValue.trim() && !currentCustomPrompt?.prompt) {\n        return; // 빈 값인 경우 업데이트 하지 않음\n      }\n\n      const timeoutId = setTimeout(() => {\n        const currentExternalValue = customPrompts[imageIndex]?.prompt || '';\n        if (localPromptValue !== currentExternalValue) {\n          // 클로저를 사용하여 함수 호출 시점의 값을 캡처\n          const enabled = customPrompts[imageIndex]?.enabled || false;\n          updateCustomPrompt(imageIndex, localPromptValue, enabled);\n        }\n      }, 1000); // 1초로 늘려서 더 안정적으로\n\n      return () => clearTimeout(timeoutId);\n    }, [localPromptValue, imageIndex]);\n\n    // 커스텀 프롬프트 변경 핸들러 (로컬 상태만 업데이트)\n    const handleCustomPromptChange = useCallback((prompt: string) => {\n      setLocalPromptValue(prompt);\n    }, []);\n\n    // 커스텀 프롬프트 활성화/비활성화 핸들러\n    const handleCustomPromptToggle = useCallback((enabled: boolean) => {\n      updateCustomPrompt(imageIndex, localPromptValue, enabled);\n    }, [imageIndex, localPromptValue, updateCustomPrompt]);\n\n    return (\n      <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <CardContent sx={{ flex: 1 }}>\n          {/* 텍스트 표시 */}\n          <Typography variant=\"h6\" gutterBottom sx={{\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          }}>\n            {pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')}\n          </Typography>\n\n          {/* per-two-scripts 모드: 개별 텍스트박스 */}\n          {imageUploadMode === 'per-two-scripts' && pair.editedTexts ? (\n            <Box sx={{ mb: 2 }}>\n              {pair.editedTexts.map((text, idx) => (\n                <TextField\n                  key={idx}\n                  fullWidth\n                  multiline\n                  rows={2}\n                  value={text}\n                  onChange={(e) => handleTextEdit(imageIndex, idx, e.target.value)}\n                  label={`대사 ${pair.textIndex + idx + 1}`}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  sx={{ mb: 1 }}\n                  helperText={idx === 0 ? \"수정된 텍스트는 영상 생성 시 사용됩니다\" : \"\"}\n                />\n              ))}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" sx={{\n              mb: 2,\n              p: 1.5,\n              bgcolor: 'grey.50',\n              borderRadius: 1,\n              border: '1px solid',\n              borderColor: 'grey.200',\n              fontSize: '0.8rem',\n              lineHeight: 1.4\n            }}>\n              {pair.textContent}\n            </Typography>\n          )}\n\n          {/* 커스텀 프롬프트 섹션 */}\n          <Box sx={{ mb: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\n                AI 생성 옵션\n              </Typography>\n              <IconButton\n                size=\"small\"\n                onClick={() => togglePromptExpanded(imageIndex)}\n                sx={{ p: 0.5 }}\n              >\n                {isPromptExpanded ? <ExpandLess fontSize=\"small\" /> : <ExpandMore fontSize=\"small\" />}\n              </IconButton>\n            </Box>\n\n            <Collapse in={isPromptExpanded}>\n              <Box sx={{ bgcolor: 'rgba(25, 118, 210, 0.04)', p: 1.5, borderRadius: 1, border: '1px solid rgba(25, 118, 210, 0.12)' }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={currentCustomPrompt?.enabled || false}\n                      onChange={(e) => handleCustomPromptToggle(e.target.checked)}\n                      size=\"small\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"caption\" sx={{ fontWeight: 500 }}>\n                      커스텀 프롬프트 사용\n                    </Typography>\n                  }\n                  sx={{ mb: 1, ml: 0 }}\n                />\n\n                {currentCustomPrompt?.enabled && (\n                  <TextField\n                    inputRef={textFieldRef}\n                    key={`prompt-input-${imageIndex}-stable`}\n                    fullWidth\n                    multiline\n                    rows={2}\n                    size=\"small\"\n                    placeholder=\"이미지 생성을 위한 커스텀 프롬프트를 입력하세요...\"\n                    value={localPromptValue}\n                    onChange={(e) => handleCustomPromptChange(e.target.value)}\n                    variant=\"outlined\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        fontSize: '0.75rem',\n                        bgcolor: 'white'\n                      }\n                    }}\n                    helperText=\"실제 영상에서는 기존 대사가 사용되며, 이 프롬프트는 이미지 생성에만 사용됩니다.\"\n                    autoComplete=\"off\"\n                    spellCheck=\"false\"\n                  />\n                )}\n\n                {!currentCustomPrompt?.enabled && (\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontStyle: 'italic' }}>\n                    기본 모드: 위의 대사 내용을 기반으로 이미지를 생성합니다.\n                  </Typography>\n                )}\n              </Box>\n            </Collapse>\n          </Box>\n\n          {/* 이미지/비디오 표시 또는 드래그앤드롭 영역 */}\n          {pair.image ? (\n            <Box sx={{ position: 'relative', mb: 2 }}>\n              {pair.image.type.startsWith('video/') ? (\n                <VideoPreview file={pair.image} />\n              ) : (\n                <Box\n                  sx={{\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    borderRadius: 1\n                  }}\n                />\n              )}\n              \n              {/* 이미지 컨트롤 버튼들 */}\n              <Box sx={{ \n                position: 'absolute', \n                top: 8, \n                right: 8,\n                display: 'flex',\n                gap: 0.5\n              }}>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleDownloadImage(imageIndex, pair.image!)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 다운로드\"\n                >\n                  <Download color=\"success\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleRemoveImage(imageIndex)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 삭제\"\n                >\n                  <Delete color=\"error\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => {\n                    console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n                    handleIndividualGenerate(\n                      imageIndex,\n                      pair,\n                      currentCustomPrompt?.prompt,\n                      currentCustomPrompt?.enabled\n                    );\n                  }}\n                  disabled={isGenerating}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 재생성\"\n                >\n                  {isGenerating ? (\n                    <CircularProgress size={16} />\n                  ) : (\n                    <Refresh color=\"primary\" fontSize=\"small\" />\n                  )}\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" sx={{ \n                position: 'absolute',\n                bottom: 4,\n                left: 8,\n                bgcolor: 'rgba(0,0,0,0.7)',\n                color: 'white',\n                px: 1,\n                py: 0.5,\n                borderRadius: 1\n              }}>\n                {pair.image.name}\n              </Typography>\n            </Box>\n          ) : (\n            <Box\n              {...getRootProps()}\n              sx={{\n                border: 2,\n                borderColor: isDragActive ? 'primary.main' : 'grey.300',\n                borderStyle: 'dashed',\n                borderRadius: 1,\n                p: 2,\n                textAlign: 'center',\n                cursor: 'pointer',\n                bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n                mb: 2,\n                aspectRatio: '1/1',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  bgcolor: 'action.hover'\n                }\n              }}\n            >\n              <input {...getInputProps()} />\n              <Box sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n                <CloudUpload sx={{ fontSize: 32, color: 'grey.400', mb: 1 }} />\n              </Box>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'}\n              </Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 0.5, fontSize: '0.7rem' }}>\n                최대 {imageUploadMode === 'single-for-all' ? '40MB' : '10MB'}\n              </Typography>\n            </Box>\n          )}\n\n          {/* 상태 메시지 */}\n          {isGenerating && (\n            <Alert severity=\"info\" sx={{ mt: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <CircularProgress size={16} sx={{ mr: 1 }} />\n                이미지 생성 중...\n              </Box>\n            </Alert>\n          )}\n          \n          {generationSuccess && (\n            <Alert severity=\"success\" sx={{ mt: 1 }}>\n              이미지 생성 완료!\n            </Alert>\n          )}\n          \n          {generationError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              이미지 생성 실패. 다시 시도해주세요.\n            </Alert>\n          )}\n          \n          {uploadError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              {uploadError}\n            </Alert>\n          )}\n        </CardContent>\n\n        {/* 하단 액션 버튼 */}\n        <Box sx={{ p: 1.5, pt: 0, display: 'flex', flexDirection: 'column', gap: 1 }}>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<AutoFixHigh />}\n            onClick={() => {\n              console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n              handleIndividualGenerate(\n                imageIndex,\n                pair,\n                currentCustomPrompt?.prompt,\n                currentCustomPrompt?.enabled\n              );\n            }}\n            disabled={isGenerating}\n            sx={{\n              bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n              borderColor: currentCustomPrompt?.enabled ? 'primary.main' : 'grey.300',\n              color: currentCustomPrompt?.enabled ? 'primary.main' : 'text.primary',\n              '&:hover': {\n                bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover',\n              }\n            }}\n          >\n            {isGenerating ? '생성중...' : (currentCustomPrompt?.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성')}\n          </Button>\n\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<VideoLibrary />}\n            onClick={() => handleOpenBookmarkModal(imageIndex)}\n            disabled={isGenerating}\n            sx={{\n              borderColor: 'secondary.main',\n              color: 'secondary.main',\n              '&:hover': {\n                bgcolor: 'rgba(156, 39, 176, 0.08)',\n                borderColor: 'secondary.main',\n              }\n            }}\n          >\n            동영상 불러오기\n          </Button>\n        </Box>\n      </Card>\n    );\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom sx={{ mb: 3 }}>\n        텍스트-이미지 매칭 관리\n      </Typography>\n      \n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        각 텍스트에 대응되는 이미지를 개별적으로 관리할 수 있습니다.\n        드래그앤드롭으로 이미지를 업로드하거나 AI로 자동 생성하세요.\n        <br />\n        <Typography component=\"span\" variant=\"caption\" color=\"text.secondary\">\n          파일 크기 제한: {imageUploadMode === 'single-for-all' ? '최대 40MB' : '각 파일 최대 10MB'}\n        </Typography>\n      </Typography>\n\n      <Grid container spacing={2}>\n        {textImagePairs.map((pair, index) => (\n          <Grid item xs={12} sm={6} md={4} key={`dropzone-${pair.imageIndex}-${pair.textKey}`}>\n            <IndividualDropZone imageIndex={pair.imageIndex} pair={pair} />\n          </Grid>\n        ))}\n      </Grid>\n\n      {textImagePairs.length === 0 && (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          대본을 먼저 작성해주세요.\n        </Alert>\n      )}\n\n      {/* 북마크 비디오 선택 모달 */}\n      <VideoBookmarkModal\n        open={bookmarkModalOpen}\n        onClose={handleCloseBookmarkModal}\n        onSelect={handleSelectBookmarkVideo}\n      />\n    </Box>\n  );\n};\n\nexport default TextImagePairManager;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAEC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACtF,SACEC,GAAG,EAEHC,UAAU,EACVC,MAAM,EACNC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,UAAU,EAEVC,KAAK,EACLC,gBAAgB,EAChBC,SAAS,EACTC,gBAAgB,EAChBC,MAAM,EACNC,QAAQ,QACH,eAAe;AACtB,SACEC,WAAW,EACXC,MAAM,EACNC,WAAW,EACXC,OAAO,EAEPC,QAAQ,EAERC,UAAU,EACVC,UAAU,EACVC,KAAK,IAAIC,SAAS,EAElBC,YAAY,QACP,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,UAAU,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWzC,MAAMC,oBAAyD,GAAGA,CAAC;EACjEC,OAAO;EACPC,eAAe;EACfC,MAAM;EACNC,KAAK;EAAE;EACPC,QAAQ;EACRC,mBAAmB,CAAE;AACvB,CAAC,KAAK;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;IAAAC,GAAA,GAAAD,YAAA;EACJ,MAAM,CAACE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9C,QAAQ,CAA4B,CAAC,CAAC,CAAC;EACvF,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAA4B,CAAC,CAAC,CAAC;EAC/E,MAAM,CAACiD,aAAa,EAAEC,gBAAgB,CAAC,GAAGlD,QAAQ,CAAkC,CAAC,CAAC,CAAC;EACvF,MAAM,CAACmD,eAAe,EAAEC,kBAAkB,CAAC,GAAGpD,QAAQ,CAA6B,CAAC,CAAC,CAAC;EACtF,MAAM,CAACqD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtD,QAAQ,CAAU,KAAK,CAAC;EAC1E,MAAM,CAACuD,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGxD,QAAQ,CAAgB,IAAI,CAAC;EACrF;EACA,MAAM,CAACyD,WAAW,EAAEC,cAAc,CAAC,GAAG1D,QAAQ,CAA8B,CAAC,CAAC,CAAC;;EAE/E;EACA,MAAM2D,SAAS,GAAGtD,MAAM,CAASgC,MAAM,CAAC;;EAExC;EACAjC,SAAS,CAAC,MAAM;IACduD,SAAS,CAACC,OAAO,GAAGvB,MAAM;EAC5B,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMwB,kBAAkB,GAAG5D,WAAW,CAAC,CAAC6D,UAAkB,EAAEC,MAAc,EAAEC,OAAgB,KAAK;IAC/Fd,gBAAgB,CAACe,IAAI,IAAI;MACvB,MAAMC,aAAa,GAAGD,IAAI,CAACH,UAAU,CAAC;MACtC;MACA,IAAII,aAAa,IACbA,aAAa,CAACH,MAAM,KAAKA,MAAM,IAC/BG,aAAa,CAACF,OAAO,KAAKA,OAAO,EAAE;QACrC,OAAOC,IAAI;MACb;MAEA,OAAO;QACL,GAAGA,IAAI;QACP,CAACH,UAAU,GAAG;UACZA,UAAU;UACVC,MAAM;UACNC;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,oBAAoB,GAAGlE,WAAW,CAAE6D,UAAkB,IAAK;IAC/DV,kBAAkB,CAACa,IAAI,KAAK;MAC1B,GAAGA,IAAI;MACP,CAACH,UAAU,GAAG,CAACG,IAAI,CAACH,UAAU;IAChC,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,cAAc,GAAGnE,WAAW,CAAC,CAAC6D,UAAkB,EAAEO,OAAe,EAAEC,QAAgB,KAAK;IAC5FZ,cAAc,CAACO,IAAI,IAAI;MACrB,MAAML,OAAO,GAAGK,IAAI,CAACH,UAAU,CAAC,IAAI,EAAE;MACtC,MAAMS,OAAO,GAAG,CAAC,GAAGX,OAAO,CAAC;MAC5BW,OAAO,CAACF,OAAO,CAAC,GAAGC,QAAQ;MAC3B,OAAO;QAAE,GAAGL,IAAI;QAAE,CAACH,UAAU,GAAGS;MAAQ,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,cAAc,GAAGtE,OAAO,CAAC,MAAkD;IAC/E,MAAMuE,SAAS,GAAGC,MAAM,CAACC,OAAO,CAACxC,OAAO,CAAC,CACtCyC,MAAM,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAKD,GAAG,CAACE,UAAU,CAAC,MAAM,CAAC,KAAID,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,IAAI,CAAC,CAAC,EAAC,CACjEC,GAAG,CAAC,CAAC,CAACJ,GAAG,EAAEC,KAAK,CAAC,EAAEI,KAAK,MAAM;MAAEL,GAAG;MAAEC,KAAK,EAAEA,KAAK,CAACE,IAAI,CAAC,CAAC;MAAEE;IAAM,CAAC,CAAC,CAAC;;IAEtE;IACA,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAe,CAAC;IACxC/C,MAAM,CAACgD,OAAO,CAACC,GAAG,IAAI;MACpB,MAAMC,WAAW,GAAID,GAAG,CAASE,YAAY;MAC7C,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAAE;QACnCJ,QAAQ,CAACM,GAAG,CAACF,WAAW,EAAED,GAAG,CAAC;MAChC;IACF,CAAC,CAAC;IAEFI,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEC,KAAK,CAACC,IAAI,CAACV,QAAQ,CAACR,OAAO,CAAC,CAAC,CAAC,CAACM,GAAG,CAAC,CAAC,CAACa,GAAG,EAAEC,IAAI,CAAC,KAAK,GAAGD,GAAG,IAAIC,IAAI,CAACC,IAAI,EAAE,CAAC,CAAC;IAC/HN,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAElB,SAAS,CAACwB,MAAM,EAAE,kBAAkB,EAAE7D,eAAe,CAAC;IACtFsD,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEtD,MAAM,CAAC4C,GAAG,CAACK,GAAG,IAAI,GAAGA,GAAG,CAACU,IAAI,iBAAkBV,GAAG,CAASE,YAAY,GAAG,CAAC,CAAC;IAE5G,MAAMU,KAAiD,GAAG,EAAE;IAE5D,IAAI9D,eAAe,KAAK,YAAY,EAAE;MACpC;MACAqC,SAAS,CAACY,OAAO,CAAC,CAAC;QAAER,GAAG;QAAEC,KAAK;QAAEI;MAAM,CAAC,KAAK;QAC3C,MAAMiB,UAAU,GAAGhB,QAAQ,CAACiB,GAAG,CAAClB,KAAK,CAAC;QACtC,MAAMmB,YAAY,GAAGpD,aAAa,CAACiC,KAAK,CAAC;QACzCQ,OAAO,CAACC,GAAG,CAAC,4BAA4BT,KAAK,gBAAgBA,KAAK,gBAAgB,CAAAiB,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEH,IAAI,KAAI,MAAM,EAAE,CAAC;QAC/GE,KAAK,CAACI,IAAI,CAAC;UACTC,SAAS,EAAErB,KAAK;UAChBsB,OAAO,EAAE3B,GAAG;UACZ4B,WAAW,EAAE3B,KAAK;UAClB4B,KAAK,EAAEP,UAAU,IAAI,IAAI;UACzBrC,UAAU,EAAEoB,KAAK;UAAE;UACnByB,YAAY,EAAE,KAAK;UACnBN,YAAY,EAAE,CAAAA,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEtC,MAAM,KAAI,EAAE;UACxC6C,eAAe,EAAE,CAAAP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAErC,OAAO,KAAI;QAC5C,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI5B,eAAe,KAAK,iBAAiB,EAAE;MAChD;MACA,KAAK,IAAIyE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpC,SAAS,CAACwB,MAAM,EAAEY,CAAC,IAAI,CAAC,EAAE;QAC5C,MAAM/C,UAAU,GAAGgD,IAAI,CAACC,KAAK,CAACF,CAAC,GAAG,CAAC,CAAC;QACpC,MAAMG,KAAK,GAAGvC,SAAS,CAACoC,CAAC,CAAC;QAC1B,MAAMI,KAAK,GAAGxC,SAAS,CAACoC,CAAC,GAAG,CAAC,CAAC;QAE9B,IAAIG,KAAK,EAAE;UACT,MAAMb,UAAU,GAAGhB,QAAQ,CAACiB,GAAG,CAACtC,UAAU,CAAC;UAC3C,MAAMuC,YAAY,GAAGpD,aAAa,CAACa,UAAU,CAAC;;UAE9C;UACA,MAAMoD,aAAa,GAAG,CAACF,KAAK,CAAClC,KAAK,EAAEmC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEnC,KAAK,CAAC,CAACF,MAAM,CAACuC,OAAO,CAAa;UAC7E;UACA,MAAMC,MAAM,GAAG3D,WAAW,CAACK,UAAU,CAAC,IAAIoD,aAAa;UAEvDxB,OAAO,CAACC,GAAG,CAAC,iCAAiCkB,CAAC,gBAAgB/C,UAAU,gBAAgB,CAAAqC,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEH,IAAI,KAAI,MAAM,EAAE,CAAC;UACrHE,KAAK,CAACI,IAAI,CAAC;YACTC,SAAS,EAAEM,CAAC;YACZL,OAAO,EAAE,GAAGQ,KAAK,CAACnC,GAAG,GAAGoC,KAAK,GAAG,IAAIA,KAAK,CAACpC,GAAG,EAAE,GAAG,EAAE,EAAE;YACtD4B,WAAW,EAAE,GAAGO,KAAK,CAAClC,KAAK,GAAGmC,KAAK,GAAG,MAAMA,KAAK,CAACnC,KAAK,EAAE,GAAG,EAAE,EAAE;YAChE4B,KAAK,EAAEP,UAAU,IAAI,IAAI;YACzBrC,UAAU,EAAEA,UAAU;YAAE;YACxB6C,YAAY,EAAE,KAAK;YACnBN,YAAY,EAAE,CAAAA,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEtC,MAAM,KAAI,EAAE;YACxC6C,eAAe,EAAE,CAAAP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAErC,OAAO,KAAI,KAAK;YAC/CP,WAAW,EAAE2D,MAAM;YACnBF,aAAa,EAAEA;UACjB,CAAC,CAAC;QACJ;MACF;IACF,CAAC,MAAM,IAAI9E,eAAe,KAAK,gBAAgB,EAAE;MAC/C;MACA,MAAMiF,QAAQ,GAAG5C,SAAS,CAACQ,GAAG,CAAC,CAAC;QAAEJ,GAAG;QAAEC;MAAM,CAAC,KAAKD,GAAG,CAACyC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;MACzF,MAAMC,UAAU,GAAG/C,SAAS,CAACQ,GAAG,CAAC,CAAC;QAAEH;MAAM,CAAC,KAAKA,KAAK,CAAC,CAACyC,IAAI,CAAC,KAAK,CAAC;MAClE,MAAMpB,UAAU,GAAGhB,QAAQ,CAACiB,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC,MAAMC,YAAY,GAAGpD,aAAa,CAAC,CAAC,CAAC;MAErCyC,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAAQ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEH,IAAI,KAAI,MAAM,EAAE,CAAC;MAC/FE,KAAK,CAACI,IAAI,CAAC;QACTC,SAAS,EAAE,CAAC;QACZC,OAAO,EAAEa,QAAQ;QACjBZ,WAAW,EAAEe,UAAU;QACvBd,KAAK,EAAEP,UAAU,IAAI,IAAI;QACzBrC,UAAU,EAAE,CAAC;QAAE;QACf6C,YAAY,EAAE,KAAK;QACnBN,YAAY,EAAE,CAAAA,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEtC,MAAM,KAAI,EAAE;QACxC6C,eAAe,EAAE,CAAAP,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAErC,OAAO,KAAI;MAC5C,CAAC,CAAC;IACJ;IAEA0B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEO,KAAK,CAACD,MAAM,CAAC;IAC5C,OAAOC,KAAK;EACd,CAAC,EAAE,CAAC/D,OAAO,EAAEE,MAAM,EAAED,eAAe,EAAEa,aAAa,EAAEQ,WAAW,CAAC,CAAC;;EAElE;EACAiC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEtD,MAAM,CAAC4D,MAAM,CAAC;EACjDP,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEtD,MAAM,CAAC4D,MAAM,GAAG,CAAC,GAAG5D,MAAM,CAAC4C,GAAG,CAACK,GAAG,IAAI,GAAGA,GAAG,CAACU,IAAI,UAAWV,GAAG,CAASE,YAAY,GAAG,CAAC,GAAG,MAAM,CAAC;EAClIE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE9C,gBAAgB,CAAC;;EAErD;EACA,MAAM4E,2BAA2B,GAAGxH,WAAW,CAAC,CAAC6D,UAAkB,EAAE4D,aAAqB,KAAK;IAC7F,IAAIA,aAAa,CAACzB,MAAM,KAAK,CAAC,EAAE;IAEhC,MAAMF,IAAI,GAAG2B,aAAa,CAAC,CAAC,CAAC;;IAE7B;IACA1E,eAAe,CAACiB,IAAI,IAAI;MACtB,MAAM0D,SAAS,GAAG;QAAE,GAAG1D;MAAK,CAAC;MAC7B,OAAO0D,SAAS,CAAC7D,UAAU,CAAC;MAC5B,OAAO6D,SAAS;IAClB,CAAC,CAAC;;IAEF;IACA,MAAMC,OAAO,GAAGxF,eAAe,KAAK,gBAAgB,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IAC1F,MAAMyF,WAAW,GAAGzF,eAAe,KAAK,gBAAgB,GAAG,MAAM,GAAG,MAAM;IAE1E,IAAI2D,IAAI,CAAC+B,IAAI,GAAGF,OAAO,EAAE;MACvB5E,eAAe,CAACiB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACH,UAAU,GAAG,UAAU+D,WAAW;MAAU,CAAC,CAAC,CAAC;MACpF;IACF;IAEA,MAAME,OAAO,GAAGhC,IAAI,CAACiC,IAAI,CAACjD,UAAU,CAAC,QAAQ,CAAC;IAC9C,MAAMkD,OAAO,GAAGlC,IAAI,CAACiC,IAAI,CAACjD,UAAU,CAAC,QAAQ,CAAC;IAE9C,IAAI,CAACgD,OAAO,IAAI,CAACE,OAAO,EAAE;MACxBjF,eAAe,CAACiB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACH,UAAU,GAAG;MAA2B,CAAC,CAAC,CAAC;MAChF;IACF;IAEA4B,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAE7B,UAAU,EAAE,WAAW,EAAEiC,IAAI,CAACC,IAAI,CAAC;;IAE/F;IACCD,IAAI,CAASP,YAAY,GAAG1B,UAAU;IACvC4B,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE7B,UAAU,CAAC;;IAEnD;IACA,MAAMoE,aAAa,GAAGvE,SAAS,CAACC,OAAO;IACvC8B,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEuC,aAAa,CAACjD,GAAG,CAACK,GAAG,IAAI,GAAGA,GAAG,CAACU,IAAI,UAAWV,GAAG,CAASE,YAAY,GAAG,CAAC,CAAC;;IAE1H;IACA,MAAM2C,SAAS,GAAGD,aAAa,CAACtD,MAAM,CAACU,GAAG,IAAKA,GAAG,CAASE,YAAY,KAAK1B,UAAU,CAAC;IACvFqE,SAAS,CAAC7B,IAAI,CAACP,IAAI,CAAC;;IAEpB;IACAoC,SAAS,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAAA,IAAAC,WAAA,EAAAC,YAAA;MACvB,MAAMC,MAAM,IAAAF,WAAA,GAAIF,CAAC,CAAS7C,YAAY,cAAA+C,WAAA,cAAAA,WAAA,GAAI,CAAC;MAC3C,MAAMG,MAAM,IAAAF,YAAA,GAAIF,CAAC,CAAS9C,YAAY,cAAAgD,YAAA,cAAAA,YAAA,GAAI,CAAC;MAC3C,OAAOC,MAAM,GAAGC,MAAM;IACxB,CAAC,CAAC;IAEFhD,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEwC,SAAS,CAAClD,GAAG,CAACK,GAAG,IAAI,GAAGA,GAAG,CAACU,IAAI,UAAWV,GAAG,CAASE,YAAY,GAAG,CAAC,CAAC;IAE3GjD,QAAQ,CAAC4F,SAAS,EAAE/F,eAAe,CAAC;EACtC,CAAC,EAAE,CAACA,eAAe,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEjC;EACA,MAAMoG,wBAAwB,GAAG,MAAAA,CAAO7E,UAAkB,EAAE8E,IAA4C,EAAEvC,YAAqB,EAAEO,eAAyB,KAAK;IAC7JlB,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAE7B,UAAU,EAAE,OAAO,EAAE8E,IAAI,EAAE,eAAe,EAAEvC,YAAY,EAAE,kBAAkB,EAAEO,eAAe,CAAC;IAC1J9D,mBAAmB,CAACmB,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,UAAU,GAAG;IAAa,CAAC,CAAC,CAAC;IAEtE,IAAI;MACF;MACA,IAAI+E,WAAgB,GAAG;QACrBC,MAAM,EAAExG,KAAK,CAAE;MACjB,CAAC;;MAED;MACA,IAAIsE,eAAe,IAAIP,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAErB,IAAI,CAAC,CAAC,EAAE;QAC3C6D,WAAW,CAACE,aAAa,GAAG1C,YAAY,CAACrB,IAAI,CAAC,CAAC;QAC/CU,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEU,YAAY,CAACrB,IAAI,CAAC,CAAC,CAAC;MAC9D;MACA;MAAA,KACK,IAAI4D,IAAI,CAACnF,WAAW,IAAImF,IAAI,CAAC1B,aAAa,IACtC0B,IAAI,CAACnF,WAAW,CAACuF,IAAI,CAAC,CAACC,CAAC,EAAEnD,GAAG;QAAA,IAAAoD,mBAAA;QAAA,OAAKD,CAAC,OAAAC,mBAAA,GAAKN,IAAI,CAAC1B,aAAa,cAAAgC,mBAAA,uBAAlBA,mBAAA,CAAqBpD,GAAG,CAAC;MAAA,EAAC,EAAE;QAC3E+C,WAAW,CAACM,IAAI,GAAGP,IAAI,CAACnF,WAAW,CAAC,CAAC,CAAC;QACtC,IAAImF,IAAI,CAACnF,WAAW,CAAC,CAAC,CAAC,EAAE;UACvBoF,WAAW,CAACO,kBAAkB,GAAGR,IAAI,CAACnF,WAAW,CAAC,CAAC,CAAC;QACtD;QACAiC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEiD,IAAI,CAACnF,WAAW,CAAC,CAAC,CAAC,CAAC;MAC7D;MACA;MAAA,KACK;QACH,MAAM4F,KAAK,GAAGT,IAAI,CAACnC,WAAW,CAAC6C,KAAK,CAAC,KAAK,CAAC;QAC3CT,WAAW,CAACM,IAAI,GAAGE,KAAK,CAAC,CAAC,CAAC;QAC3B,IAAIA,KAAK,CAACpD,MAAM,GAAG,CAAC,EAAE;UACpB4C,WAAW,CAACO,kBAAkB,GAAGC,KAAK,CAAC,CAAC,CAAC;QAC3C;QACA3D,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE0D,KAAK,CAAC,CAAC,CAAC,CAAC;MACjD;MAEA3D,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEkD,WAAW,CAAC;MAEjD,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACU,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,MAAM,IAAI,gBAAgB,CAAC;MACvD;MAEA,MAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMI,QAAQ,GAAGD,IAAI,CAACE,SAAS;;MAE/B;MACA,MAAMC,aAAa,GAAG,MAAMd,KAAK,CAACY,QAAQ,CAAC;MAC3C,IAAI,CAACE,aAAa,CAACR,EAAE,EAAE;QACrB,MAAM,IAAIG,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAMM,IAAI,GAAG,MAAMD,aAAa,CAACC,IAAI,CAAC,CAAC;MACvC,MAAMC,QAAQ,GAAG,wBAAwB1G,UAAU,MAAM;MACzD,MAAMiC,IAAI,GAAG,IAAI0E,IAAI,CAAC,CAACF,IAAI,CAAC,EAAEC,QAAQ,EAAE;QAAExC,IAAI,EAAE;MAAY,CAAC,CAAC;MAE9DtC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE6E,QAAQ,EAAE,iBAAiB,EAAE1G,UAAU,CAAC;;MAEhF;MACA2D,2BAA2B,CAAC3D,UAAU,EAAE,CAACiC,IAAI,CAAC,CAAC;MAE/CjD,mBAAmB,CAACmB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACH,UAAU,GAAG;MAAU,CAAC,CAAC,CAAC;MACnE4G,UAAU,CAAC,MAAM;QACf5H,mBAAmB,CAACmB,IAAI,IAAI;UAC1B,MAAM0G,SAAS,GAAG;YAAE,GAAG1G;UAAK,CAAC;UAC7B,OAAO0G,SAAS,CAAC7G,UAAU,CAAC;UAC5B,OAAO6G,SAAS;QAClB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdlF,OAAO,CAACkF,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC9H,mBAAmB,CAACmB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACH,UAAU,GAAG;MAAQ,CAAC,CAAC,CAAC;MACjE4G,UAAU,CAAC,MAAM;QACf5H,mBAAmB,CAACmB,IAAI,IAAI;UAC1B,MAAM0G,SAAS,GAAG;YAAE,GAAG1G;UAAK,CAAC;UAC7B,OAAO0G,SAAS,CAAC7G,UAAU,CAAC;UAC5B,OAAO6G,SAAS;QAClB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;;EAED;EACA,MAAME,iBAAiB,GAAI/G,UAAkB,IAAK;IAChD4B,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAE7B,UAAU,CAAC;;IAEtD;IACA,MAAMoE,aAAa,GAAGvE,SAAS,CAACC,OAAO;IACvC,MAAMuE,SAAS,GAAGD,aAAa,CAACtD,MAAM,CAACU,GAAG,IAAKA,GAAG,CAASE,YAAY,KAAK1B,UAAU,CAAC;;IAEvF;IACAd,eAAe,CAACiB,IAAI,IAAI;MACtB,MAAM0D,SAAS,GAAG;QAAE,GAAG1D;MAAK,CAAC;MAC7B,OAAO0D,SAAS,CAAC7D,UAAU,CAAC;MAC5B,OAAO6D,SAAS;IAClB,CAAC,CAAC;;IAEF;IACA7E,mBAAmB,CAACmB,IAAI,IAAI;MAC1B,MAAM0G,SAAS,GAAG;QAAE,GAAG1G;MAAK,CAAC;MAC7B,OAAO0G,SAAS,CAAC7G,UAAU,CAAC;MAC5B,OAAO6G,SAAS;IAClB,CAAC,CAAC;IAEFjF,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE7B,UAAU,CAAC;IACpD4B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEwC,SAAS,CAAClD,GAAG,CAACK,GAAG,IAAI,GAAGA,GAAG,CAACU,IAAI,UAAWV,GAAG,CAASE,YAAY,GAAG,CAAC,CAAC;IAElGjD,QAAQ,CAAC4F,SAAS,EAAE/F,eAAe,CAAC;EACtC,CAAC;;EAED;EACA,MAAM0I,mBAAmB,GAAG,MAAAA,CAAOhH,UAAkB,EAAE4C,KAAW,KAAK;IACrE,IAAI;MACF;MACA,IAAIA,KAAK,CAACV,IAAI,CAACjB,UAAU,CAAC,YAAY,CAAC,EAAE;QACvC;QACA,MAAMgG,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAG,mBAAmBxE,KAAK,CAACV,IAAI,EAAE;QAC3C+E,IAAI,CAACI,QAAQ,GAAG,eAAerH,UAAU,GAAG,CAAC,MAAM;QACnDkH,QAAQ,CAACrB,IAAI,CAACyB,WAAW,CAACL,IAAI,CAAC;QAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;QACZL,QAAQ,CAACrB,IAAI,CAAC2B,WAAW,CAACP,IAAI,CAAC;MACjC,CAAC,MAAM;QACL;QACA,MAAMQ,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC/E,KAAK,CAAC;QACtC,MAAMqE,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAI,GAAGK,GAAG;QACfR,IAAI,CAACI,QAAQ,GAAG,eAAerH,UAAU,GAAG,CAAC,IAAI4C,KAAK,CAACV,IAAI,EAAE;QAC7DgF,QAAQ,CAACrB,IAAI,CAACyB,WAAW,CAACL,IAAI,CAAC;QAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;QACZL,QAAQ,CAACrB,IAAI,CAAC2B,WAAW,CAACP,IAAI,CAAC;QAC/BS,GAAG,CAACE,eAAe,CAACH,GAAG,CAAC;MAC1B;MACA7F,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE7B,UAAU,EAAE,WAAW,EAAE4C,KAAK,CAACV,IAAI,CAAC;IAClF,CAAC,CAAC,OAAO4E,KAAK,EAAE;MACdlF,OAAO,CAACkF,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMe,uBAAuB,GAAI7H,UAAkB,IAAK;IACtD4B,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE7B,UAAU,CAAC;IACrDN,uBAAuB,CAACM,UAAU,CAAC;IACnCR,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMsI,wBAAwB,GAAGA,CAAA,KAAM;IACrCtI,oBAAoB,CAAC,KAAK,CAAC;IAC3BE,uBAAuB,CAAC,IAAI,CAAC;EAC/B,CAAC;;EAED;EACA,MAAMqI,yBAAyB,GAAG,MAAOC,KAAoB,IAAK;IAChE,IAAIvI,oBAAoB,KAAK,IAAI,EAAE;IAEnCmC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEmG,KAAK,CAACC,QAAQ,EAAE,aAAa,EAAExI,oBAAoB,CAAC;IAEjF,IAAI;MACF;MACAT,mBAAmB,CAACmB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACV,oBAAoB,GAAG;MAAa,CAAC,CAAC,CAAC;;MAEhF;MACA,MAAMgG,QAAQ,GAAG,MAAMxH,UAAU,CAACiK,iBAAiB,CACjD1J,KAAK,EACLwJ,KAAK,CAACC,QAAQ,EACdxI,oBACF,CAAC;MAED,IAAIgG,QAAQ,CAAC0C,MAAM,KAAK,SAAS,EAAE;QACjC;QACA,MAAMC,QAAQ,GAAG3C,QAAQ,CAACY,IAAI,CAACgC,QAAQ;QACvC,MAAMC,aAAa,GAAG7C,QAAQ,CAACY,IAAI,CAAC4B,QAAQ;;QAE5C;QACA,MAAMM,aAAa,GAAG,MAAM7C,KAAK,CAAC0C,QAAQ,CAAC;QAC3C,IAAI,CAACG,aAAa,CAACvC,EAAE,EAAE;UACrB,MAAM,IAAIG,KAAK,CAAC,qBAAqB,CAAC;QACxC;QAEA,MAAMM,IAAI,GAAG,MAAM8B,aAAa,CAAC9B,IAAI,CAAC,CAAC;QACvC,MAAMxE,IAAI,GAAG,IAAI0E,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE6B,aAAa,EAAE;UAAEpE,IAAI,EAAE;QAAY,CAAC,CAAC;QAEnEtC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEyG,aAAa,EAAE,aAAa,EAAE7I,oBAAoB,CAAC;;QAElG;QACAkE,2BAA2B,CAAClE,oBAAoB,EAAE,CAACwC,IAAI,CAAC,CAAC;QAEzDjD,mBAAmB,CAACmB,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACV,oBAAoB,GAAG;QAAU,CAAC,CAAC,CAAC;QAC7EmH,UAAU,CAAC,MAAM;UACf5H,mBAAmB,CAACmB,IAAI,IAAI;YAC1B,MAAM0G,SAAS,GAAG;cAAE,GAAG1G;YAAK,CAAC;YAC7B,OAAO0G,SAAS,CAACpH,oBAAoB,CAAC;YACtC,OAAOoH,SAAS;UAClB,CAAC,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC;QAERjF,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOiF,KAAU,EAAE;MACnBlF,OAAO,CAACkF,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxC9H,mBAAmB,CAACmB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACV,oBAAoB,GAAG;MAAQ,CAAC,CAAC,CAAC;MAC3EP,eAAe,CAACiB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACV,oBAAoB,GAAGqH,KAAK,CAAC0B,OAAO,IAAI;MAAkB,CAAC,CAAC,CAAC;MAElG5B,UAAU,CAAC,MAAM;QACf5H,mBAAmB,CAACmB,IAAI,IAAI;UAC1B,MAAM0G,SAAS,GAAG;YAAE,GAAG1G;UAAK,CAAC;UAC7B,OAAO0G,SAAS,CAACpH,oBAAoB,CAAC;UACtC,OAAOoH,SAAS;QAClB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;;EAED;EACA,MAAM4B,YAAsC,gBAAA7J,EAAA,cAAGvC,IAAI,CAAAuC,EAAA,CAAC,CAAC;IAAEqD;EAAK,CAAC,KAAK;IAAArD,EAAA;IAChE,MAAM,CAACwJ,QAAQ,EAAEM,WAAW,CAAC,GAAGxM,QAAQ,CAAgB,IAAI,CAAC;IAE7DI,SAAS,CAAC,MAAM;MACd;MACA,MAAMmL,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC1F,IAAI,CAAC;MACrCyG,WAAW,CAACjB,GAAG,CAAC;MAEhB,OAAO,MAAM;QACX,IAAIA,GAAG,EAAE;UACPC,GAAG,CAACE,eAAe,CAACH,GAAG,CAAC;QAC1B;MACF,CAAC;IACH,CAAC,EAAE,CAACxF,IAAI,CAAC,CAAC;IAEV,oBACE9D,OAAA,CAAC3B,GAAG;MAACmM,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAW,CAAE;MAAAC,QAAA,GAC/BT,QAAQ,iBACPjK,OAAA;QACE2K,GAAG,EAAEV,QAAS;QACdW,KAAK,EAAE;UACLC,KAAK,EAAE,MAAM;UACbC,WAAW,EAAE,KAAK;UAClBC,SAAS,EAAE,OAAO;UAClBC,YAAY,EAAE;QAChB,CAAE;QACFC,QAAQ;QACRC,KAAK;QACLC,IAAI;QACJC,WAAW;QACXC,QAAQ,EAAE,KAAM;QAChBC,OAAO,EAAGC,CAAC,IAAK;UACd9H,OAAO,CAACkF,KAAK,CAAC,YAAY,EAAE4C,CAAC,CAAC;QAChC;MAAE;QAAAhD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACF,eAGD1L,OAAA,CAAC3B,GAAG;QACFmM,EAAE,EAAE;UACFC,QAAQ,EAAE,UAAU;UACpBkB,GAAG,EAAE,CAAC;UACNC,IAAI,EAAE,CAAC;UACPC,OAAO,EAAE,iBAAiB;UAC1Bb,YAAY,EAAE,CAAC;UACfc,CAAC,EAAE,GAAG;UACNC,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE;QACd,CAAE;QAAAtB,QAAA,gBAEF1K,OAAA,CAACN,SAAS;UAAC8K,EAAE,EAAE;YAAEyB,QAAQ,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAQ;QAAE;UAAA3D,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnD1L,OAAA,CAAC1B,UAAU;UAAC6N,OAAO,EAAC,SAAS;UAACD,KAAK,EAAC,OAAO;UAAC1B,EAAE,EAAE;YAAE4B,EAAE,EAAE;UAAI,CAAE;UAAA1B,QAAA,EAAC;QAE7D;UAAAnC,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAnD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,kCAAC;;EAEF;EACA,MAAMW,kBAGJ,gBAAA1L,GAAA,cAAGzC,IAAI,CAAAyC,GAAA,CAAC,CAAC;IAAEkB,UAAU;IAAE8E;EAAK,CAAC,KAAK;IAAAhG,GAAA;IAClC,MAAM2L,MAAM,GAAGtO,WAAW,CAAEyH,aAAqB,IAAK;MACpDD,2BAA2B,CAAC3D,UAAU,EAAE4D,aAAa,CAAC;IACxD,CAAC,EAAE,CAAC5D,UAAU,CAAC,CAAC;IAEhB,MAAM;MAAE0K,YAAY;MAAEC,aAAa;MAAEC;IAAa,CAAC,GAAG7M,WAAW,CAAC;MAChE0M,MAAM;MACNI,MAAM,EAAE;QACN,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;QAC7D,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM;MACrD,CAAC;MACDC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMlI,YAAY,GAAG9D,gBAAgB,CAACiB,UAAU,CAAC,KAAK,YAAY;IAClE,MAAMgL,eAAe,GAAGjM,gBAAgB,CAACiB,UAAU,CAAC,KAAK,OAAO;IAChE,MAAMiL,iBAAiB,GAAGlM,gBAAgB,CAACiB,UAAU,CAAC,KAAK,SAAS;IACpE,MAAMkL,WAAW,GAAGjM,YAAY,CAACe,UAAU,CAAC;IAC5C,MAAMmL,gBAAgB,GAAG9L,eAAe,CAACW,UAAU,CAAC,IAAI,KAAK;IAC7D,MAAMoL,mBAAmB,GAAGjM,aAAa,CAACa,UAAU,CAAC;;IAErD;IACA,MAAMqL,YAAY,GAAG9O,MAAM,CAAmB,IAAI,CAAC;;IAEnD;IACA,MAAM,CAAC+O,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrP,QAAQ,CAAC,CAAAkP,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEnL,MAAM,KAAI,EAAE,CAAC;IAC3F,MAAM,CAACuL,aAAa,EAAEC,gBAAgB,CAAC,GAAGvP,QAAQ,CAAC,KAAK,CAAC;IACzD,MAAM,CAACwP,cAAc,EAAEC,iBAAiB,CAAC,GAAGzP,QAAQ,CAAC,CAAC,CAAC;;IAEvD;IACAI,SAAS,CAAC,MAAM;MACd,IAAI,CAACkP,aAAa,EAAE;QAClBD,mBAAmB,CAAC,CAAAH,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEnL,MAAM,KAAI,EAAE,CAAC;QACtDwL,gBAAgB,CAAC,IAAI,CAAC;MACxB;IACF,CAAC,EAAE,CAACL,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEnL,MAAM,EAAEuL,aAAa,CAAC,CAAC;;IAEhD;IACAlP,SAAS,CAAC,MAAM;MACd,IAAI,CAACgP,gBAAgB,CAACpK,IAAI,CAAC,CAAC,IAAI,EAACkK,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAEnL,MAAM,GAAE;QAC5D,OAAO,CAAC;MACV;MAEA,MAAM2L,SAAS,GAAGhF,UAAU,CAAC,MAAM;QAAA,IAAAiF,qBAAA;QACjC,MAAMC,oBAAoB,GAAG,EAAAD,qBAAA,GAAA1M,aAAa,CAACa,UAAU,CAAC,cAAA6L,qBAAA,uBAAzBA,qBAAA,CAA2B5L,MAAM,KAAI,EAAE;QACpE,IAAIqL,gBAAgB,KAAKQ,oBAAoB,EAAE;UAAA,IAAAC,sBAAA;UAC7C;UACA,MAAM7L,OAAO,GAAG,EAAA6L,sBAAA,GAAA5M,aAAa,CAACa,UAAU,CAAC,cAAA+L,sBAAA,uBAAzBA,sBAAA,CAA2B7L,OAAO,KAAI,KAAK;UAC3DH,kBAAkB,CAACC,UAAU,EAAEsL,gBAAgB,EAAEpL,OAAO,CAAC;QAC3D;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAM8L,YAAY,CAACJ,SAAS,CAAC;IACtC,CAAC,EAAE,CAACN,gBAAgB,EAAEtL,UAAU,CAAC,CAAC;;IAElC;IACA,MAAMiM,wBAAwB,GAAG9P,WAAW,CAAE8D,MAAc,IAAK;MAC/DsL,mBAAmB,CAACtL,MAAM,CAAC;IAC7B,CAAC,EAAE,EAAE,CAAC;;IAEN;IACA,MAAMiM,wBAAwB,GAAG/P,WAAW,CAAE+D,OAAgB,IAAK;MACjEH,kBAAkB,CAACC,UAAU,EAAEsL,gBAAgB,EAAEpL,OAAO,CAAC;IAC3D,CAAC,EAAE,CAACF,UAAU,EAAEsL,gBAAgB,EAAEvL,kBAAkB,CAAC,CAAC;IAEtD,oBACE5B,OAAA,CAACvB,IAAI;MAAC+L,EAAE,EAAE;QAAEwD,MAAM,EAAE,MAAM;QAAEjC,OAAO,EAAE,MAAM;QAAEkC,aAAa,EAAE;MAAS,CAAE;MAAAvD,QAAA,gBACrE1K,OAAA,CAACtB,WAAW;QAAC8L,EAAE,EAAE;UAAE0D,IAAI,EAAE;QAAE,CAAE;QAAAxD,QAAA,gBAE3B1K,OAAA,CAAC1B,UAAU;UAAC6N,OAAO,EAAC,IAAI;UAACgC,YAAY;UAAC3D,EAAE,EAAE;YACxCyB,QAAQ,EAAE,QAAQ;YAClBmC,UAAU,EAAE,GAAG;YACflC,KAAK,EAAE,cAAc;YACrBmC,EAAE,EAAE;UACN,CAAE;UAAA3D,QAAA,EACC/D,IAAI,CAACpC,OAAO,CAACc,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,OAAO,EAAE,QAAQ;QAAC;UAAAkD,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC,EAGZvL,eAAe,KAAK,iBAAiB,IAAIwG,IAAI,CAACnF,WAAW,gBACxDxB,OAAA,CAAC3B,GAAG;UAACmM,EAAE,EAAE;YAAE6D,EAAE,EAAE;UAAE,CAAE;UAAA3D,QAAA,EAChB/D,IAAI,CAACnF,WAAW,CAACwB,GAAG,CAAC,CAACkE,IAAI,EAAErD,GAAG,kBAC9B7D,OAAA,CAAClB,SAAS;YAERwP,SAAS;YACTC,SAAS;YACTC,IAAI,EAAE,CAAE;YACR3L,KAAK,EAAEqE,IAAK;YACZ5G,QAAQ,EAAGiL,CAAC,IAAKpJ,cAAc,CAACN,UAAU,EAAEgC,GAAG,EAAE0H,CAAC,CAACkD,MAAM,CAAC5L,KAAK,CAAE;YACjE6L,KAAK,EAAE,MAAM/H,IAAI,CAACrC,SAAS,GAAGT,GAAG,GAAG,CAAC,EAAG;YACxCsI,OAAO,EAAC,UAAU;YAClBtG,IAAI,EAAC,OAAO;YACZ2E,EAAE,EAAE;cAAE6D,EAAE,EAAE;YAAE,CAAE;YACdM,UAAU,EAAE9K,GAAG,KAAK,CAAC,GAAG,wBAAwB,GAAG;UAAG,GAVjDA,GAAG;YAAA0E,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWT,CACF;QAAC;UAAAnD,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN1L,OAAA,CAAC1B,UAAU;UAAC6N,OAAO,EAAC,OAAO;UAAC3B,EAAE,EAAE;YAC9B6D,EAAE,EAAE,CAAC;YACLvC,CAAC,EAAE,GAAG;YACND,OAAO,EAAE,SAAS;YAClBb,YAAY,EAAE,CAAC;YACf4D,MAAM,EAAE,WAAW;YACnBC,WAAW,EAAE,UAAU;YACvB5C,QAAQ,EAAE,QAAQ;YAClB6C,UAAU,EAAE;UACd,CAAE;UAAApE,QAAA,EACC/D,IAAI,CAACnC;QAAW;UAAA+D,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CACb,eAGD1L,OAAA,CAAC3B,GAAG;UAACmM,EAAE,EAAE;YAAE6D,EAAE,EAAE;UAAE,CAAE;UAAA3D,QAAA,gBACjB1K,OAAA,CAAC3B,GAAG;YAACmM,EAAE,EAAE;cAAEuB,OAAO,EAAE,MAAM;cAAEC,UAAU,EAAE,QAAQ;cAAE+C,cAAc,EAAE,eAAe;cAAEV,EAAE,EAAE;YAAE,CAAE;YAAA3D,QAAA,gBACzF1K,OAAA,CAAC1B,UAAU;cAAC6N,OAAO,EAAC,SAAS;cAACD,KAAK,EAAC,gBAAgB;cAAC1B,EAAE,EAAE;gBAAE4D,UAAU,EAAE;cAAI,CAAE;cAAA1D,QAAA,EAAC;YAE9E;cAAAnC,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb1L,OAAA,CAACrB,UAAU;cACTkH,IAAI,EAAC,OAAO;cACZmJ,OAAO,EAAEA,CAAA,KAAM9M,oBAAoB,CAACL,UAAU,CAAE;cAChD2I,EAAE,EAAE;gBAAEsB,CAAC,EAAE;cAAI,CAAE;cAAApB,QAAA,EAEdsC,gBAAgB,gBAAGhN,OAAA,CAACR,UAAU;gBAACyM,QAAQ,EAAC;cAAO;gBAAA1D,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAG1L,OAAA,CAACT,UAAU;gBAAC0M,QAAQ,EAAC;cAAO;gBAAA1D,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAnD,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3E,CAAC;UAAA;YAAAnD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEN1L,OAAA,CAACf,QAAQ;YAACgQ,EAAE,EAAEjC,gBAAiB;YAAAtC,QAAA,eAC7B1K,OAAA,CAAC3B,GAAG;cAACmM,EAAE,EAAE;gBAAEqB,OAAO,EAAE,0BAA0B;gBAAEC,CAAC,EAAE,GAAG;gBAAEd,YAAY,EAAE,CAAC;gBAAE4D,MAAM,EAAE;cAAqC,CAAE;cAAAlE,QAAA,gBACtH1K,OAAA,CAACjB,gBAAgB;gBACfmQ,OAAO,eACLlP,OAAA,CAAChB,MAAM;kBACLmQ,OAAO,EAAE,CAAAlC,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAElL,OAAO,KAAI,KAAM;kBAC/CzB,QAAQ,EAAGiL,CAAC,IAAKwC,wBAAwB,CAACxC,CAAC,CAACkD,MAAM,CAACU,OAAO,CAAE;kBAC5DtJ,IAAI,EAAC;gBAAO;kBAAA0C,QAAA,EAAAiD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CACF;gBACDgD,KAAK,eACH1O,OAAA,CAAC1B,UAAU;kBAAC6N,OAAO,EAAC,SAAS;kBAAC3B,EAAE,EAAE;oBAAE4D,UAAU,EAAE;kBAAI,CAAE;kBAAA1D,QAAA,EAAC;gBAEvD;kBAAAnC,QAAA,EAAAiD,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CACb;gBACDlB,EAAE,EAAE;kBAAE6D,EAAE,EAAE,CAAC;kBAAEjC,EAAE,EAAE;gBAAE;cAAE;gBAAA7D,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtB,CAAC,EAED,CAAAuB,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAElL,OAAO,kBAC3B/B,OAAA,CAAClB,SAAS;gBACRsQ,QAAQ,EAAElC,YAAa;gBAEvBoB,SAAS;gBACTC,SAAS;gBACTC,IAAI,EAAE,CAAE;gBACR3I,IAAI,EAAC,OAAO;gBACZwJ,WAAW,EAAC,wIAA+B;gBAC3CxM,KAAK,EAAEsK,gBAAiB;gBACxB7M,QAAQ,EAAGiL,CAAC,IAAKuC,wBAAwB,CAACvC,CAAC,CAACkD,MAAM,CAAC5L,KAAK,CAAE;gBAC1DsJ,OAAO,EAAC,UAAU;gBAClB3B,EAAE,EAAE;kBACF,0BAA0B,EAAE;oBAC1ByB,QAAQ,EAAE,SAAS;oBACnBJ,OAAO,EAAE;kBACX;gBACF,CAAE;gBACF8C,UAAU,EAAC,yNAA+C;gBAC1DW,YAAY,EAAC,KAAK;gBAClBC,UAAU,EAAC;cAAO,GAjBb,gBAAgB1N,UAAU,SAAS;gBAAA0G,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAkBzC,CACF,EAEA,EAACuB,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAElL,OAAO,kBAC5B/B,OAAA,CAAC1B,UAAU;gBAAC6N,OAAO,EAAC,SAAS;gBAACD,KAAK,EAAC,gBAAgB;gBAAC1B,EAAE,EAAE;kBAAEgF,SAAS,EAAE;gBAAS,CAAE;gBAAA9E,QAAA,EAAC;cAElF;gBAAAnC,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CACb;YAAA;cAAAnD,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAnD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAnD,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,EAGL/E,IAAI,CAAClC,KAAK,gBACTzE,OAAA,CAAC3B,GAAG;UAACmM,EAAE,EAAE;YAAEC,QAAQ,EAAE,UAAU;YAAE4D,EAAE,EAAE;UAAE,CAAE;UAAA3D,QAAA,GACtC/D,IAAI,CAAClC,KAAK,CAACsB,IAAI,CAACjD,UAAU,CAAC,QAAQ,CAAC,gBACnC9C,OAAA,CAACsK,YAAY;YAACxG,IAAI,EAAE6C,IAAI,CAAClC;UAAM;YAAA8D,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAElC1L,OAAA,CAAC3B,GAAG;YACFmM,EAAE,EAAE;cACFK,KAAK,EAAE,MAAM;cACbC,WAAW,EAAE,KAAK;cAClB2E,eAAe,EAAE,OAAOlG,GAAG,CAACC,eAAe,CAAC7C,IAAI,CAAClC,KAAK,CAAC,GAAG;cAC1DiL,cAAc,EAAE,OAAO;cACvBC,kBAAkB,EAAE,QAAQ;cAC5B3E,YAAY,EAAE;YAChB;UAAE;YAAAzC,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACF,eAGD1L,OAAA,CAAC3B,GAAG;YAACmM,EAAE,EAAE;cACPC,QAAQ,EAAE,UAAU;cACpBkB,GAAG,EAAE,CAAC;cACNiE,KAAK,EAAE,CAAC;cACR7D,OAAO,EAAE,MAAM;cACf8D,GAAG,EAAE;YACP,CAAE;YAAAnF,QAAA,gBACA1K,OAAA,CAACrB,UAAU;cACTkH,IAAI,EAAC,OAAO;cACZmJ,OAAO,EAAEA,CAAA,KAAMnG,mBAAmB,CAAChH,UAAU,EAAE8E,IAAI,CAAClC,KAAM,CAAE;cAC5D+F,EAAE,EAAE;gBACFqB,OAAO,EAAE,uBAAuB;gBAChC,SAAS,EAAE;kBAAEA,OAAO,EAAE;gBAAsB;cAC9C,CAAE;cACFiE,KAAK,EAAC,6CAAU;cAAApF,QAAA,eAEhB1K,OAAA,CAACV,QAAQ;gBAAC4M,KAAK,EAAC,SAAS;gBAACD,QAAQ,EAAC;cAAO;gBAAA1D,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAnD,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC,eACb1L,OAAA,CAACrB,UAAU;cACTkH,IAAI,EAAC,OAAO;cACZmJ,OAAO,EAAEA,CAAA,KAAMpG,iBAAiB,CAAC/G,UAAU,CAAE;cAC7C2I,EAAE,EAAE;gBACFqB,OAAO,EAAE,uBAAuB;gBAChC,SAAS,EAAE;kBAAEA,OAAO,EAAE;gBAAsB;cAC9C,CAAE;cACFiE,KAAK,EAAC,iCAAQ;cAAApF,QAAA,eAEd1K,OAAA,CAACb,MAAM;gBAAC+M,KAAK,EAAC,OAAO;gBAACD,QAAQ,EAAC;cAAO;gBAAA1D,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAnD,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,eACb1L,OAAA,CAACrB,UAAU;cACTkH,IAAI,EAAC,OAAO;cACZmJ,OAAO,EAAEA,CAAA,KAAM;gBACbvL,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE7B,UAAU,EAAE,OAAO,EAAE8E,IAAI,CAAC;gBACtED,wBAAwB,CACtB7E,UAAU,EACV8E,IAAI,EACJsG,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEnL,MAAM,EAC3BmL,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAElL,OACvB,CAAC;cACH,CAAE;cACFgO,QAAQ,EAAErL,YAAa;cACvB8F,EAAE,EAAE;gBACFqB,OAAO,EAAE,uBAAuB;gBAChC,SAAS,EAAE;kBAAEA,OAAO,EAAE;gBAAsB;cAC9C,CAAE;cACFiE,KAAK,EAAC,uCAAS;cAAApF,QAAA,EAEdhG,YAAY,gBACX1E,OAAA,CAACnB,gBAAgB;gBAACgH,IAAI,EAAE;cAAG;gBAAA0C,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAE9B1L,OAAA,CAACX,OAAO;gBAAC6M,KAAK,EAAC,SAAS;gBAACD,QAAQ,EAAC;cAAO;gBAAA1D,QAAA,EAAAiD,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAC5C;cAAAnD,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CAAC;UAAA;YAAAnD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eAEN1L,OAAA,CAAC1B,UAAU;YAAC6N,OAAO,EAAC,SAAS;YAAC3B,EAAE,EAAE;cAChCC,QAAQ,EAAE,UAAU;cACpBuF,MAAM,EAAE,CAAC;cACTpE,IAAI,EAAE,CAAC;cACPC,OAAO,EAAE,iBAAiB;cAC1BK,KAAK,EAAE,OAAO;cACd+D,EAAE,EAAE,CAAC;cACLC,EAAE,EAAE,GAAG;cACPlF,YAAY,EAAE;YAChB,CAAE;YAAAN,QAAA,EACC/D,IAAI,CAAClC,KAAK,CAACV;UAAI;YAAAwE,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAnD,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,gBAEN1L,OAAA,CAAC3B,GAAG;UAAA,GACEkO,YAAY,CAAC,CAAC;UAClB/B,EAAE,EAAE;YACFoE,MAAM,EAAE,CAAC;YACTC,WAAW,EAAEpC,YAAY,GAAG,cAAc,GAAG,UAAU;YACvD0D,WAAW,EAAE,QAAQ;YACrBnF,YAAY,EAAE,CAAC;YACfc,CAAC,EAAE,CAAC;YACJsE,SAAS,EAAE,QAAQ;YACnBC,MAAM,EAAE,SAAS;YACjBxE,OAAO,EAAEY,YAAY,GAAG,cAAc,GAAG,kBAAkB;YAC3D4B,EAAE,EAAE,CAAC;YACLvD,WAAW,EAAE,KAAK;YAClBiB,OAAO,EAAE,MAAM;YACfkC,aAAa,EAAE,QAAQ;YACvBc,cAAc,EAAE,QAAQ;YACxB,SAAS,EAAE;cACTF,WAAW,EAAE,cAAc;cAC3BhD,OAAO,EAAE;YACX;UACF,CAAE;UAAAnB,QAAA,gBAEF1K,OAAA;YAAA,GAAWwM,aAAa,CAAC;UAAC;YAAAjE,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC9B1L,OAAA,CAAC3B,GAAG;YAACmM,EAAE,EAAE;cAAEuB,OAAO,EAAE,MAAM;cAAEgD,cAAc,EAAE,QAAQ;cAAElE,KAAK,EAAE;YAAO,CAAE;YAAAH,QAAA,eACpE1K,OAAA,CAACd,WAAW;cAACsL,EAAE,EAAE;gBAAEyB,QAAQ,EAAE,EAAE;gBAAEC,KAAK,EAAE,UAAU;gBAAEmC,EAAE,EAAE;cAAE;YAAE;cAAA9F,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAnD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,eACN1L,OAAA,CAAC1B,UAAU;YAAC6N,OAAO,EAAC,SAAS;YAACD,KAAK,EAAC,gBAAgB;YAAAxB,QAAA,EACjD+B,YAAY,GAAG,UAAU,GAAG;UAAe;YAAAlE,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACb1L,OAAA,CAAC1B,UAAU;YAAC6N,OAAO,EAAC,SAAS;YAACD,KAAK,EAAC,gBAAgB;YAAC1B,EAAE,EAAE;cAAEuB,OAAO,EAAE,OAAO;cAAEuE,EAAE,EAAE,GAAG;cAAErE,QAAQ,EAAE;YAAS,CAAE;YAAAvB,QAAA,GAAC,eACvG,EAACvK,eAAe,KAAK,gBAAgB,GAAG,MAAM,GAAG,MAAM;UAAA;YAAAoI,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC;QAAA;UAAAnD,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CACN,EAGAhH,YAAY,iBACX1E,OAAA,CAACpB,KAAK;UAAC2R,QAAQ,EAAC,MAAM;UAAC/F,EAAE,EAAE;YAAE8F,EAAE,EAAE;UAAE,CAAE;UAAA5F,QAAA,eACnC1K,OAAA,CAAC3B,GAAG;YAACmM,EAAE,EAAE;cAAEuB,OAAO,EAAE,MAAM;cAAEC,UAAU,EAAE;YAAS,CAAE;YAAAtB,QAAA,gBACjD1K,OAAA,CAACnB,gBAAgB;cAACgH,IAAI,EAAE,EAAG;cAAC2E,EAAE,EAAE;gBAAEgG,EAAE,EAAE;cAAE;YAAE;cAAAjI,QAAA,EAAAiD,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,6CAE/C;UAAA;YAAAnD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAnD,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR,EAEAoB,iBAAiB,iBAChB9M,OAAA,CAACpB,KAAK;UAAC2R,QAAQ,EAAC,SAAS;UAAC/F,EAAE,EAAE;YAAE8F,EAAE,EAAE;UAAE,CAAE;UAAA5F,QAAA,EAAC;QAEzC;UAAAnC,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACR,EAEAmB,eAAe,iBACd7M,OAAA,CAACpB,KAAK;UAAC2R,QAAQ,EAAC,OAAO;UAAC/F,EAAE,EAAE;YAAE8F,EAAE,EAAE;UAAE,CAAE;UAAA5F,QAAA,EAAC;QAEvC;UAAAnC,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACR,EAEAqB,WAAW,iBACV/M,OAAA,CAACpB,KAAK;UAAC2R,QAAQ,EAAC,OAAO;UAAC/F,EAAE,EAAE;YAAE8F,EAAE,EAAE;UAAE,CAAE;UAAA5F,QAAA,EACnCqC;QAAW;UAAAxE,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CACR;MAAA;QAAAnD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC,eAGd1L,OAAA,CAAC3B,GAAG;QAACmM,EAAE,EAAE;UAAEsB,CAAC,EAAE,GAAG;UAAE2E,EAAE,EAAE,CAAC;UAAE1E,OAAO,EAAE,MAAM;UAAEkC,aAAa,EAAE,QAAQ;UAAE4B,GAAG,EAAE;QAAE,CAAE;QAAAnF,QAAA,gBAC3E1K,OAAA,CAACzB,MAAM;UACL+P,SAAS;UACTnC,OAAO,EAAC,UAAU;UAClBtG,IAAI,EAAC,OAAO;UACZ6K,SAAS,eAAE1Q,OAAA,CAACZ,WAAW;YAAAmJ,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC3BsD,OAAO,EAAEA,CAAA,KAAM;YACbvL,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE7B,UAAU,EAAE,OAAO,EAAE8E,IAAI,CAAC;YACvED,wBAAwB,CACtB7E,UAAU,EACV8E,IAAI,EACJsG,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEnL,MAAM,EAC3BmL,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAElL,OACvB,CAAC;UACH,CAAE;UACFgO,QAAQ,EAAErL,YAAa;UACvB8F,EAAE,EAAE;YACFqB,OAAO,EAAEoB,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAElL,OAAO,GAAG,0BAA0B,GAAG,aAAa;YAClF8M,WAAW,EAAE5B,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAElL,OAAO,GAAG,cAAc,GAAG,UAAU;YACvEmK,KAAK,EAAEe,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAElL,OAAO,GAAG,cAAc,GAAG,cAAc;YACrE,SAAS,EAAE;cACT8J,OAAO,EAAEoB,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAElL,OAAO,GAAG,0BAA0B,GAAG;YACvE;UACF,CAAE;UAAA2I,QAAA,EAEDhG,YAAY,GAAG,QAAQ,GAAIuI,mBAAmB,aAAnBA,mBAAmB,eAAnBA,mBAAmB,CAAElL,OAAO,GAAG,cAAc,GAAG;QAAU;UAAAwG,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChF,CAAC,eAET1L,OAAA,CAACzB,MAAM;UACL+P,SAAS;UACTnC,OAAO,EAAC,UAAU;UAClBtG,IAAI,EAAC,OAAO;UACZ6K,SAAS,eAAE1Q,OAAA,CAACL,YAAY;YAAA4I,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC5BsD,OAAO,EAAEA,CAAA,KAAMtF,uBAAuB,CAAC7H,UAAU,CAAE;UACnDkO,QAAQ,EAAErL,YAAa;UACvB8F,EAAE,EAAE;YACFqE,WAAW,EAAE,gBAAgB;YAC7B3C,KAAK,EAAE,gBAAgB;YACvB,SAAS,EAAE;cACTL,OAAO,EAAE,0BAA0B;cACnCgD,WAAW,EAAE;YACf;UACF,CAAE;UAAAnE,QAAA,EACH;QAED;UAAAnC,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAnD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX,CAAC;IAAA,QAxXuD9L,WAAW;EAAA,EAwXlE,CAAC;IAAA,QAxXsDA,WAAW;EAAA,EAwXjE;EAEF,oBACEI,OAAA,CAAC3B,GAAG;IAAAqM,QAAA,gBACF1K,OAAA,CAAC1B,UAAU;MAAC6N,OAAO,EAAC,IAAI;MAACgC,YAAY;MAAC3D,EAAE,EAAE;QAAE6D,EAAE,EAAE;MAAE,CAAE;MAAA3D,QAAA,EAAC;IAErD;MAAAnC,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEb1L,OAAA,CAAC1B,UAAU;MAAC6N,OAAO,EAAC,OAAO;MAACD,KAAK,EAAC,gBAAgB;MAAC1B,EAAE,EAAE;QAAE6D,EAAE,EAAE;MAAE,CAAE;MAAA3D,QAAA,GAAC,2UAGhE,eAAA1K,OAAA;QAAAuI,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACN1L,OAAA,CAAC1B,UAAU;QAACqS,SAAS,EAAC,MAAM;QAACxE,OAAO,EAAC,SAAS;QAACD,KAAK,EAAC,gBAAgB;QAAAxB,QAAA,GAAC,0CAC1D,EAACvK,eAAe,KAAK,gBAAgB,GAAG,SAAS,GAAG,cAAc;MAAA;QAAAoI,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEb1L,OAAA,CAACxB,IAAI;MAACoS,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAnG,QAAA,EACxBnI,cAAc,CAACS,GAAG,CAAC,CAAC2D,IAAI,EAAE1D,KAAK,kBAC9BjD,OAAA,CAACxB,IAAI;QAACsS,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAvG,QAAA,eAC9B1K,OAAA,CAACqM,kBAAkB;UAACxK,UAAU,EAAE8E,IAAI,CAAC9E,UAAW;UAAC8E,IAAI,EAAEA;QAAK;UAAA4B,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD3B,YAAY/E,IAAI,CAAC9E,UAAU,IAAI8E,IAAI,CAACpC,OAAO,EAAE;QAAAgE,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7E,CACP;IAAC;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAENnJ,cAAc,CAACyB,MAAM,KAAK,CAAC,iBAC1BhE,OAAA,CAACpB,KAAK;MAAC2R,QAAQ,EAAC,MAAM;MAAC/F,EAAE,EAAE;QAAE8F,EAAE,EAAE;MAAE,CAAE;MAAA5F,QAAA,EAAC;IAEtC;MAAAnC,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACR,eAGD1L,OAAA,CAACH,kBAAkB;MACjBqR,IAAI,EAAE9P,iBAAkB;MACxB+P,OAAO,EAAExH,wBAAyB;MAClCyH,QAAQ,EAAExH;IAA0B;MAAArB,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAnD,QAAA,EAAAiD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClL,GAAA,CA55BIP,oBAAyD;AAAAoR,EAAA,GAAzDpR,oBAAyD;AA85B/D,eAAeA,oBAAoB;AAAC,IAAAoR,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}