{"ast":null,"code":"var _jsxFileName = \"/zstus/frontend/src/components/TextImagePairManager.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, memo, useEffect } from 'react';\nimport { Box, Typography, Button, Grid, Card, CardContent, IconButton, Alert, CircularProgress, TextField, FormControlLabel, Switch, Collapse } from '@mui/material';\nimport { CloudUpload, Delete, AutoFixHigh, Refresh, Download, ExpandMore, ExpandLess } from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextImagePairManager = ({\n  content,\n  imageUploadMode,\n  images,\n  onChange\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [generationStatus, setGenerationStatus] = useState({});\n  const [uploadErrors, setUploadErrors] = useState({});\n  const [customPrompts, setCustomPrompts] = useState({});\n  const [promptsExpanded, setPromptsExpanded] = useState({});\n\n  // 커스텀 프롬프트 관리 함수들 (useCallback으로 최적화)\n  const updateCustomPrompt = useCallback((imageIndex, prompt, enabled) => {\n    setCustomPrompts(prev => ({\n      ...prev,\n      [imageIndex]: {\n        imageIndex,\n        prompt,\n        enabled\n      }\n    }));\n  }, []);\n  const togglePromptExpanded = useCallback(imageIndex => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  }, []);\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  const textImagePairs = useMemo(() => {\n    const bodyTexts = Object.entries(content).filter(([key, value]) => key.startsWith('body') && (value === null || value === void 0 ? void 0 : value.trim())).map(([key, value], index) => ({\n      key,\n      value: value.trim(),\n      index\n    }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map();\n    images.forEach(img => {\n      const storedIndex = img.__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${img.__imageIndex})`));\n    const pairs = [];\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({\n        key,\n        value,\n        index\n      }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index,\n          // 실제 이미지 인덱스 저장\n          isGenerating: false,\n          customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n          useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false\n        });\n      });\n    } else {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex,\n            // 실제 이미지 인덱스 저장\n            isGenerating: false,\n            customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n            useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false\n          });\n        }\n      }\n    }\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts]);\n\n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${img.__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex, acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: '파일 크기가 10MB를 초과합니다'\n      }));\n      return;\n    }\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다'\n      }));\n      return;\n    }\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    file.__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = images.filter(img => img.__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      var _imageIndex, _imageIndex2;\n      const indexA = (_imageIndex = a.__imageIndex) !== null && _imageIndex !== void 0 ? _imageIndex : 0;\n      const indexB = (_imageIndex2 = b.__imageIndex) !== null && _imageIndex2 !== void 0 ? _imageIndex2 : 0;\n      return indexA - indexB;\n    });\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  }, [images, imageUploadMode, content, onChange]);\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex, textContent, customPrompt, useCustomPrompt) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'textContent:', textContent, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({\n      ...prev,\n      [imageIndex]: 'generating'\n    }));\n    try {\n      // 요청 바디 구성\n      let requestBody = {};\n      if (useCustomPrompt && customPrompt !== null && customPrompt !== void 0 && customPrompt.trim()) {\n        // 커스텀 프롬프트 사용\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 커스텀 프롬프트 사용:', customPrompt.trim());\n      } else {\n        // 기존 텍스트 사용\n        const texts = textContent.split(' / ');\n        requestBody.text = texts[0]; // 첫 번째 텍스트 사용\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 기본 텍스트 사용:', texts[0]);\n      }\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, {\n        type: 'image/png'\n      });\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'success'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'error'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = imageIndex => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 지정된 imageIndex를 가진 파일을 제거\n    const newImages = images.filter(img => img.__imageIndex !== imageIndex);\n\n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = {\n        ...prev\n      };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex, image) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone = /*#__PURE__*/_s(/*#__PURE__*/memo(_s(({\n    imageIndex,\n    pair\n  }) => {\n    _s();\n    const onDrop = useCallback(acceptedFiles => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // 로컬 상태로 입력값 관리 (포커스 유지를 위해)\n    const [localPromptValue, setLocalPromptValue] = useState((currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt) || '');\n    const [isInitialized, setIsInitialized] = useState(false);\n\n    // 초기화 시에만 외부 상태를 로컬 상태에 동기화\n    useEffect(() => {\n      if (!isInitialized) {\n        setLocalPromptValue((currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt) || '');\n        setIsInitialized(true);\n      }\n    }, [currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, isInitialized]);\n\n    // 디바운스를 위한 useEffect - 외부 상태 변경 의존성 제거\n    useEffect(() => {\n      const timeoutId = setTimeout(() => {\n        var _customPrompts$imageI;\n        const currentExternalValue = ((_customPrompts$imageI = customPrompts[imageIndex]) === null || _customPrompts$imageI === void 0 ? void 0 : _customPrompts$imageI.prompt) || '';\n        if (localPromptValue !== currentExternalValue) {\n          updateCustomPrompt(imageIndex, localPromptValue, (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) || false);\n        }\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }, [localPromptValue]); // 의존성 배열을 localPromptValue만으로 제한\n\n    // 커스텀 프롬프트 변경 핸들러 (로컬 상태만 업데이트)\n    const handleCustomPromptChange = useCallback(prompt => {\n      setLocalPromptValue(prompt);\n    }, []);\n\n    // 커스텀 프롬프트 활성화/비활성화 핸들러\n    const handleCustomPromptToggle = useCallback(enabled => {\n      updateCustomPrompt(imageIndex, localPromptValue, enabled);\n    }, [imageIndex, localPromptValue, updateCustomPrompt]);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          },\n          children: pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          },\n          children: pair.textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"AI \\uC0DD\\uC131 \\uC635\\uC158\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => togglePromptExpanded(imageIndex),\n              sx: {\n                p: 0.5\n              },\n              children: isPromptExpanded ? /*#__PURE__*/_jsxDEV(ExpandLess, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isPromptExpanded,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'rgba(25, 118, 210, 0.04)',\n                p: 1.5,\n                borderRadius: 1,\n                border: '1px solid rgba(25, 118, 210, 0.12)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) || false,\n                  onChange: e => handleCustomPromptToggle(e.target.checked),\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 21\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    fontWeight: 500\n                  },\n                  children: \"\\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8 \\uC0AC\\uC6A9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this),\n                sx: {\n                  mb: 1,\n                  ml: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                multiline: true,\n                rows: 2,\n                size: \"small\",\n                placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC744 \\uC704\\uD55C \\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n                value: localPromptValue,\n                onChange: e => handleCustomPromptChange(e.target.value),\n                variant: \"outlined\",\n                sx: {\n                  '& .MuiOutlinedInput-root': {\n                    fontSize: '0.75rem',\n                    bgcolor: 'white'\n                  }\n                },\n                helperText: \"\\uC2E4\\uC81C \\uC601\\uC0C1\\uC5D0\\uC11C\\uB294 \\uAE30\\uC874 \\uB300\\uC0AC\\uAC00 \\uC0AC\\uC6A9\\uB418\\uBA70, \\uC774 \\uD504\\uB86C\\uD504\\uD2B8\\uB294 \\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC5D0\\uB9CC \\uC0AC\\uC6A9\\uB429\\uB2C8\\uB2E4.\"\n              }, `custom-prompt-${imageIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), !(currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  fontStyle: 'italic'\n                },\n                children: \"\\uAE30\\uBCF8 \\uBAA8\\uB4DC: \\uC704\\uC758 \\uB300\\uC0AC \\uB0B4\\uC6A9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), pair.image ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            mb: 2\n          },\n          children: [pair.image.type.startsWith('video/') ? /*#__PURE__*/_jsxDEV(\"video\", {\n            src: URL.createObjectURL(pair.image),\n            style: {\n              width: '100%',\n              aspectRatio: '1/1',\n              objectFit: 'cover',\n              borderRadius: 8\n            },\n            muted: true,\n            loop: true,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              aspectRatio: '1/1',\n              backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              display: 'flex',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDownloadImage(imageIndex, pair.image),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uB2E4\\uC6B4\\uB85C\\uB4DC\",\n              children: /*#__PURE__*/_jsxDEV(Download, {\n                color: \"success\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRemoveImage(imageIndex),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC0AD\\uC81C\",\n              children: /*#__PURE__*/_jsxDEV(Delete, {\n                color: \"error\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n                handleIndividualGenerate(imageIndex, pair.textContent, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled);\n              },\n              disabled: isGenerating,\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC7AC\\uC0DD\\uC131\",\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Refresh, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              position: 'absolute',\n              bottom: 4,\n              left: 8,\n              bgcolor: 'rgba(0,0,0,0.7)',\n              color: 'white',\n              px: 1,\n              py: 0.5,\n              borderRadius: 1\n            },\n            children: pair.image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          ...getRootProps(),\n          sx: {\n            border: 2,\n            borderColor: isDragActive ? 'primary.main' : 'grey.300',\n            borderStyle: 'dashed',\n            borderRadius: 1,\n            p: 2,\n            textAlign: 'center',\n            cursor: 'pointer',\n            bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n            mb: 2,\n            aspectRatio: '1/1',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            '&:hover': {\n              borderColor: 'primary.main',\n              bgcolor: 'action.hover'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloudUpload, {\n            sx: {\n              fontSize: 32,\n              color: 'grey.400',\n              mb: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this), \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC911...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this), generationSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC644\\uB8CC!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 13\n        }, this), generationError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC2E4\\uD328. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: uploadError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1.5,\n          pt: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(AutoFixHigh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n            handleIndividualGenerate(imageIndex, pair.textContent, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt, currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled);\n          },\n          disabled: isGenerating,\n          sx: {\n            bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n            borderColor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'grey.300',\n            color: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'text.primary',\n            '&:hover': {\n              bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover'\n            }\n          },\n          children: isGenerating ? '생성중...' : currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  }, \"P9h8ZtNUouuOKrxzAGmbFiixEwk=\", false, function () {\n    return [useDropzone];\n  })), \"P9h8ZtNUouuOKrxzAGmbFiixEwk=\", false, function () {\n    return [useDropzone];\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: \"\\uD14D\\uC2A4\\uD2B8-\\uC774\\uBBF8\\uC9C0 \\uB9E4\\uCE6D \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 3\n      },\n      children: \"\\uAC01 \\uD14D\\uC2A4\\uD2B8\\uC5D0 \\uB300\\uC751\\uB418\\uB294 \\uC774\\uBBF8\\uC9C0\\uB97C \\uAC1C\\uBCC4\\uC801\\uC73C\\uB85C \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4DC\\uB798\\uADF8\\uC564\\uB4DC\\uB86D\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC5C5\\uB85C\\uB4DC\\uD558\\uAC70\\uB098 AI\\uB85C \\uC790\\uB3D9 \\uC0DD\\uC131\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: textImagePairs.map((pair, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(IndividualDropZone, {\n          imageIndex: pair.imageIndex,\n          pair: pair\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 13\n        }, this)\n      }, pair.textKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 7\n    }, this), textImagePairs.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mt: 2\n      },\n      children: \"\\uB300\\uBCF8\\uC744 \\uBA3C\\uC800 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 664,\n    columnNumber: 5\n  }, this);\n};\n_s2(TextImagePairManager, \"Z+kad0TwrwFH4alH6Kt/Aerwdwk=\");\n_c = TextImagePairManager;\nexport default TextImagePairManager;\nvar _c;\n$RefreshReg$(_c, \"TextImagePairManager\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","memo","useEffect","Box","Typography","Button","Grid","Card","CardContent","IconButton","Alert","CircularProgress","TextField","FormControlLabel","Switch","Collapse","CloudUpload","Delete","AutoFixHigh","Refresh","Download","ExpandMore","ExpandLess","useDropzone","jsxDEV","_jsxDEV","TextImagePairManager","content","imageUploadMode","images","onChange","_s2","_s","$RefreshSig$","generationStatus","setGenerationStatus","uploadErrors","setUploadErrors","customPrompts","setCustomPrompts","promptsExpanded","setPromptsExpanded","updateCustomPrompt","imageIndex","prompt","enabled","prev","togglePromptExpanded","textImagePairs","bodyTexts","Object","entries","filter","key","value","startsWith","trim","map","index","imageMap","Map","forEach","img","storedIndex","__imageIndex","set","console","log","Array","from","idx","file","name","length","pairs","foundImage","get","customPrompt","push","textIndex","textKey","textContent","image","isGenerating","useCustomPrompt","i","Math","floor","text1","text2","handleIndividualImageUpload","acceptedFiles","newErrors","size","isImage","type","isVideo","newImages","sort","a","b","_imageIndex","_imageIndex2","indexA","indexB","handleIndividualGenerate","requestBody","custom_prompt","texts","split","text","additional_context","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","data","imageUrl","image_url","imageResponse","blob","fileName","File","setTimeout","newStatus","error","handleRemoveImage","handleDownloadImage","link","document","createElement","href","download","appendChild","click","removeChild","url","URL","createObjectURL","revokeObjectURL","IndividualDropZone","pair","onDrop","getRootProps","getInputProps","isDragActive","accept","maxFiles","multiple","generationError","generationSuccess","uploadError","isPromptExpanded","currentCustomPrompt","localPromptValue","setLocalPromptValue","isInitialized","setIsInitialized","timeoutId","_customPrompts$imageI","currentExternalValue","clearTimeout","handleCustomPromptChange","handleCustomPromptToggle","sx","height","display","flexDirection","children","flex","variant","gutterBottom","fontSize","fontWeight","color","mb","replace","_jsxFileName","lineNumber","columnNumber","p","bgcolor","borderRadius","border","borderColor","lineHeight","alignItems","justifyContent","onClick","in","control","checked","e","target","label","ml","fullWidth","multiline","rows","placeholder","helperText","fontStyle","position","src","style","width","aspectRatio","objectFit","muted","loop","autoPlay","backgroundImage","backgroundSize","backgroundPosition","top","right","gap","title","disabled","bottom","left","px","py","borderStyle","textAlign","cursor","severity","mt","mr","pt","startIcon","container","spacing","item","xs","sm","md","_c","$RefreshReg$"],"sources":["/zstus/frontend/src/components/TextImagePairManager.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo, memo, useEffect, useRef } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n  Chip,\n  Alert,\n  CircularProgress,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Collapse,\n} from '@mui/material';\nimport {\n  CloudUpload,\n  Delete,\n  AutoFixHigh,\n  Refresh,\n  Image as ImageIcon,\n  Download,\n  Edit as EditIcon,\n  ExpandMore,\n  ExpandLess\n} from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { ReelsContent, ImageUploadMode, TextImagePair, CustomPrompt } from '../types';\n\ninterface TextImagePairManagerProps {\n  content: ReelsContent;\n  imageUploadMode: ImageUploadMode;\n  images: File[];\n  onChange: (images: File[], mode: ImageUploadMode) => void;\n}\n\nconst TextImagePairManager: React.FC<TextImagePairManagerProps> = ({\n  content,\n  imageUploadMode,\n  images,\n  onChange,\n}) => {\n  const [generationStatus, setGenerationStatus] = useState<{ [key: string]: string }>({});\n  const [uploadErrors, setUploadErrors] = useState<{ [key: number]: string }>({});\n  const [customPrompts, setCustomPrompts] = useState<{ [key: number]: CustomPrompt }>({});\n  const [promptsExpanded, setPromptsExpanded] = useState<{ [key: number]: boolean }>({});\n\n  // 커스텀 프롬프트 관리 함수들 (useCallback으로 최적화)\n  const updateCustomPrompt = useCallback((imageIndex: number, prompt: string, enabled: boolean) => {\n    setCustomPrompts(prev => ({\n      ...prev,\n      [imageIndex]: {\n        imageIndex,\n        prompt,\n        enabled\n      }\n    }));\n  }, []);\n\n  const togglePromptExpanded = useCallback((imageIndex: number) => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  }, []);\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  const textImagePairs = useMemo((): (TextImagePair & { imageIndex: number })[] => {\n    const bodyTexts = Object.entries(content)\n      .filter(([key, value]) => key.startsWith('body') && value?.trim())\n      .map(([key, value], index) => ({ key, value: value.trim(), index }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map<number, File>();\n    images.forEach(img => {\n      const storedIndex = (img as any).__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${(img as any).__imageIndex})`));\n\n    const pairs: (TextImagePair & { imageIndex: number })[] = [];\n\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({ key, value, index }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${foundImage?.name || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index, // 실제 이미지 인덱스 저장\n          isGenerating: false,\n          customPrompt: customPrompt?.prompt || '',\n          useCustomPrompt: customPrompt?.enabled || false,\n        });\n      });\n    } else {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${foundImage?.name || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex, // 실제 이미지 인덱스 저장\n            isGenerating: false,\n            customPrompt: customPrompt?.prompt || '',\n            useCustomPrompt: customPrompt?.enabled || false,\n          });\n        }\n      }\n    }\n\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts]);\n  \n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${(img as any).__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex: number, acceptedFiles: File[]) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n    \n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n    \n    // 파일 유효성 검증\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: '파일 크기가 10MB를 초과합니다' }));\n      return;\n    }\n\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n    \n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다' }));\n      return;\n    }\n\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    (file as any).__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = images.filter(img => (img as any).__imageIndex !== imageIndex);\n    newImages.push(file);\n    \n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      const indexA = (a as any).__imageIndex ?? 0;\n      const indexB = (b as any).__imageIndex ?? 0;\n      return indexA - indexB;\n    });\n    \n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n    \n    onChange(newImages, imageUploadMode);\n  }, [images, imageUploadMode, content, onChange]);\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex: number, textContent: string, customPrompt?: string, useCustomPrompt?: boolean) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'textContent:', textContent, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'generating' }));\n\n    try {\n      // 요청 바디 구성\n      let requestBody: any = {};\n\n      if (useCustomPrompt && customPrompt?.trim()) {\n        // 커스텀 프롬프트 사용\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 커스텀 프롬프트 사용:', customPrompt.trim());\n      } else {\n        // 기존 텍스트 사용\n        const texts = textContent.split(' / ');\n        requestBody.text = texts[0]; // 첫 번째 텍스트 사용\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 기본 텍스트 사용:', texts[0]);\n      }\n\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, { type: 'image/png' });\n\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      \n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'success' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'error' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = (imageIndex: number) => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n    \n    // 지정된 imageIndex를 가진 파일을 제거\n    const newImages = images.filter(img => (img as any).__imageIndex !== imageIndex);\n    \n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n    \n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = { ...prev };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    \n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n    \n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex: number, image: File) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone: React.FC<{\n    imageIndex: number;\n    pair: TextImagePair & { imageIndex: number };\n  }> = memo(({ imageIndex, pair }) => {\n    const onDrop = useCallback((acceptedFiles: File[]) => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // 로컬 상태로 입력값 관리 (포커스 유지를 위해)\n    const [localPromptValue, setLocalPromptValue] = useState(currentCustomPrompt?.prompt || '');\n    const [isInitialized, setIsInitialized] = useState(false);\n\n    // 초기화 시에만 외부 상태를 로컬 상태에 동기화\n    useEffect(() => {\n      if (!isInitialized) {\n        setLocalPromptValue(currentCustomPrompt?.prompt || '');\n        setIsInitialized(true);\n      }\n    }, [currentCustomPrompt?.prompt, isInitialized]);\n\n    // 디바운스를 위한 useEffect - 외부 상태 변경 의존성 제거\n    useEffect(() => {\n      const timeoutId = setTimeout(() => {\n        const currentExternalValue = customPrompts[imageIndex]?.prompt || '';\n        if (localPromptValue !== currentExternalValue) {\n          updateCustomPrompt(imageIndex, localPromptValue, currentCustomPrompt?.enabled || false);\n        }\n      }, 500);\n\n      return () => clearTimeout(timeoutId);\n    }, [localPromptValue]); // 의존성 배열을 localPromptValue만으로 제한\n\n    // 커스텀 프롬프트 변경 핸들러 (로컬 상태만 업데이트)\n    const handleCustomPromptChange = useCallback((prompt: string) => {\n      setLocalPromptValue(prompt);\n    }, []);\n\n    // 커스텀 프롬프트 활성화/비활성화 핸들러\n    const handleCustomPromptToggle = useCallback((enabled: boolean) => {\n      updateCustomPrompt(imageIndex, localPromptValue, enabled);\n    }, [imageIndex, localPromptValue, updateCustomPrompt]);\n\n    return (\n      <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <CardContent sx={{ flex: 1 }}>\n          {/* 텍스트 표시 */}\n          <Typography variant=\"h6\" gutterBottom sx={{ \n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          }}>\n            {pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')}\n          </Typography>\n          \n          <Typography variant=\"body2\" sx={{\n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          }}>\n            {pair.textContent}\n          </Typography>\n\n          {/* 커스텀 프롬프트 섹션 */}\n          <Box sx={{ mb: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\n                AI 생성 옵션\n              </Typography>\n              <IconButton\n                size=\"small\"\n                onClick={() => togglePromptExpanded(imageIndex)}\n                sx={{ p: 0.5 }}\n              >\n                {isPromptExpanded ? <ExpandLess fontSize=\"small\" /> : <ExpandMore fontSize=\"small\" />}\n              </IconButton>\n            </Box>\n\n            <Collapse in={isPromptExpanded}>\n              <Box sx={{ bgcolor: 'rgba(25, 118, 210, 0.04)', p: 1.5, borderRadius: 1, border: '1px solid rgba(25, 118, 210, 0.12)' }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={currentCustomPrompt?.enabled || false}\n                      onChange={(e) => handleCustomPromptToggle(e.target.checked)}\n                      size=\"small\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"caption\" sx={{ fontWeight: 500 }}>\n                      커스텀 프롬프트 사용\n                    </Typography>\n                  }\n                  sx={{ mb: 1, ml: 0 }}\n                />\n\n                {currentCustomPrompt?.enabled && (\n                  <TextField\n                    key={`custom-prompt-${imageIndex}`}\n                    fullWidth\n                    multiline\n                    rows={2}\n                    size=\"small\"\n                    placeholder=\"이미지 생성을 위한 커스텀 프롬프트를 입력하세요...\"\n                    value={localPromptValue}\n                    onChange={(e) => handleCustomPromptChange(e.target.value)}\n                    variant=\"outlined\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        fontSize: '0.75rem',\n                        bgcolor: 'white'\n                      }\n                    }}\n                    helperText=\"실제 영상에서는 기존 대사가 사용되며, 이 프롬프트는 이미지 생성에만 사용됩니다.\"\n                  />\n                )}\n\n                {!currentCustomPrompt?.enabled && (\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontStyle: 'italic' }}>\n                    기본 모드: 위의 대사 내용을 기반으로 이미지를 생성합니다.\n                  </Typography>\n                )}\n              </Box>\n            </Collapse>\n          </Box>\n\n          {/* 이미지/비디오 표시 또는 드래그앤드롭 영역 */}\n          {pair.image ? (\n            <Box sx={{ position: 'relative', mb: 2 }}>\n              {pair.image.type.startsWith('video/') ? (\n                <video\n                  src={URL.createObjectURL(pair.image)}\n                  style={{\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    objectFit: 'cover',\n                    borderRadius: 8\n                  }}\n                  muted\n                  loop\n                  autoPlay\n                />\n              ) : (\n                <Box\n                  sx={{\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    borderRadius: 1\n                  }}\n                />\n              )}\n              \n              {/* 이미지 컨트롤 버튼들 */}\n              <Box sx={{ \n                position: 'absolute', \n                top: 8, \n                right: 8,\n                display: 'flex',\n                gap: 0.5\n              }}>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleDownloadImage(imageIndex, pair.image!)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 다운로드\"\n                >\n                  <Download color=\"success\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleRemoveImage(imageIndex)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 삭제\"\n                >\n                  <Delete color=\"error\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => {\n                    console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n                    handleIndividualGenerate(\n                      imageIndex,\n                      pair.textContent,\n                      currentCustomPrompt?.prompt,\n                      currentCustomPrompt?.enabled\n                    );\n                  }}\n                  disabled={isGenerating}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 재생성\"\n                >\n                  {isGenerating ? (\n                    <CircularProgress size={16} />\n                  ) : (\n                    <Refresh color=\"primary\" fontSize=\"small\" />\n                  )}\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" sx={{ \n                position: 'absolute',\n                bottom: 4,\n                left: 8,\n                bgcolor: 'rgba(0,0,0,0.7)',\n                color: 'white',\n                px: 1,\n                py: 0.5,\n                borderRadius: 1\n              }}>\n                {pair.image.name}\n              </Typography>\n            </Box>\n          ) : (\n            <Box\n              {...getRootProps()}\n              sx={{\n                border: 2,\n                borderColor: isDragActive ? 'primary.main' : 'grey.300',\n                borderStyle: 'dashed',\n                borderRadius: 1,\n                p: 2,\n                textAlign: 'center',\n                cursor: 'pointer',\n                bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n                mb: 2,\n                aspectRatio: '1/1',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  bgcolor: 'action.hover'\n                }\n              }}\n            >\n              <input {...getInputProps()} />\n              <CloudUpload sx={{ fontSize: 32, color: 'grey.400', mb: 1 }} />\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'}\n              </Typography>\n            </Box>\n          )}\n\n          {/* 상태 메시지 */}\n          {isGenerating && (\n            <Alert severity=\"info\" sx={{ mt: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <CircularProgress size={16} sx={{ mr: 1 }} />\n                이미지 생성 중...\n              </Box>\n            </Alert>\n          )}\n          \n          {generationSuccess && (\n            <Alert severity=\"success\" sx={{ mt: 1 }}>\n              이미지 생성 완료!\n            </Alert>\n          )}\n          \n          {generationError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              이미지 생성 실패. 다시 시도해주세요.\n            </Alert>\n          )}\n          \n          {uploadError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              {uploadError}\n            </Alert>\n          )}\n        </CardContent>\n\n        {/* 하단 액션 버튼 */}\n        <Box sx={{ p: 1.5, pt: 0 }}>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<AutoFixHigh />}\n            onClick={() => {\n              console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n              handleIndividualGenerate(\n                imageIndex,\n                pair.textContent,\n                currentCustomPrompt?.prompt,\n                currentCustomPrompt?.enabled\n              );\n            }}\n            disabled={isGenerating}\n            sx={{\n              bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n              borderColor: currentCustomPrompt?.enabled ? 'primary.main' : 'grey.300',\n              color: currentCustomPrompt?.enabled ? 'primary.main' : 'text.primary',\n              '&:hover': {\n                bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover',\n              }\n            }}\n          >\n            {isGenerating ? '생성중...' : (currentCustomPrompt?.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성')}\n          </Button>\n        </Box>\n      </Card>\n    );\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom sx={{ mb: 3 }}>\n        텍스트-이미지 매칭 관리\n      </Typography>\n      \n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        각 텍스트에 대응되는 이미지를 개별적으로 관리할 수 있습니다. \n        드래그앤드롭으로 이미지를 업로드하거나 AI로 자동 생성하세요.\n      </Typography>\n\n      <Grid container spacing={2}>\n        {textImagePairs.map((pair, index) => (\n          <Grid item xs={12} sm={6} md={4} key={pair.textKey}>\n            <IndividualDropZone imageIndex={pair.imageIndex} pair={pair} />\n          </Grid>\n        ))}\n      </Grid>\n\n      {textImagePairs.length === 0 && (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          대본을 먼저 작성해주세요.\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default TextImagePairManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}