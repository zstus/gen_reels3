{"ast":null,"code":"var _jsxFileName = \"/zstus/frontend/src/components/TextImagePairManager.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Box, Typography, Button, Grid, Card, CardContent, IconButton, Alert, CircularProgress } from '@mui/material';\nimport { CloudUpload, Delete, AutoFixHigh, Refresh } from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextImagePairManager = ({\n  content,\n  imageUploadMode,\n  images,\n  onChange\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [generationStatus, setGenerationStatus] = useState({});\n  const [uploadErrors, setUploadErrors] = useState({});\n\n  // 텍스트-이미지 쌍 데이터 생성\n  const createTextImagePairs = () => {\n    const bodyTexts = Object.entries(content).filter(([key, value]) => key.startsWith('body') && (value === null || value === void 0 ? void 0 : value.trim())).map(([key, value], index) => ({\n      key,\n      value: value.trim(),\n      index\n    }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map();\n    images.forEach(img => {\n      const storedIndex = img.__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    const pairs = [];\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({\n        key,\n        value,\n        index\n      }) => {\n        const foundImage = imageMap.get(index);\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index,\n          // 실제 이미지 인덱스 저장\n          isGenerating: false\n        });\n      });\n    } else {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex,\n            // 실제 이미지 인덱스 저장\n            isGenerating: false\n          });\n        }\n      }\n    }\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  };\n  const textImagePairs = createTextImagePairs();\n\n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${img.__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex, acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: '파일 크기가 10MB를 초과합니다'\n      }));\n      return;\n    }\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다'\n      }));\n      return;\n    }\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    file.__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = images.filter(img => img.__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      var _imageIndex, _imageIndex2;\n      const indexA = (_imageIndex = a.__imageIndex) !== null && _imageIndex !== void 0 ? _imageIndex : 0;\n      const indexB = (_imageIndex2 = b.__imageIndex) !== null && _imageIndex2 !== void 0 ? _imageIndex2 : 0;\n      return indexA - indexB;\n    });\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  }, [images, imageUploadMode, content, onChange]);\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex, textContent) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'textContent:', textContent);\n    setGenerationStatus(prev => ({\n      ...prev,\n      [imageIndex]: 'generating'\n    }));\n    try {\n      // 텍스트를 분리 (2개 텍스트가 합쳐진 경우)\n      const texts = textContent.split(' / ');\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: texts[0],\n          // 첫 번째 텍스트 사용\n          additional_context: texts.length > 1 ? texts[1] : null\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, {\n        type: 'image/png'\n      });\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'success'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'error'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = imageIndex => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 지정된 imageIndex를 가진 파일을 제거\n    const newImages = images.filter(img => img.__imageIndex !== imageIndex);\n\n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = {\n        ...prev\n      };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 드래그앤드롭 컴포넌트\n  const IndividualDropZone = ({\n    imageIndex,\n    pair\n  }) => {\n    _s();\n    const onDrop = useCallback(acceptedFiles => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          },\n          children: pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          },\n          children: pair.textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), pair.image ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            mb: 2\n          },\n          children: [pair.image.type.startsWith('video/') ? /*#__PURE__*/_jsxDEV(\"video\", {\n            src: URL.createObjectURL(pair.image),\n            style: {\n              width: '100%',\n              aspectRatio: '1/1',\n              objectFit: 'cover',\n              borderRadius: 8\n            },\n            muted: true,\n            loop: true,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              aspectRatio: '1/1',\n              backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              display: 'flex',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRemoveImage(imageIndex),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(Delete, {\n                color: \"error\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n                handleIndividualGenerate(imageIndex, pair.textContent);\n              },\n              disabled: isGenerating,\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Refresh, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              position: 'absolute',\n              bottom: 4,\n              left: 8,\n              bgcolor: 'rgba(0,0,0,0.7)',\n              color: 'white',\n              px: 1,\n              py: 0.5,\n              borderRadius: 1\n            },\n            children: pair.image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          ...getRootProps(),\n          sx: {\n            border: 2,\n            borderColor: isDragActive ? 'primary.main' : 'grey.300',\n            borderStyle: 'dashed',\n            borderRadius: 1,\n            p: 2,\n            textAlign: 'center',\n            cursor: 'pointer',\n            bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n            mb: 2,\n            aspectRatio: '1/1',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            '&:hover': {\n              borderColor: 'primary.main',\n              bgcolor: 'action.hover'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloudUpload, {\n            sx: {\n              fontSize: 32,\n              color: 'grey.400',\n              mb: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC911...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this), generationSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC644\\uB8CC!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), generationError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC2E4\\uD328. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: uploadError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1.5,\n          pt: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(AutoFixHigh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n            handleIndividualGenerate(imageIndex, pair.textContent);\n          },\n          disabled: isGenerating,\n          children: isGenerating ? '생성중...' : 'AI 자동생성'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  };\n  _s(IndividualDropZone, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n    return [useDropzone];\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: \"\\uD14D\\uC2A4\\uD2B8-\\uC774\\uBBF8\\uC9C0 \\uB9E4\\uCE6D \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 3\n      },\n      children: \"\\uAC01 \\uD14D\\uC2A4\\uD2B8\\uC5D0 \\uB300\\uC751\\uB418\\uB294 \\uC774\\uBBF8\\uC9C0\\uB97C \\uAC1C\\uBCC4\\uC801\\uC73C\\uB85C \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4DC\\uB798\\uADF8\\uC564\\uB4DC\\uB86D\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC5C5\\uB85C\\uB4DC\\uD558\\uAC70\\uB098 AI\\uB85C \\uC790\\uB3D9 \\uC0DD\\uC131\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: textImagePairs.map((pair, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(IndividualDropZone, {\n          imageIndex: pair.imageIndex,\n          pair: pair\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)\n      }, pair.textKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this), textImagePairs.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mt: 2\n      },\n      children: \"\\uB300\\uBCF8\\uC744 \\uBA3C\\uC800 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n};\n_s2(TextImagePairManager, \"PCPQGYzjNnEhjLa5BZykIII61g8=\");\n_c = TextImagePairManager;\nexport default TextImagePairManager;\nvar _c;\n$RefreshReg$(_c, \"TextImagePairManager\");","map":{"version":3,"names":["React","useState","useCallback","Box","Typography","Button","Grid","Card","CardContent","IconButton","Alert","CircularProgress","CloudUpload","Delete","AutoFixHigh","Refresh","useDropzone","jsxDEV","_jsxDEV","TextImagePairManager","content","imageUploadMode","images","onChange","_s2","_s","$RefreshSig$","generationStatus","setGenerationStatus","uploadErrors","setUploadErrors","createTextImagePairs","bodyTexts","Object","entries","filter","key","value","startsWith","trim","map","index","imageMap","Map","forEach","img","storedIndex","__imageIndex","set","console","log","Array","from","idx","file","name","length","pairs","foundImage","get","push","textIndex","textKey","textContent","image","imageIndex","isGenerating","i","Math","floor","text1","text2","textImagePairs","handleIndividualImageUpload","acceptedFiles","prev","newErrors","size","isImage","type","isVideo","newImages","sort","a","b","_imageIndex","_imageIndex2","indexA","indexB","handleIndividualGenerate","texts","split","response","fetch","method","headers","body","JSON","stringify","text","additional_context","ok","errorData","json","Error","detail","data","imageUrl","image_url","imageResponse","blob","fileName","File","setTimeout","newStatus","error","handleRemoveImage","IndividualDropZone","pair","onDrop","getRootProps","getInputProps","isDragActive","accept","maxFiles","multiple","generationError","generationSuccess","uploadError","sx","height","display","flexDirection","children","flex","variant","gutterBottom","fontSize","fontWeight","color","mb","replace","_jsxFileName","lineNumber","columnNumber","p","bgcolor","borderRadius","border","borderColor","lineHeight","position","src","URL","createObjectURL","style","width","aspectRatio","objectFit","muted","loop","autoPlay","backgroundImage","backgroundSize","backgroundPosition","top","right","gap","onClick","disabled","bottom","left","px","py","borderStyle","textAlign","cursor","justifyContent","severity","mt","alignItems","mr","pt","fullWidth","startIcon","container","spacing","item","xs","sm","md","_c","$RefreshReg$"],"sources":["/zstus/frontend/src/components/TextImagePairManager.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n  Chip,\n  Alert,\n  CircularProgress,\n} from '@mui/material';\nimport { \n  CloudUpload, \n  Delete, \n  AutoFixHigh, \n  Refresh,\n  Image as ImageIcon \n} from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { ReelsContent, ImageUploadMode } from '../types';\n\ninterface TextImagePair {\n  textIndex: number;\n  textKey: string;\n  textContent: string;\n  image: File | null;\n  isGenerating: boolean;\n}\n\ninterface TextImagePairManagerProps {\n  content: ReelsContent;\n  imageUploadMode: ImageUploadMode;\n  images: File[];\n  onChange: (images: File[], mode: ImageUploadMode) => void;\n}\n\nconst TextImagePairManager: React.FC<TextImagePairManagerProps> = ({\n  content,\n  imageUploadMode,\n  images,\n  onChange,\n}) => {\n  const [generationStatus, setGenerationStatus] = useState<{ [key: string]: string }>({});\n  const [uploadErrors, setUploadErrors] = useState<{ [key: number]: string }>({});\n\n  // 텍스트-이미지 쌍 데이터 생성\n  const createTextImagePairs = (): (TextImagePair & { imageIndex: number })[] => {\n    const bodyTexts = Object.entries(content)\n      .filter(([key, value]) => key.startsWith('body') && value?.trim())\n      .map(([key, value], index) => ({ key, value: value.trim(), index }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map<number, File>();\n    images.forEach(img => {\n      const storedIndex = (img as any).__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n\n    const pairs: (TextImagePair & { imageIndex: number })[] = [];\n\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({ key, value, index }) => {\n        const foundImage = imageMap.get(index);\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${foundImage?.name || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index, // 실제 이미지 인덱스 저장\n          isGenerating: false,\n        });\n      });\n    } else {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n        \n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${foundImage?.name || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex, // 실제 이미지 인덱스 저장\n            isGenerating: false,\n          });\n        }\n      }\n    }\n\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  };\n\n  const textImagePairs = createTextImagePairs();\n  \n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${(img as any).__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex: number, acceptedFiles: File[]) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n    \n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n    \n    // 파일 유효성 검증\n    if (file.size > 10 * 1024 * 1024) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: '파일 크기가 10MB를 초과합니다' }));\n      return;\n    }\n\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n    \n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다' }));\n      return;\n    }\n\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    (file as any).__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = images.filter(img => (img as any).__imageIndex !== imageIndex);\n    newImages.push(file);\n    \n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      const indexA = (a as any).__imageIndex ?? 0;\n      const indexB = (b as any).__imageIndex ?? 0;\n      return indexA - indexB;\n    });\n    \n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n    \n    onChange(newImages, imageUploadMode);\n  }, [images, imageUploadMode, content, onChange]);\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex: number, textContent: string) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'textContent:', textContent);\n    setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'generating' }));\n\n    try {\n      // 텍스트를 분리 (2개 텍스트가 합쳐진 경우)\n      const texts = textContent.split(' / ');\n      \n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          text: texts[0], // 첫 번째 텍스트 사용\n          additional_context: texts.length > 1 ? texts[1] : null\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, { type: 'image/png' });\n\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      \n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'success' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'error' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = (imageIndex: number) => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n    \n    // 지정된 imageIndex를 가진 파일을 제거\n    const newImages = images.filter(img => (img as any).__imageIndex !== imageIndex);\n    \n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n    \n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = { ...prev };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    \n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n    \n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 드래그앤드롭 컴포넌트\n  const IndividualDropZone: React.FC<{\n    imageIndex: number;\n    pair: TextImagePair & { imageIndex: number };\n  }> = ({ imageIndex, pair }) => {\n    const onDrop = useCallback((acceptedFiles: File[]) => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n\n    return (\n      <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <CardContent sx={{ flex: 1 }}>\n          {/* 텍스트 표시 */}\n          <Typography variant=\"h6\" gutterBottom sx={{ \n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          }}>\n            {pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')}\n          </Typography>\n          \n          <Typography variant=\"body2\" sx={{ \n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          }}>\n            {pair.textContent}\n          </Typography>\n\n          {/* 이미지/비디오 표시 또는 드래그앤드롭 영역 */}\n          {pair.image ? (\n            <Box sx={{ position: 'relative', mb: 2 }}>\n              {pair.image.type.startsWith('video/') ? (\n                <video\n                  src={URL.createObjectURL(pair.image)}\n                  style={{\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    objectFit: 'cover',\n                    borderRadius: 8\n                  }}\n                  muted\n                  loop\n                  autoPlay\n                />\n              ) : (\n                <Box\n                  sx={{\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    borderRadius: 1\n                  }}\n                />\n              )}\n              \n              {/* 이미지 컨트롤 버튼들 */}\n              <Box sx={{ \n                position: 'absolute', \n                top: 8, \n                right: 8,\n                display: 'flex',\n                gap: 0.5\n              }}>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleRemoveImage(imageIndex)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                >\n                  <Delete color=\"error\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => {\n                    console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n                    handleIndividualGenerate(imageIndex, pair.textContent);\n                  }}\n                  disabled={isGenerating}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                >\n                  {isGenerating ? (\n                    <CircularProgress size={16} />\n                  ) : (\n                    <Refresh color=\"primary\" fontSize=\"small\" />\n                  )}\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" sx={{ \n                position: 'absolute',\n                bottom: 4,\n                left: 8,\n                bgcolor: 'rgba(0,0,0,0.7)',\n                color: 'white',\n                px: 1,\n                py: 0.5,\n                borderRadius: 1\n              }}>\n                {pair.image.name}\n              </Typography>\n            </Box>\n          ) : (\n            <Box\n              {...getRootProps()}\n              sx={{\n                border: 2,\n                borderColor: isDragActive ? 'primary.main' : 'grey.300',\n                borderStyle: 'dashed',\n                borderRadius: 1,\n                p: 2,\n                textAlign: 'center',\n                cursor: 'pointer',\n                bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n                mb: 2,\n                aspectRatio: '1/1',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  bgcolor: 'action.hover'\n                }\n              }}\n            >\n              <input {...getInputProps()} />\n              <CloudUpload sx={{ fontSize: 32, color: 'grey.400', mb: 1 }} />\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'}\n              </Typography>\n            </Box>\n          )}\n\n          {/* 상태 메시지 */}\n          {isGenerating && (\n            <Alert severity=\"info\" sx={{ mt: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <CircularProgress size={16} sx={{ mr: 1 }} />\n                이미지 생성 중...\n              </Box>\n            </Alert>\n          )}\n          \n          {generationSuccess && (\n            <Alert severity=\"success\" sx={{ mt: 1 }}>\n              이미지 생성 완료!\n            </Alert>\n          )}\n          \n          {generationError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              이미지 생성 실패. 다시 시도해주세요.\n            </Alert>\n          )}\n          \n          {uploadError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              {uploadError}\n            </Alert>\n          )}\n        </CardContent>\n\n        {/* 하단 액션 버튼 */}\n        <Box sx={{ p: 1.5, pt: 0 }}>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<AutoFixHigh />}\n            onClick={() => {\n              console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'textContent:', pair.textContent);\n              handleIndividualGenerate(imageIndex, pair.textContent);\n            }}\n            disabled={isGenerating}\n          >\n            {isGenerating ? '생성중...' : 'AI 자동생성'}\n          </Button>\n        </Box>\n      </Card>\n    );\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom sx={{ mb: 3 }}>\n        텍스트-이미지 매칭 관리\n      </Typography>\n      \n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        각 텍스트에 대응되는 이미지를 개별적으로 관리할 수 있습니다. \n        드래그앤드롭으로 이미지를 업로드하거나 AI로 자동 생성하세요.\n      </Typography>\n\n      <Grid container spacing={2}>\n        {textImagePairs.map((pair, index) => (\n          <Grid item xs={12} sm={6} md={4} key={pair.textKey}>\n            <IndividualDropZone imageIndex={pair.imageIndex} pair={pair} />\n          </Grid>\n        ))}\n      </Grid>\n\n      {textImagePairs.length === 0 && (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          대본을 먼저 작성해주세요.\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default TextImagePairManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}