{"ast":null,"code":"var _jsxFileName = \"/zstus/frontend/src/components/TextImagePairManager.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useCallback, useMemo, memo, useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\nimport { Box, Typography, Button, Grid, Card, CardContent, IconButton, Alert, CircularProgress, TextField, FormControlLabel, Switch, Collapse } from '@mui/material';\nimport { CloudUpload, Delete, AutoFixHigh, Refresh, Download, ExpandMore, ExpandLess, Movie as MovieIcon, VideoLibrary } from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport VideoBookmarkModal from './VideoBookmarkModal';\nimport apiService from '../services/api';\n\n// ✅ ref를 통해 외부에서 접근 가능한 메서드 타입 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextImagePairManager = /*#__PURE__*/_s3(/*#__PURE__*/forwardRef(_c = _s3(({\n  content,\n  imageUploadMode,\n  images,\n  jobId,\n  onChange\n}, ref) => {\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  _s3();\n  const [generationStatus, setGenerationStatus] = useState({});\n  const [uploadErrors, setUploadErrors] = useState({});\n  const [customPrompts, setCustomPrompts] = useState({});\n  const [promptsExpanded, setPromptsExpanded] = useState({});\n  const [bookmarkModalOpen, setBookmarkModalOpen] = useState(false);\n  const [currentBookmarkIndex, setCurrentBookmarkIndex] = useState(null);\n\n  // ✅ Uncontrolled TextField를 위한 ref 저장소\n  const textFieldRefs = useRef({});\n  const customPromptRefs = useRef({});\n\n  // 최신 images 상태를 추적하기 위한 ref\n  const imagesRef = useRef(images);\n\n  // images prop이 변경될 때마다 ref 업데이트\n  useEffect(() => {\n    imagesRef.current = images;\n  }, [images]);\n\n  // ✅ ref를 통해 외부에서 데이터를 가져갈 수 있도록 메서드 제공\n  useImperativeHandle(ref, () => ({\n    getEditedData: () => {\n      // ✅ TextField ref에서 현재 값 읽기\n      const editedTexts = {};\n      Object.keys(textFieldRefs.current).forEach(key => {\n        var _textFieldRefs$curren;\n        const [imageIndexStr, textIdxStr] = key.split('-');\n        const imageIndex = parseInt(imageIndexStr);\n        const textIdx = parseInt(textIdxStr);\n        const value = ((_textFieldRefs$curren = textFieldRefs.current[key]) === null || _textFieldRefs$curren === void 0 ? void 0 : _textFieldRefs$curren.value) || '';\n        if (!editedTexts[imageIndex]) {\n          editedTexts[imageIndex] = [];\n        }\n        editedTexts[imageIndex][textIdx] = value;\n      });\n\n      // ✅ customPrompt ref에서 현재 값 읽기\n      const customPromptsData = {};\n      Object.keys(customPromptRefs.current).forEach(indexStr => {\n        var _customPromptRefs$cur, _customPrompts$imageI;\n        const imageIndex = parseInt(indexStr);\n        const promptValue = ((_customPromptRefs$cur = customPromptRefs.current[imageIndex]) === null || _customPromptRefs$cur === void 0 ? void 0 : _customPromptRefs$cur.value) || '';\n        const enabled = ((_customPrompts$imageI = customPrompts[imageIndex]) === null || _customPrompts$imageI === void 0 ? void 0 : _customPrompts$imageI.enabled) || false;\n        if (promptValue || enabled) {\n          customPromptsData[imageIndex] = {\n            imageIndex,\n            prompt: promptValue,\n            enabled\n          };\n        }\n      });\n      return {\n        editedTexts,\n        customPrompts: customPromptsData\n      };\n    }\n  }), [customPrompts]); // customPrompts의 enabled 상태만 의존\n\n  // ✅ 커스텀 프롬프트 토글 (enabled 상태만 관리)\n  const toggleCustomPrompt = (imageIndex, enabled) => {\n    setCustomPrompts(prev => {\n      var _prev$imageIndex;\n      return {\n        ...prev,\n        [imageIndex]: {\n          imageIndex,\n          prompt: ((_prev$imageIndex = prev[imageIndex]) === null || _prev$imageIndex === void 0 ? void 0 : _prev$imageIndex.prompt) || '',\n          enabled\n        }\n      };\n    });\n  };\n  const togglePromptExpanded = imageIndex => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  };\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  // ✅ editedTexts 의존성 제거 - TextField 입력 시 재계산 방지\n  const textImagePairs = useMemo(() => {\n    const bodyTexts = Object.entries(content).filter(([key, value]) => key.startsWith('body') && (value === null || value === void 0 ? void 0 : value.trim())).map(([key, value], index) => ({\n      key,\n      value: value.trim(),\n      index\n    }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map();\n    images.forEach(img => {\n      const storedIndex = img.__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${img.__imageIndex})`));\n    const pairs = [];\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({\n        key,\n        value,\n        index\n      }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n\n        // 원본 텍스트 배열 (per-script는 1개)\n        const originalTexts = [value];\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index,\n          isGenerating: false,\n          customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n          useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false,\n          originalTexts: originalTexts\n        });\n      });\n    } else if (imageUploadMode === 'per-two-scripts') {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n\n          // 원본 텍스트 배열\n          const originalTexts = [text1.value, text2 === null || text2 === void 0 ? void 0 : text2.value].filter(Boolean);\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex,\n            isGenerating: false,\n            customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n            useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false,\n            originalTexts: originalTexts\n          });\n        }\n      }\n    } else if (imageUploadMode === 'single-for-all') {\n      // 모든 텍스트에 이미지 1개\n      const allTexts = bodyTexts.map(({\n        key,\n        value\n      }) => key.replace('body', '대사')).join(' + ');\n      const allContent = bodyTexts.map(({\n        value\n      }) => value).join(' / ');\n      const foundImage = imageMap.get(0);\n      const customPrompt = customPrompts[0];\n\n      // 원본 텍스트 배열 (모든 대사)\n      const originalTexts = bodyTexts.map(({\n        value\n      }) => value);\n      console.log(`📋 single-for-all: 모든 대사, imageIndex=0, foundImage=${(foundImage === null || foundImage === void 0 ? void 0 : foundImage.name) || 'null'}`);\n      pairs.push({\n        textIndex: 0,\n        textKey: allTexts,\n        textContent: allContent,\n        image: foundImage || null,\n        imageIndex: 0,\n        isGenerating: false,\n        customPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.prompt) || '',\n        useCustomPrompt: (customPrompt === null || customPrompt === void 0 ? void 0 : customPrompt.enabled) || false,\n        originalTexts: originalTexts\n      });\n    }\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts]);\n\n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${img.__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex, acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증 (모드에 따라 다른 제한)\n    const maxSize = imageUploadMode === 'single-for-all' ? 80 * 1024 * 1024 : 40 * 1024 * 1024;\n    const maxSizeText = imageUploadMode === 'single-for-all' ? '80MB' : '40MB';\n    if (file.size > maxSize) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: `파일 크기가 ${maxSizeText}를 초과합니다`\n      }));\n      return;\n    }\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({\n        ...prev,\n        [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다'\n      }));\n      return;\n    }\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    file.__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 최신 images 상태를 가져와서 업데이트\n    const currentImages = imagesRef.current;\n    console.log('🔄 업데이트 전 currentImages (ref):', currentImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = currentImages.filter(img => img.__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      var _imageIndex, _imageIndex2;\n      const indexA = (_imageIndex = a.__imageIndex) !== null && _imageIndex !== void 0 ? _imageIndex : 0;\n      const indexB = (_imageIndex2 = b.__imageIndex) !== null && _imageIndex2 !== void 0 ? _imageIndex2 : 0;\n      return indexA - indexB;\n    });\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  }, [imageUploadMode, onChange]); // images 의존성 제거\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex, pair, customPrompt, useCustomPrompt) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'pair:', pair, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({\n      ...prev,\n      [imageIndex]: 'generating'\n    }));\n    try {\n      // 요청 바디 구성\n      let requestBody = {\n        job_id: jobId // Job ID 추가\n      };\n\n      // 🎯 우선순위 1: 커스텀 프롬프트\n      if (useCustomPrompt && customPrompt !== null && customPrompt !== void 0 && customPrompt.trim()) {\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 [우선순위 1] 커스텀 프롬프트 사용:', customPrompt.trim());\n      }\n      // 🎯 우선순위 2: 수정된 텍스트 (per-two-scripts 모드)\n      else if (pair.editedTexts && pair.originalTexts && pair.editedTexts.some((t, idx) => {\n        var _pair$originalTexts;\n        return t !== ((_pair$originalTexts = pair.originalTexts) === null || _pair$originalTexts === void 0 ? void 0 : _pair$originalTexts[idx]);\n      })) {\n        requestBody.text = pair.editedTexts[0];\n        if (pair.editedTexts[1]) {\n          requestBody.additional_context = pair.editedTexts[1];\n        }\n        console.log('📝 [우선순위 2] 수정된 텍스트 사용:', pair.editedTexts[0]);\n      }\n      // 🎯 우선순위 3: 원본 텍스트\n      else {\n        const texts = pair.textContent.split(' / ');\n        requestBody.text = texts[0];\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 [우선순위 3] 원본 텍스트 사용:', texts[0]);\n      }\n      console.log('🚀 요청 바디 (Job ID 포함):', requestBody);\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, {\n        type: 'image/png'\n      });\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'success'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [imageIndex]: 'error'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = imageIndex => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 최신 images 상태를 가져와서 삭제\n    const currentImages = imagesRef.current;\n    const newImages = currentImages.filter(img => img.__imageIndex !== imageIndex);\n\n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = {\n        ...prev\n      };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = {\n        ...prev\n      };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${img.__imageIndex})`));\n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex, image) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 북마크 모달 열기\n  const handleOpenBookmarkModal = imageIndex => {\n    console.log('🎬 북마크 모달 열기 - imageIndex:', imageIndex);\n    setCurrentBookmarkIndex(imageIndex);\n    setBookmarkModalOpen(true);\n  };\n\n  // 북마크 모달 닫기\n  const handleCloseBookmarkModal = () => {\n    setBookmarkModalOpen(false);\n    setCurrentBookmarkIndex(null);\n  };\n\n  // 북마크 비디오 선택 핸들러\n  const handleSelectBookmarkVideo = async video => {\n    if (currentBookmarkIndex === null) return;\n    console.log('✅ 북마크 비디오 선택:', video.filename, 'imageIndex:', currentBookmarkIndex);\n    try {\n      // 생성 상태 업데이트\n      setGenerationStatus(prev => ({\n        ...prev,\n        [currentBookmarkIndex]: 'generating'\n      }));\n\n      // 백엔드 API 호출: 북마크 비디오를 Job 폴더로 복사\n      const response = await apiService.copyBookmarkVideo(jobId, video.filename, currentBookmarkIndex);\n      if (response.status === 'success') {\n        // 복사된 비디오 파일을 File 객체로 변환하여 이미지 배열에 추가\n        const videoUrl = response.data.file_url;\n        const videoFilename = response.data.filename;\n\n        // 비디오 파일을 Fetch로 가져와서 File 객체 생성\n        const videoResponse = await fetch(videoUrl);\n        if (!videoResponse.ok) {\n          throw new Error('비디오 파일 다운로드에 실패했습니다');\n        }\n        const blob = await videoResponse.blob();\n        const file = new File([blob], videoFilename, {\n          type: 'video/mp4'\n        });\n        console.log('📸 북마크 비디오 파일 생성 완료 - fileName:', videoFilename, 'imageIndex:', currentBookmarkIndex);\n\n        // 이미지 배열 업데이트\n        handleIndividualImageUpload(currentBookmarkIndex, [file]);\n        setGenerationStatus(prev => ({\n          ...prev,\n          [currentBookmarkIndex]: 'success'\n        }));\n        setTimeout(() => {\n          setGenerationStatus(prev => {\n            const newStatus = {\n              ...prev\n            };\n            delete newStatus[currentBookmarkIndex];\n            return newStatus;\n          });\n        }, 3000);\n        console.log('✅ 북마크 비디오 복사 및 업로드 완료');\n      }\n    } catch (error) {\n      console.error('❌ 북마크 비디오 선택 오류:', error);\n      setGenerationStatus(prev => ({\n        ...prev,\n        [currentBookmarkIndex]: 'error'\n      }));\n      setUploadErrors(prev => ({\n        ...prev,\n        [currentBookmarkIndex]: error.message || '북마크 비디오 불러오기 실패'\n      }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = {\n            ...prev\n          };\n          delete newStatus[currentBookmarkIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 비디오 미리보기 컴포넌트 (브라우저 직접 재생)\n  const VideoPreview = /*#__PURE__*/_s(/*#__PURE__*/memo(_s(({\n    file\n  }) => {\n    _s();\n    const [videoUrl, setVideoUrl] = useState(null);\n    useEffect(() => {\n      // 브라우저에서 직접 재생할 수 있도록 URL 생성\n      const url = URL.createObjectURL(file);\n      setVideoUrl(url);\n      return () => {\n        if (url) {\n          URL.revokeObjectURL(url);\n        }\n      };\n    }, [file]);\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [videoUrl && /*#__PURE__*/_jsxDEV(\"video\", {\n        src: videoUrl,\n        style: {\n          width: '100%',\n          aspectRatio: '1/1',\n          objectFit: 'cover',\n          borderRadius: '8px'\n        },\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        controls: false,\n        onError: e => {\n          console.error('비디오 재생 오류:', e);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 8,\n          left: 8,\n          bgcolor: 'rgba(0,0,0,0.7)',\n          borderRadius: 1,\n          p: 0.5,\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MovieIcon, {\n          sx: {\n            fontSize: 16,\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"white\",\n          sx: {\n            ml: 0.5\n          },\n          children: \"\\uC601\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this);\n  }, \"nkRZTjcntyJfhojS751MifEn6dQ=\")), \"nkRZTjcntyJfhojS751MifEn6dQ=\");\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone = /*#__PURE__*/_s2(/*#__PURE__*/memo(_s2(({\n    imageIndex,\n    pair\n  }) => {\n    _s2();\n    const onDrop = useCallback(acceptedFiles => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n    const {\n      getRootProps,\n      getInputProps,\n      isDragActive\n    } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm', '.mkv']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // ✅ 심플한 커스텀 프롬프트 핸들러 (복잡한 로컬 상태/디바운스 제거)\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          },\n          children: pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), pair.originalTexts ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: pair.originalTexts.map((originalText, idx) => {\n            const refKey = `${imageIndex}-${idx}`;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 2,\n              defaultValue: originalText,\n              inputRef: el => {\n                if (el) textFieldRefs.current[refKey] = el;\n              },\n              label: imageUploadMode === 'per-two-scripts' ? `대사 ${pair.textIndex + idx + 1}` : imageUploadMode === 'per-script' ? `대사 ${pair.textIndex + 1}` : `대사 ${idx + 1}`,\n              variant: \"outlined\",\n              size: \"small\",\n              sx: {\n                mb: 1\n              },\n              helperText: idx === 0 ? \"수정된 텍스트는 영상 생성 시 사용됩니다\" : \"\"\n            }, `text-${imageIndex}-${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            mb: 2,\n            p: 1.5,\n            bgcolor: 'grey.50',\n            borderRadius: 1,\n            border: '1px solid',\n            borderColor: 'grey.200',\n            fontSize: '0.8rem',\n            lineHeight: 1.4\n          },\n          children: pair.textContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              sx: {\n                fontWeight: 600\n              },\n              children: \"AI \\uC0DD\\uC131 \\uC635\\uC158\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => togglePromptExpanded(imageIndex),\n              sx: {\n                p: 0.5\n              },\n              children: isPromptExpanded ? /*#__PURE__*/_jsxDEV(ExpandLess, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 71\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: isPromptExpanded,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'rgba(25, 118, 210, 0.04)',\n                p: 1.5,\n                borderRadius: 1,\n                border: '1px solid rgba(25, 118, 210, 0.12)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) || false,\n                  onChange: e => {\n                    toggleCustomPrompt(imageIndex, e.target.checked);\n                  },\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 21\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  sx: {\n                    fontWeight: 500\n                  },\n                  children: \"\\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8 \\uC0AC\\uC6A9\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 696,\n                  columnNumber: 21\n                }, this),\n                sx: {\n                  mb: 1,\n                  ml: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this), (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                multiline: true,\n                rows: 2,\n                size: \"small\",\n                placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC744 \\uC704\\uD55C \\uCEE4\\uC2A4\\uD140 \\uD504\\uB86C\\uD504\\uD2B8\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n                defaultValue: (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.prompt) || '',\n                inputRef: el => {\n                  if (el) customPromptRefs.current[imageIndex] = el;\n                },\n                variant: \"outlined\",\n                sx: {\n                  '& .MuiOutlinedInput-root': {\n                    fontSize: '0.75rem',\n                    bgcolor: 'white'\n                  }\n                },\n                helperText: \"\\uC2E4\\uC81C \\uC601\\uC0C1\\uC5D0\\uC11C\\uB294 \\uAE30\\uC874 \\uB300\\uC0AC\\uAC00 \\uC0AC\\uC6A9\\uB418\\uBA70, \\uC774 \\uD504\\uB86C\\uD504\\uD2B8\\uB294 \\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131\\uC5D0\\uB9CC \\uC0AC\\uC6A9\\uB429\\uB2C8\\uB2E4.\",\n                autoComplete: \"off\",\n                spellCheck: \"false\"\n              }, `prompt-${imageIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 704,\n                columnNumber: 19\n              }, this), !(currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled) && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                sx: {\n                  fontStyle: 'italic'\n                },\n                children: \"\\uAE30\\uBCF8 \\uBAA8\\uB4DC: \\uC704\\uC758 \\uB300\\uC0AC \\uB0B4\\uC6A9\\uC744 \\uAE30\\uBC18\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC0DD\\uC131\\uD569\\uB2C8\\uB2E4.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), pair.image ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            mb: 2\n          },\n          children: [pair.image.type.startsWith('video/') ? /*#__PURE__*/_jsxDEV(VideoPreview, {\n            file: pair.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%',\n              aspectRatio: '1/1',\n              backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'absolute',\n              top: 8,\n              right: 8,\n              display: 'flex',\n              gap: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleDownloadImage(imageIndex, pair.image),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uB2E4\\uC6B4\\uB85C\\uB4DC\",\n              children: /*#__PURE__*/_jsxDEV(Download, {\n                color: \"success\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => handleRemoveImage(imageIndex),\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC0AD\\uC81C\",\n              children: /*#__PURE__*/_jsxDEV(Delete, {\n                color: \"error\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => {\n                var _customPromptRefs$cur2;\n                // ✅ ref에서 현재 프롬프트 값 읽기\n                const currentPromptValue = ((_customPromptRefs$cur2 = customPromptRefs.current[imageIndex]) === null || _customPromptRefs$cur2 === void 0 ? void 0 : _customPromptRefs$cur2.value) || '';\n                const isEnabled = (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) || false;\n                console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n                console.log('📝 커스텀 프롬프트 값 (ref에서 읽음):', currentPromptValue);\n                handleIndividualGenerate(imageIndex, pair, currentPromptValue, isEnabled);\n              },\n              disabled: isGenerating,\n              sx: {\n                bgcolor: 'rgba(255,255,255,0.9)',\n                '&:hover': {\n                  bgcolor: 'rgba(255,255,255,1)'\n                }\n              },\n              title: \"\\uC774\\uBBF8\\uC9C0 \\uC7AC\\uC0DD\\uC131\",\n              children: isGenerating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Refresh, {\n                color: \"primary\",\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            sx: {\n              position: 'absolute',\n              bottom: 4,\n              left: 8,\n              bgcolor: 'rgba(0,0,0,0.7)',\n              color: 'white',\n              px: 1,\n              py: 0.5,\n              borderRadius: 1\n            },\n            children: pair.image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          ...getRootProps(),\n          sx: {\n            border: 2,\n            borderColor: isDragActive ? 'primary.main' : 'grey.300',\n            borderStyle: 'dashed',\n            borderRadius: 1,\n            p: 2,\n            textAlign: 'center',\n            cursor: 'pointer',\n            bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n            mb: 2,\n            aspectRatio: '1/1',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            '&:hover': {\n              borderColor: 'primary.main',\n              bgcolor: 'action.hover'\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(CloudUpload, {\n              sx: {\n                fontSize: 32,\n                color: 'grey.400',\n                mb: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            sx: {\n              display: 'block',\n              mt: 0.5,\n              fontSize: '0.7rem'\n            },\n            children: [\"\\uCD5C\\uB300 \", imageUploadMode === 'single-for-all' ? '40MB' : '10MB']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this), isGenerating && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          sx: {\n            mt: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 16,\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 17\n            }, this), \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC911...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this), generationSuccess && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC644\\uB8CC!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 13\n        }, this), generationError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uC0DD\\uC131 \\uC2E4\\uD328. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 13\n        }, this), uploadError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mt: 1\n          },\n          children: uploadError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1.5,\n          pt: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(AutoFixHigh, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 24\n          }, this),\n          onClick: () => {\n            var _customPromptRefs$cur3;\n            // ✅ ref에서 현재 프롬프트 값 읽기\n            const currentPromptValue = ((_customPromptRefs$cur3 = customPromptRefs.current[imageIndex]) === null || _customPromptRefs$cur3 === void 0 ? void 0 : _customPromptRefs$cur3.value) || '';\n            const isEnabled = (currentCustomPrompt === null || currentCustomPrompt === void 0 ? void 0 : currentCustomPrompt.enabled) || false;\n            console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n            console.log('📝 커스텀 프롬프트 값 (ref에서 읽음):', currentPromptValue);\n            console.log('✅ 커스텀 프롬프트 enabled:', isEnabled);\n            handleIndividualGenerate(imageIndex, pair, currentPromptValue, isEnabled);\n          },\n          disabled: isGenerating,\n          sx: {\n            bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n            borderColor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'grey.300',\n            color: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'primary.main' : 'text.primary',\n            '&:hover': {\n              bgcolor: currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover'\n            }\n          },\n          children: isGenerating ? '생성중...' : currentCustomPrompt !== null && currentCustomPrompt !== void 0 && currentCustomPrompt.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(VideoLibrary, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 24\n          }, this),\n          onClick: () => handleOpenBookmarkModal(imageIndex),\n          disabled: isGenerating,\n          sx: {\n            borderColor: 'secondary.main',\n            color: 'secondary.main',\n            '&:hover': {\n              bgcolor: 'rgba(156, 39, 176, 0.08)',\n              borderColor: 'secondary.main'\n            }\n          },\n          children: \"\\uB3D9\\uC601\\uC0C1 \\uBD88\\uB7EC\\uC624\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 7\n    }, this);\n  }, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n    return [useDropzone];\n  })), \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n    return [useDropzone];\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        mb: 3\n      },\n      children: \"\\uD14D\\uC2A4\\uD2B8-\\uC774\\uBBF8\\uC9C0 \\uB9E4\\uCE6D \\uAD00\\uB9AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      sx: {\n        mb: 3\n      },\n      children: [\"\\uAC01 \\uD14D\\uC2A4\\uD2B8\\uC5D0 \\uB300\\uC751\\uB418\\uB294 \\uC774\\uBBF8\\uC9C0\\uB97C \\uAC1C\\uBCC4\\uC801\\uC73C\\uB85C \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB4DC\\uB798\\uADF8\\uC564\\uB4DC\\uB86D\\uC73C\\uB85C \\uC774\\uBBF8\\uC9C0\\uB97C \\uC5C5\\uB85C\\uB4DC\\uD558\\uAC70\\uB098 AI\\uB85C \\uC790\\uB3D9 \\uC0DD\\uC131\\uD558\\uC138\\uC694.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"span\",\n        variant: \"caption\",\n        color: \"text.secondary\",\n        children: [\"\\uD30C\\uC77C \\uD06C\\uAE30 \\uC81C\\uD55C: \", imageUploadMode === 'single-for-all' ? '최대 40MB' : '각 파일 최대 10MB']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: textImagePairs.map((pair, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(IndividualDropZone, {\n          imageIndex: pair.imageIndex,\n          pair: pair\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 972,\n          columnNumber: 13\n        }, this)\n      }, `dropzone-${pair.imageIndex}-${pair.textKey}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 971,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 7\n    }, this), textImagePairs.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      sx: {\n        mt: 2\n      },\n      children: \"\\uB300\\uBCF8\\uC744 \\uBA3C\\uC800 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VideoBookmarkModal, {\n      open: bookmarkModalOpen,\n      onClose: handleCloseBookmarkModal,\n      onSelect: handleSelectBookmarkVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 984,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 955,\n    columnNumber: 5\n  }, this);\n}, \"KxYdAA/z1ku7yPzRF0mIeGHv/JY=\")), \"KxYdAA/z1ku7yPzRF0mIeGHv/JY=\");\n\n// Display name for debugging\n_c2 = TextImagePairManager;\nTextImagePairManager.displayName = 'TextImagePairManager';\nexport default TextImagePairManager;\nvar _c, _c2;\n$RefreshReg$(_c, \"TextImagePairManager$forwardRef\");\n$RefreshReg$(_c2, \"TextImagePairManager\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","memo","useEffect","useRef","useImperativeHandle","forwardRef","Box","Typography","Button","Grid","Card","CardContent","IconButton","Alert","CircularProgress","TextField","FormControlLabel","Switch","Collapse","CloudUpload","Delete","AutoFixHigh","Refresh","Download","ExpandMore","ExpandLess","Movie","MovieIcon","VideoLibrary","useDropzone","VideoBookmarkModal","apiService","jsxDEV","_jsxDEV","TextImagePairManager","_s3","_c","content","imageUploadMode","images","jobId","onChange","ref","_s","$RefreshSig$","_s2","generationStatus","setGenerationStatus","uploadErrors","setUploadErrors","customPrompts","setCustomPrompts","promptsExpanded","setPromptsExpanded","bookmarkModalOpen","setBookmarkModalOpen","currentBookmarkIndex","setCurrentBookmarkIndex","textFieldRefs","customPromptRefs","imagesRef","current","getEditedData","editedTexts","Object","keys","forEach","key","_textFieldRefs$curren","imageIndexStr","textIdxStr","split","imageIndex","parseInt","textIdx","value","customPromptsData","indexStr","_customPromptRefs$cur","_customPrompts$imageI","promptValue","enabled","prompt","toggleCustomPrompt","prev","_prev$imageIndex","togglePromptExpanded","textImagePairs","bodyTexts","entries","filter","startsWith","trim","map","index","imageMap","Map","img","storedIndex","__imageIndex","set","console","log","Array","from","idx","file","name","length","pairs","foundImage","get","customPrompt","originalTexts","push","textIndex","textKey","textContent","image","isGenerating","useCustomPrompt","i","Math","floor","text1","text2","Boolean","allTexts","replace","join","allContent","handleIndividualImageUpload","acceptedFiles","newErrors","maxSize","maxSizeText","size","isImage","type","isVideo","currentImages","newImages","sort","a","b","_imageIndex","_imageIndex2","indexA","indexB","handleIndividualGenerate","pair","requestBody","job_id","custom_prompt","some","t","_pair$originalTexts","text","additional_context","texts","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","data","imageUrl","image_url","imageResponse","blob","fileName","File","setTimeout","newStatus","error","handleRemoveImage","handleDownloadImage","link","document","createElement","href","download","appendChild","click","removeChild","url","URL","createObjectURL","revokeObjectURL","handleOpenBookmarkModal","handleCloseBookmarkModal","handleSelectBookmarkVideo","video","filename","copyBookmarkVideo","status","videoUrl","file_url","videoFilename","videoResponse","message","VideoPreview","setVideoUrl","sx","position","children","src","style","width","aspectRatio","objectFit","borderRadius","autoPlay","muted","loop","playsInline","controls","onError","e","_jsxFileName","lineNumber","columnNumber","top","left","bgcolor","p","display","alignItems","fontSize","color","variant","ml","IndividualDropZone","onDrop","getRootProps","getInputProps","isDragActive","accept","maxFiles","multiple","generationError","generationSuccess","uploadError","isPromptExpanded","currentCustomPrompt","height","flexDirection","flex","gutterBottom","fontWeight","mb","originalText","refKey","fullWidth","multiline","rows","defaultValue","inputRef","el","label","helperText","border","borderColor","lineHeight","justifyContent","onClick","in","control","checked","target","placeholder","autoComplete","spellCheck","fontStyle","backgroundImage","backgroundSize","backgroundPosition","right","gap","title","_customPromptRefs$cur2","currentPromptValue","isEnabled","disabled","bottom","px","py","borderStyle","textAlign","cursor","mt","severity","mr","pt","startIcon","_customPromptRefs$cur3","component","container","spacing","item","xs","sm","md","open","onClose","onSelect","_c2","displayName","$RefreshReg$"],"sources":["/zstus/frontend/src/components/TextImagePairManager.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo, memo, useEffect, useRef, useImperativeHandle, forwardRef } from 'react';\nimport {\n  Box,\n  Paper,\n  Typography,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  IconButton,\n  Chip,\n  Alert,\n  CircularProgress,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Collapse,\n} from '@mui/material';\nimport {\n  CloudUpload,\n  Delete,\n  AutoFixHigh,\n  Refresh,\n  Image as ImageIcon,\n  Download,\n  Edit as EditIcon,\n  ExpandMore,\n  ExpandLess,\n  Movie as MovieIcon,\n  Warning,\n  VideoLibrary\n} from '@mui/icons-material';\nimport { useDropzone } from 'react-dropzone';\nimport { ReelsContent, ImageUploadMode, TextImagePair, CustomPrompt, BookmarkVideo } from '../types';\nimport VideoBookmarkModal from './VideoBookmarkModal';\nimport apiService from '../services/api';\n\ninterface TextImagePairManagerProps {\n  content: ReelsContent;\n  imageUploadMode: ImageUploadMode;\n  images: File[];\n  jobId: string;\n  onChange: (images: File[], mode: ImageUploadMode) => void;\n}\n\n// ✅ ref를 통해 외부에서 접근 가능한 메서드 타입 정의\nexport interface TextImagePairManagerRef {\n  getEditedData: () => {\n    editedTexts: { [key: number]: string[] };\n    customPrompts: { [key: number]: CustomPrompt };\n  };\n}\n\nconst TextImagePairManager = forwardRef<TextImagePairManagerRef, TextImagePairManagerProps>(({\n  content,\n  imageUploadMode,\n  images,\n  jobId,\n  onChange,\n}, ref) => {\n  const [generationStatus, setGenerationStatus] = useState<{ [key: string]: string }>({});\n  const [uploadErrors, setUploadErrors] = useState<{ [key: number]: string }>({});\n  const [customPrompts, setCustomPrompts] = useState<{ [key: number]: CustomPrompt }>({});\n  const [promptsExpanded, setPromptsExpanded] = useState<{ [key: number]: boolean }>({});\n  const [bookmarkModalOpen, setBookmarkModalOpen] = useState<boolean>(false);\n  const [currentBookmarkIndex, setCurrentBookmarkIndex] = useState<number | null>(null);\n\n  // ✅ Uncontrolled TextField를 위한 ref 저장소\n  const textFieldRefs = useRef<{ [key: string]: HTMLInputElement }>({});\n  const customPromptRefs = useRef<{ [key: number]: HTMLInputElement }>({});\n\n  // 최신 images 상태를 추적하기 위한 ref\n  const imagesRef = useRef<File[]>(images);\n\n  // images prop이 변경될 때마다 ref 업데이트\n  useEffect(() => {\n    imagesRef.current = images;\n  }, [images]);\n\n  // ✅ ref를 통해 외부에서 데이터를 가져갈 수 있도록 메서드 제공\n  useImperativeHandle(ref, () => ({\n    getEditedData: () => {\n      // ✅ TextField ref에서 현재 값 읽기\n      const editedTexts: { [key: number]: string[] } = {};\n\n      Object.keys(textFieldRefs.current).forEach(key => {\n        const [imageIndexStr, textIdxStr] = key.split('-');\n        const imageIndex = parseInt(imageIndexStr);\n        const textIdx = parseInt(textIdxStr);\n\n        const value = textFieldRefs.current[key]?.value || '';\n\n        if (!editedTexts[imageIndex]) {\n          editedTexts[imageIndex] = [];\n        }\n        editedTexts[imageIndex][textIdx] = value;\n      });\n\n      // ✅ customPrompt ref에서 현재 값 읽기\n      const customPromptsData: { [key: number]: CustomPrompt } = {};\n\n      Object.keys(customPromptRefs.current).forEach(indexStr => {\n        const imageIndex = parseInt(indexStr);\n        const promptValue = customPromptRefs.current[imageIndex]?.value || '';\n        const enabled = customPrompts[imageIndex]?.enabled || false;\n\n        if (promptValue || enabled) {\n          customPromptsData[imageIndex] = {\n            imageIndex,\n            prompt: promptValue,\n            enabled\n          };\n        }\n      });\n\n      return {\n        editedTexts,\n        customPrompts: customPromptsData\n      };\n    }\n  }), [customPrompts]); // customPrompts의 enabled 상태만 의존\n\n  // ✅ 커스텀 프롬프트 토글 (enabled 상태만 관리)\n  const toggleCustomPrompt = (imageIndex: number, enabled: boolean) => {\n    setCustomPrompts(prev => ({\n      ...prev,\n      [imageIndex]: {\n        imageIndex,\n        prompt: prev[imageIndex]?.prompt || '',\n        enabled\n      }\n    }));\n  };\n\n  const togglePromptExpanded = (imageIndex: number) => {\n    setPromptsExpanded(prev => ({\n      ...prev,\n      [imageIndex]: !prev[imageIndex]\n    }));\n  };\n\n  // 텍스트-이미지 쌍 데이터 생성 (useMemo로 최적화)\n  // ✅ editedTexts 의존성 제거 - TextField 입력 시 재계산 방지\n  const textImagePairs = useMemo((): (TextImagePair & { imageIndex: number })[] => {\n    const bodyTexts = Object.entries(content)\n      .filter(([key, value]) => key.startsWith('body') && value?.trim())\n      .map(([key, value], index) => ({ key, value: value.trim(), index }));\n\n    // 위치 정보를 가진 이미지들을 맵으로 생성\n    const imageMap = new Map<number, File>();\n    images.forEach(img => {\n      const storedIndex = (img as any).__imageIndex;\n      if (typeof storedIndex === 'number') {\n        imageMap.set(storedIndex, img);\n      }\n    });\n\n    console.log('🗺️ createTextImagePairs - imageMap:', Array.from(imageMap.entries()).map(([idx, file]) => `${idx}:${file.name}`));\n    console.log('📝 bodyTexts 길이:', bodyTexts.length, 'imageUploadMode:', imageUploadMode);\n    console.log('🔍 받은 images 배열:', images.map(img => `${img.name}(__imageIndex:${(img as any).__imageIndex})`));\n\n    const pairs: (TextImagePair & { imageIndex: number })[] = [];\n\n    if (imageUploadMode === 'per-script') {\n      // 텍스트 1개당 이미지 1개\n      bodyTexts.forEach(({ key, value, index }) => {\n        const foundImage = imageMap.get(index);\n        const customPrompt = customPrompts[index];\n\n        // 원본 텍스트 배열 (per-script는 1개)\n        const originalTexts = [value];\n\n        console.log(`📋 per-script: textIndex=${index}, imageIndex=${index}, foundImage=${foundImage?.name || 'null'}`);\n        pairs.push({\n          textIndex: index,\n          textKey: key,\n          textContent: value,\n          image: foundImage || null,\n          imageIndex: index,\n          isGenerating: false,\n          customPrompt: customPrompt?.prompt || '',\n          useCustomPrompt: customPrompt?.enabled || false,\n          originalTexts: originalTexts,\n        });\n      });\n    } else if (imageUploadMode === 'per-two-scripts') {\n      // 텍스트 2개당 이미지 1개\n      for (let i = 0; i < bodyTexts.length; i += 2) {\n        const imageIndex = Math.floor(i / 2);\n        const text1 = bodyTexts[i];\n        const text2 = bodyTexts[i + 1];\n\n        if (text1) {\n          const foundImage = imageMap.get(imageIndex);\n          const customPrompt = customPrompts[imageIndex];\n\n          // 원본 텍스트 배열\n          const originalTexts = [text1.value, text2?.value].filter(Boolean) as string[];\n\n          console.log(`📋 per-two-scripts: textIndex=${i}, imageIndex=${imageIndex}, foundImage=${foundImage?.name || 'null'}`);\n          pairs.push({\n            textIndex: i,\n            textKey: `${text1.key}${text2 ? `+${text2.key}` : ''}`,\n            textContent: `${text1.value}${text2 ? ` / ${text2.value}` : ''}`,\n            image: foundImage || null,\n            imageIndex: imageIndex,\n            isGenerating: false,\n            customPrompt: customPrompt?.prompt || '',\n            useCustomPrompt: customPrompt?.enabled || false,\n            originalTexts: originalTexts,\n          });\n        }\n      }\n    } else if (imageUploadMode === 'single-for-all') {\n      // 모든 텍스트에 이미지 1개\n      const allTexts = bodyTexts.map(({ key, value }) => key.replace('body', '대사')).join(' + ');\n      const allContent = bodyTexts.map(({ value }) => value).join(' / ');\n      const foundImage = imageMap.get(0);\n      const customPrompt = customPrompts[0];\n\n      // 원본 텍스트 배열 (모든 대사)\n      const originalTexts = bodyTexts.map(({ value }) => value);\n\n      console.log(`📋 single-for-all: 모든 대사, imageIndex=0, foundImage=${foundImage?.name || 'null'}`);\n      pairs.push({\n        textIndex: 0,\n        textKey: allTexts,\n        textContent: allContent,\n        image: foundImage || null,\n        imageIndex: 0,\n        isGenerating: false,\n        customPrompt: customPrompt?.prompt || '',\n        useCustomPrompt: customPrompt?.enabled || false,\n        originalTexts: originalTexts,\n      });\n    }\n\n    console.log('🎯 최종 pairs 개수:', pairs.length);\n    return pairs;\n  }, [content, images, imageUploadMode, customPrompts]);\n  \n  // 현재 images 배열 상태 로깅\n  console.log('📦 현재 images 배열 길이:', images.length);\n  console.log('📦 현재 images 배열:', images.length > 0 ? images.map(img => `${img.name}(index:${(img as any).__imageIndex})`) : '빈 배열');\n  console.log('🎮 generationStatus:', generationStatus);\n\n  // 개별 이미지 업로드 핸들러\n  const handleIndividualImageUpload = useCallback((imageIndex: number, acceptedFiles: File[]) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n\n    // 기존 에러 상태 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n\n    // 파일 유효성 검증 (모드에 따라 다른 제한)\n    const maxSize = imageUploadMode === 'single-for-all' ? 80 * 1024 * 1024 : 40 * 1024 * 1024;\n    const maxSizeText = imageUploadMode === 'single-for-all' ? '80MB' : '40MB';\n\n    if (file.size > maxSize) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: `파일 크기가 ${maxSizeText}를 초과합니다` }));\n      return;\n    }\n\n    const isImage = file.type.startsWith('image/');\n    const isVideo = file.type.startsWith('video/');\n\n    if (!isImage && !isVideo) {\n      setUploadErrors(prev => ({ ...prev, [imageIndex]: '이미지 또는 비디오 파일만 업로드 가능합니다' }));\n      return;\n    }\n\n    console.log('🔧 handleIndividualImageUpload - imageIndex:', imageIndex, 'fileName:', file.name);\n\n    // 파일에 위치 정보 추가\n    (file as any).__imageIndex = imageIndex;\n    console.log('🏷️ 파일에 __imageIndex 설정:', imageIndex);\n\n    // 최신 images 상태를 가져와서 업데이트\n    const currentImages = imagesRef.current;\n    console.log('🔄 업데이트 전 currentImages (ref):', currentImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n\n    // 현재 images에서 해당 imageIndex를 가진 파일 제거하고 새 파일 추가\n    const newImages = currentImages.filter(img => (img as any).__imageIndex !== imageIndex);\n    newImages.push(file);\n\n    // imageIndex 순으로 정렬\n    newImages.sort((a, b) => {\n      const indexA = (a as any).__imageIndex ?? 0;\n      const indexB = (b as any).__imageIndex ?? 0;\n      return indexA - indexB;\n    });\n\n    console.log('📊 업데이트된 images 배열:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n\n    onChange(newImages, imageUploadMode);\n  }, [imageUploadMode, onChange]); // images 의존성 제거\n\n  // 개별 이미지 자동 생성\n  const handleIndividualGenerate = async (imageIndex: number, pair: TextImagePair & { imageIndex: number }, customPrompt?: string, useCustomPrompt?: boolean) => {\n    console.log('🤖 handleIndividualGenerate 시작 - imageIndex:', imageIndex, 'pair:', pair, 'customPrompt:', customPrompt, 'useCustomPrompt:', useCustomPrompt);\n    setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'generating' }));\n\n    try {\n      // 요청 바디 구성\n      let requestBody: any = {\n        job_id: jobId  // Job ID 추가\n      };\n\n      // 🎯 우선순위 1: 커스텀 프롬프트\n      if (useCustomPrompt && customPrompt?.trim()) {\n        requestBody.custom_prompt = customPrompt.trim();\n        console.log('📝 [우선순위 1] 커스텀 프롬프트 사용:', customPrompt.trim());\n      }\n      // 🎯 우선순위 2: 수정된 텍스트 (per-two-scripts 모드)\n      else if (pair.editedTexts && pair.originalTexts &&\n               pair.editedTexts.some((t, idx) => t !== pair.originalTexts?.[idx])) {\n        requestBody.text = pair.editedTexts[0];\n        if (pair.editedTexts[1]) {\n          requestBody.additional_context = pair.editedTexts[1];\n        }\n        console.log('📝 [우선순위 2] 수정된 텍스트 사용:', pair.editedTexts[0]);\n      }\n      // 🎯 우선순위 3: 원본 텍스트\n      else {\n        const texts = pair.textContent.split(' / ');\n        requestBody.text = texts[0];\n        if (texts.length > 1) {\n          requestBody.additional_context = texts[1];\n        }\n        console.log('📝 [우선순위 3] 원본 텍스트 사용:', texts[0]);\n      }\n\n      console.log('🚀 요청 바디 (Job ID 포함):', requestBody);\n\n      const response = await fetch('/generate-single-image', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '이미지 생성에 실패했습니다');\n      }\n\n      const data = await response.json();\n      const imageUrl = data.image_url;\n\n      // 생성된 이미지를 다운로드하고 File 객체로 변환\n      const imageResponse = await fetch(imageUrl);\n      if (!imageResponse.ok) {\n        throw new Error('생성된 이미지 다운로드에 실패했습니다');\n      }\n\n      const blob = await imageResponse.blob();\n      const fileName = `generated_image_pair_${imageIndex}.png`;\n      const file = new File([blob], fileName, { type: 'image/png' });\n\n      console.log('📸 이미지 생성 완료 - fileName:', fileName, '호출할 imageIndex:', imageIndex);\n\n      // 이미지 배열 업데이트\n      handleIndividualImageUpload(imageIndex, [file]);\n      \n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'success' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 3000);\n\n    } catch (error) {\n      console.error('개별 이미지 생성 오류:', error);\n      setGenerationStatus(prev => ({ ...prev, [imageIndex]: 'error' }));\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[imageIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 개별 이미지 삭제 (개선됨)\n  const handleRemoveImage = (imageIndex: number) => {\n    console.log('🗑️ 이미지 삭제 요청 - imageIndex:', imageIndex);\n\n    // 최신 images 상태를 가져와서 삭제\n    const currentImages = imagesRef.current;\n    const newImages = currentImages.filter(img => (img as any).__imageIndex !== imageIndex);\n    \n    // 해당 인덱스의 에러 상태도 함께 제거\n    setUploadErrors(prev => {\n      const newErrors = { ...prev };\n      delete newErrors[imageIndex];\n      return newErrors;\n    });\n    \n    // 생성 상태도 함께 제거\n    setGenerationStatus(prev => {\n      const newStatus = { ...prev };\n      delete newStatus[imageIndex];\n      return newStatus;\n    });\n    \n    console.log('✅ 이미지 삭제 완료 - imageIndex:', imageIndex);\n    console.log('📊 남은 이미지:', newImages.map(img => `${img.name}(index:${(img as any).__imageIndex})`));\n    \n    onChange(newImages, imageUploadMode);\n  };\n\n  // 개별 이미지 다운로드\n  const handleDownloadImage = async (imageIndex: number, image: File) => {\n    try {\n      // 생성된 이미지인지 확인 (filename으로 판단)\n      if (image.name.startsWith('generated_')) {\n        // 백엔드 다운로드 API를 통해 다운로드\n        const link = document.createElement('a');\n        link.href = `/download-image/${image.name}`;\n        link.download = `reels_image_${imageIndex + 1}.png`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        // 업로드된 파일은 직접 다운로드\n        const url = URL.createObjectURL(image);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `reels_image_${imageIndex + 1}_${image.name}`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        URL.revokeObjectURL(url);\n      }\n      console.log('💾 이미지 다운로드 완료 - imageIndex:', imageIndex, 'fileName:', image.name);\n    } catch (error) {\n      console.error('이미지 다운로드 오류:', error);\n    }\n  };\n\n  // 북마크 모달 열기\n  const handleOpenBookmarkModal = (imageIndex: number) => {\n    console.log('🎬 북마크 모달 열기 - imageIndex:', imageIndex);\n    setCurrentBookmarkIndex(imageIndex);\n    setBookmarkModalOpen(true);\n  };\n\n  // 북마크 모달 닫기\n  const handleCloseBookmarkModal = () => {\n    setBookmarkModalOpen(false);\n    setCurrentBookmarkIndex(null);\n  };\n\n  // 북마크 비디오 선택 핸들러\n  const handleSelectBookmarkVideo = async (video: BookmarkVideo) => {\n    if (currentBookmarkIndex === null) return;\n\n    console.log('✅ 북마크 비디오 선택:', video.filename, 'imageIndex:', currentBookmarkIndex);\n\n    try {\n      // 생성 상태 업데이트\n      setGenerationStatus(prev => ({ ...prev, [currentBookmarkIndex]: 'generating' }));\n\n      // 백엔드 API 호출: 북마크 비디오를 Job 폴더로 복사\n      const response = await apiService.copyBookmarkVideo(\n        jobId,\n        video.filename,\n        currentBookmarkIndex\n      );\n\n      if (response.status === 'success') {\n        // 복사된 비디오 파일을 File 객체로 변환하여 이미지 배열에 추가\n        const videoUrl = response.data.file_url;\n        const videoFilename = response.data.filename;\n\n        // 비디오 파일을 Fetch로 가져와서 File 객체 생성\n        const videoResponse = await fetch(videoUrl);\n        if (!videoResponse.ok) {\n          throw new Error('비디오 파일 다운로드에 실패했습니다');\n        }\n\n        const blob = await videoResponse.blob();\n        const file = new File([blob], videoFilename, { type: 'video/mp4' });\n\n        console.log('📸 북마크 비디오 파일 생성 완료 - fileName:', videoFilename, 'imageIndex:', currentBookmarkIndex);\n\n        // 이미지 배열 업데이트\n        handleIndividualImageUpload(currentBookmarkIndex, [file]);\n\n        setGenerationStatus(prev => ({ ...prev, [currentBookmarkIndex]: 'success' }));\n        setTimeout(() => {\n          setGenerationStatus(prev => {\n            const newStatus = { ...prev };\n            delete newStatus[currentBookmarkIndex];\n            return newStatus;\n          });\n        }, 3000);\n\n        console.log('✅ 북마크 비디오 복사 및 업로드 완료');\n      }\n    } catch (error: any) {\n      console.error('❌ 북마크 비디오 선택 오류:', error);\n      setGenerationStatus(prev => ({ ...prev, [currentBookmarkIndex]: 'error' }));\n      setUploadErrors(prev => ({ ...prev, [currentBookmarkIndex]: error.message || '북마크 비디오 불러오기 실패' }));\n\n      setTimeout(() => {\n        setGenerationStatus(prev => {\n          const newStatus = { ...prev };\n          delete newStatus[currentBookmarkIndex];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  // 비디오 미리보기 컴포넌트 (브라우저 직접 재생)\n  const VideoPreview: React.FC<{ file: File }> = memo(({ file }) => {\n    const [videoUrl, setVideoUrl] = useState<string | null>(null);\n\n    useEffect(() => {\n      // 브라우저에서 직접 재생할 수 있도록 URL 생성\n      const url = URL.createObjectURL(file);\n      setVideoUrl(url);\n\n      return () => {\n        if (url) {\n          URL.revokeObjectURL(url);\n        }\n      };\n    }, [file]);\n\n    return (\n      <Box sx={{ position: 'relative' }}>\n        {videoUrl && (\n          <video\n            src={videoUrl}\n            style={{\n              width: '100%',\n              aspectRatio: '1/1',\n              objectFit: 'cover',\n              borderRadius: '8px'\n            }}\n            autoPlay\n            muted\n            loop\n            playsInline\n            controls={false}\n            onError={(e) => {\n              console.error('비디오 재생 오류:', e);\n            }}\n          />\n        )}\n\n        {/* 비디오 아이콘 오버레이 */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 8,\n            left: 8,\n            bgcolor: 'rgba(0,0,0,0.7)',\n            borderRadius: 1,\n            p: 0.5,\n            display: 'flex',\n            alignItems: 'center'\n          }}\n        >\n          <MovieIcon sx={{ fontSize: 16, color: 'white' }} />\n          <Typography variant=\"caption\" color=\"white\" sx={{ ml: 0.5 }}>\n            영상\n          </Typography>\n        </Box>\n      </Box>\n    );\n  });\n\n  // 개별 드래그앤드롭 컴포넌트 (React.memo로 최적화)\n  const IndividualDropZone: React.FC<{\n    imageIndex: number;\n    pair: TextImagePair & { imageIndex: number };\n  }> = memo(({ imageIndex, pair }) => {\n    const onDrop = useCallback((acceptedFiles: File[]) => {\n      handleIndividualImageUpload(imageIndex, acceptedFiles);\n    }, [imageIndex]);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n      onDrop,\n      accept: {\n        'image/*': ['.jpeg', '.jpg', '.png', '.gif', '.webp', '.bmp'],\n        'video/*': ['.mp4', '.mov', '.avi', '.webm', '.mkv']\n      },\n      maxFiles: 1,\n      multiple: false\n    });\n\n    const isGenerating = generationStatus[imageIndex] === 'generating';\n    const generationError = generationStatus[imageIndex] === 'error';\n    const generationSuccess = generationStatus[imageIndex] === 'success';\n    const uploadError = uploadErrors[imageIndex];\n    const isPromptExpanded = promptsExpanded[imageIndex] || false;\n    const currentCustomPrompt = customPrompts[imageIndex];\n\n    // ✅ 심플한 커스텀 프롬프트 핸들러 (복잡한 로컬 상태/디바운스 제거)\n\n    return (\n      <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <CardContent sx={{ flex: 1 }}>\n          {/* 텍스트 표시 */}\n          <Typography variant=\"h6\" gutterBottom sx={{\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            color: 'primary.main',\n            mb: 2\n          }}>\n            {pair.textKey.replace('body', '대사 ').replace('+body', ' + 대사 ')}\n          </Typography>\n\n          {/* 모든 모드: 개별 텍스트박스 */}\n          {pair.originalTexts ? (\n            <Box sx={{ mb: 2 }}>\n              {pair.originalTexts.map((originalText, idx) => {\n                const refKey = `${imageIndex}-${idx}`;\n\n                return (\n                  <TextField\n                    key={`text-${imageIndex}-${idx}`}\n                    fullWidth\n                    multiline\n                    rows={2}\n                    defaultValue={originalText}\n                    inputRef={(el) => {\n                      if (el) textFieldRefs.current[refKey] = el;\n                    }}\n                    label={imageUploadMode === 'per-two-scripts' ? `대사 ${pair.textIndex + idx + 1}` :\n                           imageUploadMode === 'per-script' ? `대사 ${pair.textIndex + 1}` :\n                           `대사 ${idx + 1}`}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{ mb: 1 }}\n                    helperText={idx === 0 ? \"수정된 텍스트는 영상 생성 시 사용됩니다\" : \"\"}\n                  />\n                );\n              })}\n            </Box>\n          ) : (\n            <Typography variant=\"body2\" sx={{\n              mb: 2,\n              p: 1.5,\n              bgcolor: 'grey.50',\n              borderRadius: 1,\n              border: '1px solid',\n              borderColor: 'grey.200',\n              fontSize: '0.8rem',\n              lineHeight: 1.4\n            }}>\n              {pair.textContent}\n            </Typography>\n          )}\n\n          {/* 커스텀 프롬프트 섹션 */}\n          <Box sx={{ mb: 2 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontWeight: 600 }}>\n                AI 생성 옵션\n              </Typography>\n              <IconButton\n                size=\"small\"\n                onClick={() => togglePromptExpanded(imageIndex)}\n                sx={{ p: 0.5 }}\n              >\n                {isPromptExpanded ? <ExpandLess fontSize=\"small\" /> : <ExpandMore fontSize=\"small\" />}\n              </IconButton>\n            </Box>\n\n            <Collapse in={isPromptExpanded}>\n              <Box sx={{ bgcolor: 'rgba(25, 118, 210, 0.04)', p: 1.5, borderRadius: 1, border: '1px solid rgba(25, 118, 210, 0.12)' }}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={currentCustomPrompt?.enabled || false}\n                      onChange={(e) => {\n                        toggleCustomPrompt(imageIndex, e.target.checked);\n                      }}\n                      size=\"small\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"caption\" sx={{ fontWeight: 500 }}>\n                      커스텀 프롬프트 사용\n                    </Typography>\n                  }\n                  sx={{ mb: 1, ml: 0 }}\n                />\n\n                {currentCustomPrompt?.enabled && (\n                  <TextField\n                    key={`prompt-${imageIndex}`}\n                    fullWidth\n                    multiline\n                    rows={2}\n                    size=\"small\"\n                    placeholder=\"이미지 생성을 위한 커스텀 프롬프트를 입력하세요...\"\n                    defaultValue={currentCustomPrompt?.prompt || ''}\n                    inputRef={(el) => {\n                      if (el) customPromptRefs.current[imageIndex] = el;\n                    }}\n                    variant=\"outlined\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        fontSize: '0.75rem',\n                        bgcolor: 'white'\n                      }\n                    }}\n                    helperText=\"실제 영상에서는 기존 대사가 사용되며, 이 프롬프트는 이미지 생성에만 사용됩니다.\"\n                    autoComplete=\"off\"\n                    spellCheck=\"false\"\n                  />\n                )}\n\n                {!currentCustomPrompt?.enabled && (\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ fontStyle: 'italic' }}>\n                    기본 모드: 위의 대사 내용을 기반으로 이미지를 생성합니다.\n                  </Typography>\n                )}\n              </Box>\n            </Collapse>\n          </Box>\n\n          {/* 이미지/비디오 표시 또는 드래그앤드롭 영역 */}\n          {pair.image ? (\n            <Box sx={{ position: 'relative', mb: 2 }}>\n              {pair.image.type.startsWith('video/') ? (\n                <VideoPreview file={pair.image} />\n              ) : (\n                <Box\n                  sx={{\n                    width: '100%',\n                    aspectRatio: '1/1',\n                    backgroundImage: `url(${URL.createObjectURL(pair.image)})`,\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    borderRadius: 1\n                  }}\n                />\n              )}\n              \n              {/* 이미지 컨트롤 버튼들 */}\n              <Box sx={{ \n                position: 'absolute', \n                top: 8, \n                right: 8,\n                display: 'flex',\n                gap: 0.5\n              }}>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleDownloadImage(imageIndex, pair.image!)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 다운로드\"\n                >\n                  <Download color=\"success\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => handleRemoveImage(imageIndex)}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 삭제\"\n                >\n                  <Delete color=\"error\" fontSize=\"small\" />\n                </IconButton>\n                <IconButton\n                  size=\"small\"\n                  onClick={() => {\n                    // ✅ ref에서 현재 프롬프트 값 읽기\n                    const currentPromptValue = customPromptRefs.current[imageIndex]?.value || '';\n                    const isEnabled = currentCustomPrompt?.enabled || false;\n\n                    console.log('🔄 새로고침 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n                    console.log('📝 커스텀 프롬프트 값 (ref에서 읽음):', currentPromptValue);\n\n                    handleIndividualGenerate(\n                      imageIndex,\n                      pair,\n                      currentPromptValue,\n                      isEnabled\n                    );\n                  }}\n                  disabled={isGenerating}\n                  sx={{\n                    bgcolor: 'rgba(255,255,255,0.9)',\n                    '&:hover': { bgcolor: 'rgba(255,255,255,1)' }\n                  }}\n                  title=\"이미지 재생성\"\n                >\n                  {isGenerating ? (\n                    <CircularProgress size={16} />\n                  ) : (\n                    <Refresh color=\"primary\" fontSize=\"small\" />\n                  )}\n                </IconButton>\n              </Box>\n\n              <Typography variant=\"caption\" sx={{ \n                position: 'absolute',\n                bottom: 4,\n                left: 8,\n                bgcolor: 'rgba(0,0,0,0.7)',\n                color: 'white',\n                px: 1,\n                py: 0.5,\n                borderRadius: 1\n              }}>\n                {pair.image.name}\n              </Typography>\n            </Box>\n          ) : (\n            <Box\n              {...getRootProps()}\n              sx={{\n                border: 2,\n                borderColor: isDragActive ? 'primary.main' : 'grey.300',\n                borderStyle: 'dashed',\n                borderRadius: 1,\n                p: 2,\n                textAlign: 'center',\n                cursor: 'pointer',\n                bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n                mb: 2,\n                aspectRatio: '1/1',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                '&:hover': {\n                  borderColor: 'primary.main',\n                  bgcolor: 'action.hover'\n                }\n              }}\n            >\n              <input {...getInputProps()} />\n              <Box sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n                <CloudUpload sx={{ fontSize: 32, color: 'grey.400', mb: 1 }} />\n              </Box>\n              <Typography variant=\"caption\" color=\"text.secondary\">\n                {isDragActive ? '파일을 놓으세요' : '미디어 드래그 또는 클릭'}\n              </Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\" sx={{ display: 'block', mt: 0.5, fontSize: '0.7rem' }}>\n                최대 {imageUploadMode === 'single-for-all' ? '40MB' : '10MB'}\n              </Typography>\n            </Box>\n          )}\n\n          {/* 상태 메시지 */}\n          {isGenerating && (\n            <Alert severity=\"info\" sx={{ mt: 1 }}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <CircularProgress size={16} sx={{ mr: 1 }} />\n                이미지 생성 중...\n              </Box>\n            </Alert>\n          )}\n          \n          {generationSuccess && (\n            <Alert severity=\"success\" sx={{ mt: 1 }}>\n              이미지 생성 완료!\n            </Alert>\n          )}\n          \n          {generationError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              이미지 생성 실패. 다시 시도해주세요.\n            </Alert>\n          )}\n          \n          {uploadError && (\n            <Alert severity=\"error\" sx={{ mt: 1 }}>\n              {uploadError}\n            </Alert>\n          )}\n        </CardContent>\n\n        {/* 하단 액션 버튼 */}\n        <Box sx={{ p: 1.5, pt: 0, display: 'flex', flexDirection: 'column', gap: 1 }}>\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<AutoFixHigh />}\n            onClick={() => {\n              // ✅ ref에서 현재 프롬프트 값 읽기\n              const currentPromptValue = customPromptRefs.current[imageIndex]?.value || '';\n              const isEnabled = currentCustomPrompt?.enabled || false;\n\n              console.log('🖱️ 자동생성 버튼 클릭됨 - imageIndex:', imageIndex, 'pair:', pair);\n              console.log('📝 커스텀 프롬프트 값 (ref에서 읽음):', currentPromptValue);\n              console.log('✅ 커스텀 프롬프트 enabled:', isEnabled);\n\n              handleIndividualGenerate(\n                imageIndex,\n                pair,\n                currentPromptValue,\n                isEnabled\n              );\n            }}\n            disabled={isGenerating}\n            sx={{\n              bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.08)' : 'transparent',\n              borderColor: currentCustomPrompt?.enabled ? 'primary.main' : 'grey.300',\n              color: currentCustomPrompt?.enabled ? 'primary.main' : 'text.primary',\n              '&:hover': {\n                bgcolor: currentCustomPrompt?.enabled ? 'rgba(25, 118, 210, 0.12)' : 'action.hover',\n              }\n            }}\n          >\n            {isGenerating ? '생성중...' : (currentCustomPrompt?.enabled ? '커스텀 프롬프트로 생성' : 'AI 자동생성')}\n          </Button>\n\n          <Button\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<VideoLibrary />}\n            onClick={() => handleOpenBookmarkModal(imageIndex)}\n            disabled={isGenerating}\n            sx={{\n              borderColor: 'secondary.main',\n              color: 'secondary.main',\n              '&:hover': {\n                bgcolor: 'rgba(156, 39, 176, 0.08)',\n                borderColor: 'secondary.main',\n              }\n            }}\n          >\n            동영상 불러오기\n          </Button>\n        </Box>\n      </Card>\n    );\n  });\n\n  return (\n    <Box>\n      <Typography variant=\"h6\" gutterBottom sx={{ mb: 3 }}>\n        텍스트-이미지 매칭 관리\n      </Typography>\n      \n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n        각 텍스트에 대응되는 이미지를 개별적으로 관리할 수 있습니다.\n        드래그앤드롭으로 이미지를 업로드하거나 AI로 자동 생성하세요.\n        <br />\n        <Typography component=\"span\" variant=\"caption\" color=\"text.secondary\">\n          파일 크기 제한: {imageUploadMode === 'single-for-all' ? '최대 40MB' : '각 파일 최대 10MB'}\n        </Typography>\n      </Typography>\n\n      <Grid container spacing={2}>\n        {textImagePairs.map((pair, index) => (\n          <Grid item xs={12} sm={6} md={4} key={`dropzone-${pair.imageIndex}-${pair.textKey}`}>\n            <IndividualDropZone imageIndex={pair.imageIndex} pair={pair} />\n          </Grid>\n        ))}\n      </Grid>\n\n      {textImagePairs.length === 0 && (\n        <Alert severity=\"info\" sx={{ mt: 2 }}>\n          대본을 먼저 작성해주세요.\n        </Alert>\n      )}\n\n      {/* 북마크 비디오 선택 모달 */}\n      <VideoBookmarkModal\n        open={bookmarkModalOpen}\n        onClose={handleCloseBookmarkModal}\n        onSelect={handleSelectBookmarkVideo}\n      />\n    </Box>\n  );\n});\n\n// Display name for debugging\nTextImagePairManager.displayName = 'TextImagePairManager';\n\nexport default TextImagePairManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}